2024-06-05 14:26:45.060 | INFO     | __main__:main:27 - Creating order...
2024-06-05 14:29:47.588 | INFO     | __main__:main:27 - Creating order...
2024-06-05 14:31:19.793 | INFO     | __main__:main:27 - Creating order...
2024-06-05 14:37:19.931 | INFO     | __main__:main:30 - Creating order...
2024-06-05 14:37:19.931 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 14:37:19.947 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 3396, 'limit_price': '60000000000', 'amount': '10000', 'salt': '350218900', 'signature': '0xc2b841d45b5cb6b8f644fce6f40a0b2f35a5244bb4ae231eecde76e6ed6b412f564c9bbe56afaf795de3ea2b568d0b56689f485772d82e3d016c02e4ec98c2491c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717591039}
2024-06-05 14:37:21.569 | INFO     | __main__:main:41 - {'error': 'UNAUTHORIZED'}
2024-06-05 14:37:21.570 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 14:37:23.188 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 14:44:04.056 | INFO     | __main__:main:30 - Creating order...
2024-06-05 14:44:04.057 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 14:44:04.087 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 3396, 'limit_price': '60000000000', 'amount': '10000', 'salt': '3701935001', 'signature': '0x23469421e899ec30b184740fa34b47425286aaa7499ef361b9c397cbe47cf8d86a87e49b801be8c2d69dbb01e55dce39e35f0ca09abac87504b2bd04ca9bf8d91b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717591444}
2024-06-05 14:44:05.690 | INFO     | __main__:main:41 - {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-05 14:44:05.690 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 14:44:07.285 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 15:15:30.563 | INFO     | __main__:main:30 - Creating order...
2024-06-05 15:15:30.563 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 15:15:30.582 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 3396, 'limit_price': '60000000000', 'amount': '10000', 'salt': '7134821125', 'signature': '0x30d7c9f427d5c64c126837916a22b0b4e64fc16c00dad6fb13cbcc33c0047dbe692cb7f12eeb5b2b75b5edee0ff43ca62693842e28835479d3d5c0e9966997251c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717593330}
2024-06-05 15:15:32.269 | INFO     | __main__:main:41 - {'error': 'INSUFFICIENT_AVAILABLE_MARGIN'}
2024-06-05 15:15:32.269 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 15:15:33.861 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 15:17:37.602 | INFO     | __main__:main:30 - Creating order...
2024-06-05 15:17:37.602 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 15:17:37.631 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 3396, 'limit_price': '60000000000', 'amount': '1000', 'salt': '2910838152', 'signature': '0xcc534a5f7f1ddb42ef1cb1b00724cba3636cccaca5b8e8ffe195dd630e0ef3cc40131ca4fd8bc9fdf8300539e9ac7a6b21c14825fa8fcf6b7608d65ef91da9301b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717593457}
2024-06-05 15:17:39.425 | INFO     | __main__:main:41 - {'error': 'INSUFFICIENT_AVAILABLE_MARGIN'}
2024-06-05 15:17:39.432 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 15:17:40.910 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 15:35:26.947 | INFO     | __main__:main:30 - Creating order...
2024-06-05 15:35:26.948 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 15:35:26.987 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '60000000000', 'amount': '1000', 'salt': '7839794283', 'signature': '0xe37d99371543177a6cf526dec1547b6dea3ad21a569c6d0465083127803ac1254602d9ce262cd303ccb127be627d455c4949bc73dd00fd0e552acfdc15c0e9571b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717594526}
2024-06-05 15:35:28.646 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 15:35:28.647 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 15:35:30.319 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 15:35:45.283 | INFO     | __main__:main:30 - Creating order...
2024-06-05 15:35:45.283 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 15:35:45.297 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '60000000000', 'amount': '1000', 'salt': '3159343880', 'signature': '0x19bd2724f33cc8525f0af9fe5d1c9b17857db16317a87df1ef54083ebbf3b1d73200ea89647136884b93ce8f1968761d223f39dd4346d0f79b8f36f1f5d2df121b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717594545}
2024-06-05 15:35:46.802 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 15:35:46.803 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 15:35:48.491 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 15:48:52.619 | INFO     | __main__:main:30 - Creating order...
2024-06-05 15:48:52.620 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 15:48:52.637 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000', 'amount': '1000', 'salt': '7654288970', 'signature': '0xc7fac36f79160e8db7b78b514ea426080c4633f5a4623fae9a48b4014bfba6c80a133fbe121c8b0b76ac1384054c84b6596a3c4428c07479e0117aca418401ea1b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717595332}
2024-06-05 15:48:54.239 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 15:48:54.240 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 15:48:55.719 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 16:02:56.529 | INFO     | __main__:main:30 - Creating order...
2024-06-05 16:02:56.530 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 16:02:56.544 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000', 'amount': '10000', 'salt': '7109742841', 'signature': '0x6751d2d634367425bbc8bd8d371136050f57c9b430099f8ba7d38a6a469d8ffd32de7a7212e8859edaf8d64942f001ca8fd5754298cd6b38e06d3637722e3e4e1b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717596176}
2024-06-05 16:02:58.193 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 16:02:58.193 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 16:02:59.911 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 16:12:06.870 | INFO     | __main__:main:30 - Creating order...
2024-06-05 16:12:06.870 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 16:12:06.883 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '4391640625', 'signature': '0xeb0ee0c504a78fd0d2b51e81b00a06f227c1ab2e72da2792658356209d68d9e96608fe1d127ad877771c0769b21fa8c436acdd9c4287532a29a6cf2da2a0955e1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717596726}
2024-06-05 16:12:08.550 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 16:12:08.550 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 16:12:10.114 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 16:12:11.558 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 16:12:13.123 | INFO     | __main__:main:61 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 16:16:19.661 | INFO     | __main__:main:30 - Creating order...
2024-06-05 16:16:19.662 | DEBUG    | __main__:main:33 - Sending order request...
2024-06-05 16:16:19.664 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 16:16:19.683 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '8002007561', 'signature': '0x7a407ac4d2144d03b5d3f0dce58d01860dd27d933fed07e614577e4c77ded5cc019a30724968383b0d996f88a834c3f5bfd1b54ac78a2e7e8294f31dc18625fd1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717596979}
2024-06-05 16:16:21.278 | INFO     | __main__:main:42 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 16:16:21.279 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 16:16:22.888 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 16:19:48.660 | INFO     | __main__:main:30 - Creating order...
2024-06-05 16:19:48.660 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 16:19:48.672 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '1749124386', 'signature': '0x10587d80941f130251565689180e872357de3b756c23142f42aa9dd4713c4daa6c0c9d05218aa1971753485718d5d846973a6bd0ebd658e27ac9d6d7fcca163a1b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717597188}
2024-06-05 16:19:50.257 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 16:19:50.258 | INFO     | __main__:main:44 - Opening WebSocket connection...
2024-06-05 16:19:50.258 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 16:19:51.865 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 16:19:52.871 | INFO     | __main__:main:46 - WebSocket connection opened
2024-06-05 16:26:46.439 | INFO     | __main__:main:30 - Creating order...
2024-06-05 16:26:46.440 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 16:26:46.458 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '2244576496', 'signature': '0x752260eeb87a51bde3d48ad8ff258d740e622d443d3b8a55474b79505ac2d85d11f623f61ffbc9ef1909dc836ee3a6d71872d96521491cae8c65112231f5f96f1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717597606}
2024-06-05 16:26:48.088 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 16:26:48.090 | INFO     | __main__:main:44 - Opening WebSocket connection...
2024-06-05 16:26:48.102 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 16:26:49.590 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 16:26:50.591 | INFO     | __main__:main:46 - WebSocket connection opened
2024-06-05 16:42:06.168 | INFO     | __main__:main:30 - Creating order...
2024-06-05 16:42:06.169 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 16:42:06.169 | ERROR    | __main__:main:68 - An error occurred: invalid literal for int() with base 16: 'API Key 1'
Traceback (most recent call last):

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 71, in <module>
    asyncio.run(main())
    │       │   └ <function main at 0x7cb79c70e2a0>
    │       └ <function run at 0x7cb79b36c9a0>
    └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object main at 0x7cb79b10b9a0>
           │      └ <function Runner.run at 0x7cb79b208360>
           └ <asyncio.runners.Runner object at 0x7cb79874fdd0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<main() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:68> cb=[_run_until...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7cb79b3f9f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7cb79874fdd0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7cb79b3f9ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7cb79b3fbce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7cb79b342200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7cb7981b0850>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7cb7981b0850>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7cb7981b0850>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7cb7981b0850>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in main
    response = aevo.rest_create_order(
               │    └ <function AevoClient.rest_create_order at 0x7cb797b8a7a0>
               └ <aevo.AevoClient object at 0x7cb7998b6060>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 213, in rest_create_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7cb797b8b240>
                     └ <aevo.AevoClient object at 0x7cb7998b6060>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7cb797b8b560>
                                └ <aevo.AevoClient object at 0x7cb7998b6060>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7cb797b84bf0>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7cb797b89620>
                     │      └ <aevo.Order object at 0x7cb799a700e0>
                     └ <eth_hash.main.Keccak256 object at 0x7cb79ac7e000>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7cb797b89300>
                           │      │               └ <aevo.Order object at 0x7cb799a700e0>
                           │      └ <function EIP712Struct.hash_struct at 0x7cb797b89300>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7cb797b84bf0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7cb797b88e00>
           │                │    │            └ <aevo.Order object at 0x7cb799a700e0>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7cb797b89260>)>
           │                └ <aevo.Order object at 0x7cb799a700e0>
           └ <function keccak at 0x7cb79a9907c0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'maker'
    │              │      │   │            │    └ {'maker': 'API Key 1', 'isBuy': True, 'limitPrice': 3800000000000000, 'amount': 10000, 'salt': 8301492978, 'instrument': 12, ...
    │              │      │   │            └ <aevo.Order object at 0x7cb799a700e0>
    │              │      │   └ <function EIP712Type.encode_value at 0x7cb797b67f60>
    │              │      └ <eip712_structs.Address object at 0x7cb79b2e3a70>
    │              └ <method 'append' of 'list' objects>
    └ []

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ 'API Key 1'
           │    └ <function Address._encode_value at 0x7cb797b88540>
           └ <eip712_structs.Address object at 0x7cb79b2e3a70>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 98, in _encode_value
    v = to_int(hexstr=value)
        │             └ 'API Key 1'
        └ <function to_int at 0x7cb79a9dac00>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/eth_utils/decorators.py", line 76, in wrapper
    return to_wrap(*args, **kwargs)
           │        │       └ {'hexstr': 'API Key 1'}
           │        └ ()
           └ <function to_int at 0x7cb79a9dab60>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/eth_utils/conversions.py", line 70, in to_int
    return int(hexstr, 16)
               └ 'API Key 1'

ValueError: invalid literal for int() with base 16: 'API Key 1'
2024-06-05 17:03:11.762 | INFO     | __main__:main:30 - Creating order...
2024-06-05 17:03:11.762 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 17:03:11.808 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '1867907395', 'signature': '0x88e318225e279cdab4a6dadb1b695603fcba06c75091ab19d6c164950459ca1532cfc10adcd70cf955ea93ad2c5c46a7eebb0be2de282c73a91e93f1d53f00121b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717599791}
2024-06-05 17:03:13.460 | INFO     | __main__:main:41 - {'error': 'CONFIG_NOT_SET'}
2024-06-05 17:03:13.460 | INFO     | __main__:main:44 - Opening WebSocket connection...
2024-06-05 17:03:13.461 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:03:15.067 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:03:16.072 | INFO     | __main__:main:46 - WebSocket connection opened
2024-06-05 17:06:58.709 | INFO     | __main__:main:30 - Creating order...
2024-06-05 17:06:58.709 | INFO     | __main__:main:33 - Sending order request...
2024-06-05 17:06:58.710 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 17:06:58.722 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '5606382289', 'signature': '0xb54155a646d9efa363c52fc7a32839d4959debf588eed58dd64997c94c29a79b081e9afaac12f01e05e50e13646fa1e373dedaa035ccb43d3123c9b83eed668b1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717600018}
2024-06-05 17:07:00.368 | INFO     | __main__:main:42 - Order request sent successfully
2024-06-05 17:07:00.368 | INFO     | __main__:main:43 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-05 17:07:00.369 | INFO     | __main__:main:46 - Opening WebSocket connection...
2024-06-05 17:07:00.369 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:07:02.097 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:07:03.100 | INFO     | __main__:main:48 - WebSocket connection opened
2024-06-05 17:15:23.643 | INFO     | __main__:main:30 - Creating order...
2024-06-05 17:15:23.644 | INFO     | __main__:main:33 - Sending order request...
2024-06-05 17:15:23.644 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 17:15:23.661 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '3535954291', 'signature': '0xdb3d7dd6bf0f9df62a14782101d637c7dc8d76901620d214b6f724f5adb7a9d84dedffece55a15591645620f0dcd2b8411331fa0bc439cf319a4c235803f67241c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717600523}
2024-06-05 17:15:25.247 | INFO     | __main__:main:42 - Order request sent successfully
2024-06-05 17:15:25.248 | INFO     | __main__:main:43 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-05 17:15:25.248 | INFO     | __main__:main:46 - Opening WebSocket connection...
2024-06-05 17:15:25.248 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:15:26.812 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:15:27.815 | INFO     | __main__:main:48 - WebSocket connection opened
2024-06-05 17:18:12.778 | INFO     | __main__:main:30 - Creating order...
2024-06-05 17:18:12.778 | INFO     | __main__:main:33 - Sending order request...
2024-06-05 17:18:12.779 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-06-05 17:18:12.791 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '2724260692', 'signature': '0xeb5e588061b6d510a57c5752f5a6bf9a085e0708b4243e9bc4cac7278b55bb686945943b4d347dc4dac3b549e98ae780695ee168902795f93e4ca018f09966221c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717600692}
2024-06-05 17:18:14.587 | INFO     | __main__:main:42 - Order request sent successfully
2024-06-05 17:18:14.592 | INFO     | __main__:main:43 - Response: {'error': 'UNAUTHORIZED'}
2024-06-05 17:18:14.592 | INFO     | __main__:main:46 - Opening WebSocket connection...
2024-06-05 17:18:14.593 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:18:21.557 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws-testnet.aevo.xyz...
2024-06-05 17:18:22.573 | INFO     | __main__:main:48 - WebSocket connection opened
2024-06-05 17:18:23.233 | INFO     | __main__:main:59 - Current price is below threshold. Creating market order...
2024-06-05 17:18:23.234 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-06-05 17:18:24.816 | INFO     | __main__:main:66 - Market order created successfully
2024-06-05 17:18:24.817 | INFO     | __main__:main:67 - Response: {'error': 'UNAUTHORIZED'}
2024-06-05 17:18:55.328 | INFO     | __main__:main:30 - Creating order...
2024-06-05 17:18:55.328 | INFO     | __main__:main:33 - Sending order request...
2024-06-05 17:18:55.329 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 17:18:55.346 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3800000000000000', 'amount': '10000', 'salt': '1814761891', 'signature': '0x1187f7a2b2cac2832b0ff3314d4bc99590569aed1b7612b8be844df9da2e21964b9d9636704f2deabd30171c8d13d35964ede2bc2412ea876d341b7c399bbdaf1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717600735}
2024-06-05 17:18:56.959 | INFO     | __main__:main:42 - Order request sent successfully
2024-06-05 17:18:56.960 | INFO     | __main__:main:43 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-05 17:18:56.960 | INFO     | __main__:main:46 - Opening WebSocket connection...
2024-06-05 17:18:56.961 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:18:58.530 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:18:59.532 | INFO     | __main__:main:48 - WebSocket connection opened
2024-06-05 17:32:52.530 | ERROR    | aevo:read_messages:177 - Aevo websocket connection close
2024-06-05 17:32:52.530 | ERROR    | aevo:read_messages:178 - no close frame received or sent
2024-06-05 17:32:52.589 | ERROR    | aevo:read_messages:179 - Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 963, in transfer_data
    message = await self.read_message()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1033, in read_message
    frame = await self.read_data_frame(max_size=self.max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1108, in read_data_frame
    frame = await self.read_frame(max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1165, in read_frame
    frame = await Frame.read(
            ^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/framing.py", line 68, in read
    data = await reader(2)
           ^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/streams.py", line 750, in readexactly
    raise exceptions.IncompleteReadError(incomplete, n)
asyncio.exceptions.IncompleteReadError: 0 bytes read on a total of 2 expected bytes

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 167, in read_messages
    message = await asyncio.wait_for(
              ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 568, in recv
    await self.ensure_open()
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 934, in ensure_open
    raise self.connection_closed_exc()
websockets.exceptions.ConnectionClosedError: no close frame received or sent

2024-06-05 17:32:52.590 | INFO     | aevo:reconnect:150 - Trying to reconnect Aevo websocket...
2024-06-05 17:32:52.590 | INFO     | aevo:close_connection:156 - Closing connection...
2024-06-05 17:32:52.591 | INFO     | aevo:close_connection:158 - Connection closed
2024-06-05 17:32:52.591 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:32:54.150 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:37:56.330 | ERROR    | aevo:read_messages:177 - Aevo websocket connection close
2024-06-05 17:37:56.330 | ERROR    | aevo:read_messages:178 - no close frame received or sent
2024-06-05 17:37:56.334 | ERROR    | aevo:read_messages:179 - Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 963, in transfer_data
    message = await self.read_message()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1033, in read_message
    frame = await self.read_data_frame(max_size=self.max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1108, in read_data_frame
    frame = await self.read_frame(max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1165, in read_frame
    frame = await Frame.read(
            ^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/framing.py", line 68, in read
    data = await reader(2)
           ^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/streams.py", line 750, in readexactly
    raise exceptions.IncompleteReadError(incomplete, n)
asyncio.exceptions.IncompleteReadError: 0 bytes read on a total of 2 expected bytes

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 167, in read_messages
    message = await asyncio.wait_for(
              ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 568, in recv
    await self.ensure_open()
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 939, in ensure_open
    raise self.connection_closed_exc()
websockets.exceptions.ConnectionClosedError: no close frame received or sent

2024-06-05 17:37:56.337 | INFO     | aevo:reconnect:150 - Trying to reconnect Aevo websocket...
2024-06-05 17:37:56.339 | INFO     | aevo:close_connection:156 - Closing connection...
2024-06-05 17:37:56.340 | INFO     | aevo:close_connection:158 - Connection closed
2024-06-05 17:37:56.340 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:37:58.412 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:42:58.744 | ERROR    | aevo:read_messages:177 - Aevo websocket connection close
2024-06-05 17:42:58.745 | ERROR    | aevo:read_messages:178 - no close frame received or sent
2024-06-05 17:42:58.749 | ERROR    | aevo:read_messages:179 - Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 963, in transfer_data
    message = await self.read_message()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1033, in read_message
    frame = await self.read_data_frame(max_size=self.max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1108, in read_data_frame
    frame = await self.read_frame(max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1165, in read_frame
    frame = await Frame.read(
            ^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/framing.py", line 68, in read
    data = await reader(2)
           ^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/streams.py", line 750, in readexactly
    raise exceptions.IncompleteReadError(incomplete, n)
asyncio.exceptions.IncompleteReadError: 0 bytes read on a total of 2 expected bytes

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 167, in read_messages
    message = await asyncio.wait_for(
              ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 568, in recv
    await self.ensure_open()
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 934, in ensure_open
    raise self.connection_closed_exc()
websockets.exceptions.ConnectionClosedError: no close frame received or sent

2024-06-05 17:42:58.750 | INFO     | aevo:reconnect:150 - Trying to reconnect Aevo websocket...
2024-06-05 17:42:58.750 | INFO     | aevo:close_connection:156 - Closing connection...
2024-06-05 17:42:58.750 | INFO     | aevo:close_connection:158 - Connection closed
2024-06-05 17:42:58.752 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:43:00.383 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:48:00.801 | ERROR    | aevo:read_messages:177 - Aevo websocket connection close
2024-06-05 17:48:00.802 | ERROR    | aevo:read_messages:178 - no close frame received or sent
2024-06-05 17:48:00.811 | ERROR    | aevo:read_messages:179 - Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 963, in transfer_data
    message = await self.read_message()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1033, in read_message
    frame = await self.read_data_frame(max_size=self.max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1108, in read_data_frame
    frame = await self.read_frame(max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1165, in read_frame
    frame = await Frame.read(
            ^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/framing.py", line 68, in read
    data = await reader(2)
           ^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/streams.py", line 750, in readexactly
    raise exceptions.IncompleteReadError(incomplete, n)
asyncio.exceptions.IncompleteReadError: 0 bytes read on a total of 2 expected bytes

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 167, in read_messages
    message = await asyncio.wait_for(
              ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 568, in recv
    await self.ensure_open()
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 939, in ensure_open
    raise self.connection_closed_exc()
websockets.exceptions.ConnectionClosedError: no close frame received or sent

2024-06-05 17:48:00.812 | INFO     | aevo:reconnect:150 - Trying to reconnect Aevo websocket...
2024-06-05 17:48:00.813 | INFO     | aevo:close_connection:156 - Closing connection...
2024-06-05 17:48:00.815 | INFO     | aevo:close_connection:158 - Connection closed
2024-06-05 17:48:00.817 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:48:02.805 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:53:03.215 | ERROR    | aevo:read_messages:177 - Aevo websocket connection close
2024-06-05 17:53:03.216 | ERROR    | aevo:read_messages:178 - no close frame received or sent
2024-06-05 17:53:03.218 | ERROR    | aevo:read_messages:179 - Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 963, in transfer_data
    message = await self.read_message()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1033, in read_message
    frame = await self.read_data_frame(max_size=self.max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1108, in read_data_frame
    frame = await self.read_frame(max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1165, in read_frame
    frame = await Frame.read(
            ^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/framing.py", line 68, in read
    data = await reader(2)
           ^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/streams.py", line 750, in readexactly
    raise exceptions.IncompleteReadError(incomplete, n)
asyncio.exceptions.IncompleteReadError: 0 bytes read on a total of 2 expected bytes

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 167, in read_messages
    message = await asyncio.wait_for(
              ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 568, in recv
    await self.ensure_open()
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 939, in ensure_open
    raise self.connection_closed_exc()
websockets.exceptions.ConnectionClosedError: no close frame received or sent

2024-06-05 17:53:03.221 | INFO     | aevo:reconnect:150 - Trying to reconnect Aevo websocket...
2024-06-05 17:53:03.221 | INFO     | aevo:close_connection:156 - Closing connection...
2024-06-05 17:53:03.221 | INFO     | aevo:close_connection:158 - Connection closed
2024-06-05 17:53:03.222 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:53:04.804 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:58:05.151 | ERROR    | aevo:read_messages:177 - Aevo websocket connection close
2024-06-05 17:58:05.152 | ERROR    | aevo:read_messages:178 - no close frame received or sent
2024-06-05 17:58:05.153 | ERROR    | aevo:read_messages:179 - Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 963, in transfer_data
    message = await self.read_message()
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1033, in read_message
    frame = await self.read_data_frame(max_size=self.max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1108, in read_data_frame
    frame = await self.read_frame(max_size)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 1165, in read_frame
    frame = await Frame.read(
            ^^^^^^^^^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/framing.py", line 68, in read
    data = await reader(2)
           ^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/streams.py", line 750, in readexactly
    raise exceptions.IncompleteReadError(incomplete, n)
asyncio.exceptions.IncompleteReadError: 0 bytes read on a total of 2 expected bytes

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 167, in read_messages
    message = await asyncio.wait_for(
              ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.12/asyncio/tasks.py", line 520, in wait_for
    return await fut
           ^^^^^^^^^
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 568, in recv
    await self.ensure_open()
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/websockets/legacy/protocol.py", line 934, in ensure_open
    raise self.connection_closed_exc()
websockets.exceptions.ConnectionClosedError: no close frame received or sent

2024-06-05 17:58:05.154 | INFO     | aevo:reconnect:150 - Trying to reconnect Aevo websocket...
2024-06-05 17:58:05.154 | INFO     | aevo:close_connection:156 - Closing connection...
2024-06-05 17:58:05.154 | INFO     | aevo:close_connection:158 - Connection closed
2024-06-05 17:58:05.154 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:58:06.713 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:58:47.942 | INFO     | __main__:main:30 - Creating order...
2024-06-05 17:58:47.943 | INFO     | __main__:main:33 - Sending order request...
2024-06-05 17:58:47.943 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-05 17:58:47.955 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3809680000000000', 'amount': '10000', 'salt': '901283459', 'signature': '0x67fdf4f815f6d3f7f42e05681dad5a97075555afd693c47d4229fe3485b3be0b26158ef63cc249b44a253b619a70f9d270f016f816b59c1e11538a17107d653f1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1717603127}
2024-06-05 17:58:49.622 | INFO     | __main__:main:42 - Order request sent successfully
2024-06-05 17:58:49.623 | INFO     | __main__:main:43 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-05 17:58:49.623 | INFO     | __main__:main:46 - Opening WebSocket connection...
2024-06-05 17:58:49.623 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-05 17:58:51.055 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-05 17:58:52.057 | INFO     | __main__:main:48 - WebSocket connection opened
2024-06-12 14:52:33.197 | INFO     | __main__:main:30 - Creating order...
2024-06-12 14:52:33.215 | INFO     | __main__:main:33 - Sending order request...
2024-06-12 14:52:33.215 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-12 14:52:33.234 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 12, 'limit_price': '3709680000000000', 'amount': '10000', 'salt': '1116146756', 'signature': '0x21bcf1d8b0df9669f42ea99c9ac960cc4bcdc7a57e18a656ff383fc64f051cd164c8989ef2ff333532da8a71c082b2a6d715ec31d92caef25496eab41642b09f1b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1718196753}
2024-06-12 14:52:34.862 | INFO     | __main__:main:42 - Order request sent successfully
2024-06-12 14:52:34.863 | INFO     | __main__:main:43 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-12 14:52:34.863 | INFO     | __main__:main:46 - Opening WebSocket connection...
2024-06-12 14:52:34.863 | INFO     | aevo:open_connection:118 - Opening Aevo websocket connection...
2024-06-12 14:52:36.383 | DEBUG    | aevo:open_connection:127 - Connecting to wss://ws.aevo.xyz...
2024-06-12 14:52:37.385 | INFO     | __main__:main:48 - WebSocket connection opened
2024-06-12 14:52:37.798 | INFO     | __main__:main:59 - Current price is below threshold. Creating market order...
2024-06-12 14:52:37.799 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-12 14:52:39.246 | INFO     | __main__:main:66 - Market order created successfully
2024-06-12 14:52:39.247 | INFO     | __main__:main:67 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-12 15:04:53.906 | INFO     | __main__:main:30 - Creating market order...
2024-06-12 15:04:53.907 | INFO     | __main__:main:33 - Sending market order request...
2024-06-12 15:04:53.908 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-12 15:04:55.407 | INFO     | __main__:main:40 - Market order (buy) request sent successfully
2024-06-12 15:04:55.408 | INFO     | __main__:main:41 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-12 15:04:56.410 | INFO     | __main__:main:46 - Creating market sell order...
2024-06-12 15:04:56.410 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-12 15:04:57.859 | INFO     | __main__:main:53 - Market order (sell) request sent successfully
2024-06-12 15:04:57.860 | INFO     | __main__:main:54 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-12 20:00:41.368 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-12 20:00:41.406 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: 'AevoClient' object has no attribute 'rest_close_position'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7df10d7932e0>
    └ <Thread(Thread-1 (process_request_thread), started daemon 138474172712640)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7df10d792fc0>
    └ <Thread(Thread-1 (process_request_thread), started daemon 138474172712640)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 138474172712640)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 40880)>, ('10.0.2.15', 40880))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 138474172712640)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7df108e348c0>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 138474172712640)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 40880)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 40880)>
    │    └ <function BaseServer.finish_request at 0x7df109b753a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df108e348c0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df108e348c0>
    │    │                   │        └ ('10.0.2.15', 40880)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 40880)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df108e348c0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7df109573600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df108ed2480>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7df109b77b00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df108ed2480>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7df108ed2480>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df108e348c0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7df108ed2480>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7df108ddce00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df108ddcd60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df108ddcd60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7df108da8f40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7df108da8680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7df108da85e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7df108dabf60>, 'buy': <function buy at 0x7df108ddc0e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7df108da8860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x7df108dabce0>
             │       └ <function run at 0x7df10cf689a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7df108d9e500>
           │      └ <function Runner.run at 0x7df10ce08360>
           └ <asyncio.runners.Runner object at 0x7df108dadfa0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7df10cff5f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7df108dadfa0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7df10cff5ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7df10cff7ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7df10cf42200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df108f34bb0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df108f34bb0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df108f34bb0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df108f34bb0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.rest_close_position(
               └ <aevo.AevoClient object at 0x7df10b7617c0>

AttributeError: 'AevoClient' object has no attribute 'rest_close_position'
2024-06-15 11:02:27.229 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 11:02:27.258 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:02:29.119 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 11:02:29.122 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:02:29.145 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 11:02:29.146 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:02:30.813 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 11:02:30.814 | INFO     | __main__:sell_market:54 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:02:30.819 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 11:02:30.820 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: 'AevoClient' object has no attribute 'rest_close_position'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7df8d50932e0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7df8d5092fc0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 138507586635456)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35672)>, ('10.0.2.15', 35672))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 138507586635456)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 35672)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35672)>
    │    └ <function BaseServer.finish_request at 0x7df8d15a13a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
    │    │                   │        └ ('10.0.2.15', 35672)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35672)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7df8d0f9b600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d1587080>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7df8d15a3b00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d1587080>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7df8d1587080>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d1587080>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7df8d0604e00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df8d0604d60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df8d0604d60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7df8d07d0f40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7df8d07d0680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7df8d07d05e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7df8d07d3f60>, 'buy': <function buy at 0x7df8d06040e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7df8d07d0860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x7df8d07d3ce0>
             │       └ <function run at 0x7df8d4dc09a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7df8d07c6180>
           │      └ <function Runner.run at 0x7df8d470c360>
           └ <asyncio.runners.Runner object at 0x7df8d07d5d30>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7df8d4701f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7df8d07d5d30>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7df8d4701ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7df8d4703ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7df8d4d9a200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d6a70>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d6a70>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d6a70>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d6a70>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.rest_close_position(
               └ <aevo.AevoClient object at 0x7df8d1ba0b60>

AttributeError: 'AevoClient' object has no attribute 'rest_close_position'
2024-06-15 11:14:14.862 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 11:14:14.865 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:14:16.532 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 11:14:16.534 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:14:16.552 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 11:14:16.553 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:14:20.299 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 11:14:20.300 | INFO     | __main__:sell_market:54 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:14:20.327 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 11:14:20.328 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: 'AevoClient' object has no attribute 'rest_close_position'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7df8d50932e0>
    └ <Thread(Thread-6 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7df8d5092fc0>
    └ <Thread(Thread-6 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 138507586635456)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 38372)>, ('10.0.2.15', 38372))
    │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 138507586635456)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>>
    └ <Thread(Thread-6 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 38372)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 38372)>
    │    └ <function BaseServer.finish_request at 0x7df8d15a13a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
    │    │                   │        └ ('10.0.2.15', 38372)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 38372)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7df8d0f9b600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d3b97530>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7df8d15a3b00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d3b97530>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7df8d3b97530>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d3b97530>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7df8d4777a60>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df8d156fec0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df8d156fec0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7df8d07d0f40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7df8d07d0680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7df8d07d05e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7df8d07d3f60>, 'buy': <function buy at 0x7df8d06040e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7df8d07d0860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x7df8d07d3ce0>
             │       └ <function run at 0x7df8d4dc09a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7df8d06d03c0>
           │      └ <function Runner.run at 0x7df8d470c360>
           └ <asyncio.runners.Runner object at 0x7df8d07d68a0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-16' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7df8d4701f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7df8d07d68a0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7df8d4701ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7df8d4703ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7df8d4d9a200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d7940>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d7940>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d7940>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d07d7940>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.rest_close_position(
               └ <aevo.AevoClient object at 0x7df8d1ba0b60>

AttributeError: 'AevoClient' object has no attribute 'rest_close_position'
2024-06-15 11:14:37.438 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 11:14:37.442 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:14:38.931 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 11:14:38.932 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:14:38.937 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 11:14:38.937 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:14:40.407 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 11:14:40.408 | INFO     | __main__:sell_market:54 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:14:40.428 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 11:14:40.428 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: 'AevoClient' object has no attribute 'rest_close_position'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7df8d50932e0>
    └ <Thread(Thread-9 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7df8d5092fc0>
    └ <Thread(Thread-9 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 138507586635456)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56634)>, ('10.0.2.15', 56634))
    │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 138507586635456)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>>
    └ <Thread(Thread-9 (process_request_thread), started daemon 138507586635456)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 56634)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56634)>
    │    └ <function BaseServer.finish_request at 0x7df8d15a13a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
    │    │                   │        └ ('10.0.2.15', 56634)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56634)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7df8d0f9b600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d07d7e00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7df8d15a3b00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d07d7e00>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7df8d07d7e00>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7df8d2cd19a0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7df8d07d7e00>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7df8d0605800>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df8d0605bc0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7df8d0605bc0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7df8d07d0f40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7df8d07d0680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7df8d07d05e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7df8d07d3f60>, 'buy': <function buy at 0x7df8d06040e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7df8d07d0860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x7df8d07d3ce0>
             │       └ <function run at 0x7df8d4dc09a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7df8d06d18c0>
           │      └ <function Runner.run at 0x7df8d470c360>
           └ <asyncio.runners.Runner object at 0x7df8d06d4500>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-25' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7df8d4701f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7df8d06d4500>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7df8d4701ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7df8d4703ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7df8d4d9a200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d06d4f10>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d06d4f10>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d06d4f10>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7df8d06d4f10>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.rest_close_position(
               └ <aevo.AevoClient object at 0x7df8d1ba0b60>

AttributeError: 'AevoClient' object has no attribute 'rest_close_position'
2024-06-15 11:32:45.921 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 11:32:45.923 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:32:47.468 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 11:32:47.470 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:32:47.489 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 11:32:47.489 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 11:32:48.973 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 11:32:48.974 | INFO     | __main__:sell_market:54 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 11:32:48.981 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 11:32:48.982 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: 'AevoClient' object has no attribute 'rest_close_position'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7276bdd932e0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 125854222911168)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7276bdd92fc0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 125854222911168)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 125854222911168)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 54602)>, ('10.0.2.15', 54602))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 125854222911168)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7276bc86f830>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 125854222911168)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 54602)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 54602)>
    │    └ <function BaseServer.finish_request at 0x7276ba7a13a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7276bc86f830>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7276bc86f830>
    │    │                   │        └ ('10.0.2.15', 54602)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 54602)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7276bc86f830>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7276ba19f600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7276ba75bf50>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7276ba7a3b00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7276ba75bf50>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7276ba75bf50>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7276bc86f830>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7276ba75bf50>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7276b9308e00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7276b9308d60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7276b9308d60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7276b94d4f40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7276b94d4680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7276b94d45e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7276b94d7f60>, 'buy': <function buy at 0x7276b93080e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7276b94d4860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x7276b94d7ce0>
             │       └ <function run at 0x7276bd5689a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7276b94ca180>
           │      └ <function Runner.run at 0x7276bd408360>
           └ <asyncio.runners.Runner object at 0x7276b94e1d60>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7276bd5f5f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7276b94e1d60>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7276bd5f5ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7276bd5f7ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7276bd542200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7276b94e2350>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7276b94e2350>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7276b94e2350>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7276b94e2350>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.rest_close_position(
               └ <aevo.AevoClient object at 0x7276b95617c0>

AttributeError: 'AevoClient' object has no attribute 'rest_close_position'
2024-06-15 12:52:26.232 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 12:52:26.270 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 12:52:27.755 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 12:52:27.756 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 12:52:27.787 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 12:52:27.787 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 12:52:29.336 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 12:52:29.337 | INFO     | __main__:sell_market:54 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 12:52:29.342 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 12:52:29.342 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: 'AevoClient' object has no attribute 'rest_close_position'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73aa23c972e0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 127174489147072)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73aa23c96fc0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 127174489147072)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 127174489147072)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41400)>, ('10.0.2.15', 41400))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 127174489147072)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 127174489147072)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 41400)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41400)>
    │    └ <function BaseServer.finish_request at 0x73aa201a93a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
    │    │                   │        └ ('10.0.2.15', 41400)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41400)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73aa1fba7600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73aa1fb926f0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73aa201abb00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73aa1fb926f0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x73aa1fb926f0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x73aa1fb926f0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x73aa1f20ce00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73aa1f20cd60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73aa1f20cd60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x73aa1f3dcf40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x73aa1f3dc680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x73aa1f3dc5e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73aa1f3dff60>, 'buy': <function buy at 0x73aa1f20c0e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x73aa1f3dc860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x73aa1f3dfce0>
             │       └ <function run at 0x73aa239c49a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x73aa1f3d2180>
           │      └ <function Runner.run at 0x73aa23310360>
           └ <asyncio.runners.Runner object at 0x73aa1f3e1eb0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x73aa23a51f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x73aa1f3e1eb0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x73aa23a51ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x73aa23a53ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x73aa2399e200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e2500>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e2500>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e2500>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e2500>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.rest_close_position(
               └ <aevo.AevoClient object at 0x73aa20192a20>

AttributeError: 'AevoClient' object has no attribute 'rest_close_position'
2024-06-15 12:52:47.167 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 12:52:47.168 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 12:52:48.753 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 12:52:48.754 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 12:52:48.758 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 12:52:48.759 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 12:52:50.364 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 12:52:50.365 | INFO     | __main__:sell_market:54 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 12:52:50.371 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 12:52:50.375 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: 'AevoClient' object has no attribute 'rest_close_position'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x73aa23c972e0>
    └ <Thread(Thread-6 (process_request_thread), started daemon 127174489147072)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x73aa23c96fc0>
    └ <Thread(Thread-6 (process_request_thread), started daemon 127174489147072)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 127174489147072)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33578)>, ('10.0.2.15', 33578))
    │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 127174489147072)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>>
    └ <Thread(Thread-6 (process_request_thread), started daemon 127174489147072)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33578)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33578)>
    │    └ <function BaseServer.finish_request at 0x73aa201a93a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
    │    │                   │        └ ('10.0.2.15', 33578)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33578)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x73aa1fba7600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73aa1f3e2c30>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x73aa201abb00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x73aa1f3e2c30>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x73aa1f3e2c30>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x73aa2279d940>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x73aa1f3e2c30>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x73aa2337ba60>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73aa2017bec0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x73aa2017bec0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x73aa1f3dcf40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x73aa1f3dc680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x73aa1f3dc5e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x73aa1f3dff60>, 'buy': <function buy at 0x73aa1f20c0e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x73aa1f3dc860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x73aa1f3dfce0>
             │       └ <function run at 0x73aa239c49a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x73aa1f2dc3c0>
           │      └ <function Runner.run at 0x73aa23310360>
           └ <asyncio.runners.Runner object at 0x73aa1f3e3380>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-16' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x73aa23a51f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x73aa1f3e3380>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x73aa23a51ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x73aa23a53ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x73aa2399e200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e3c10>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e3c10>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e3c10>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x73aa1f3e3c10>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.rest_close_position(
               └ <aevo.AevoClient object at 0x73aa20192a20>

AttributeError: 'AevoClient' object has no attribute 'rest_close_position'
2024-06-15 12:58:19.975 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 12:58:19.976 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 12:58:21.477 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 12:58:21.478 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 12:58:21.494 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 12:58:21.494 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 12:58:22.931 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 12:58:22.933 | INFO     | __main__:sell_market:54 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 12:58:22.942 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 12:58:22.942 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: AevoClient.cancel_all_orders() got an unexpected keyword argument 'instrument_id'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f7dce9932e0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 140178219861696)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f7dce992fc0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 140178219861696)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 140178219861696)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50556)>, ('10.0.2.15', 50556))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 140178219861696)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f7dcb3a62a0>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 140178219861696)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 50556)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50556)>
    │    └ <function BaseServer.finish_request at 0x7f7dcb3a13a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7dcb3a62a0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7dcb3a62a0>
    │    │                   │        └ ('10.0.2.15', 50556)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50556)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7dcb3a62a0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f7dcad9f600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f7dcb38a600>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f7dcb3a3b00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f7dcb38a600>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f7dcb38a600>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f7dcb3a62a0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f7dcb38a600>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f7dc9f04e00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f7dc9f04d60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f7dc9f04d60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f7dca0d4f40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f7dca0d4680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f7dca0d45e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f7dca0d7f60>, 'buy': <function buy at 0x7f7dc9f040e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f7dca0d4860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x7f7dca0d7ce0>
             │       └ <function run at 0x7f7dce1689a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7f7dca0ca180>
           │      └ <function Runner.run at 0x7f7dce008360>
           └ <asyncio.runners.Runner object at 0x7f7dca0dcb30>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f7dce1f5f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f7dca0dcb30>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f7dce1f5ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f7dce1f7ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f7dce142200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f7dca0de140>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f7dca0de140>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f7dca0de140>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f7dca0de140>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.cancel_all_orders(
               │    └ <function AevoClient.cancel_all_orders at 0x7f7dcb393740>
               └ <aevo.AevoClient object at 0x7f7dcc5f3290>

TypeError: AevoClient.cancel_all_orders() got an unexpected keyword argument 'instrument_id'
2024-06-15 15:23:38.493 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 15:23:38.526 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 15:23:40.161 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 15:23:40.162 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 15:23:40.169 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-15 15:23:40.169 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 15:23:41.614 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-15 15:23:41.614 | INFO     | __main__:sell_market:54 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 15:23:41.620 | INFO     | __main__:close_positions:62 - Closing all positions...
2024-06-15 15:23:41.620 | ERROR    | __main__:close_positions:70 - An error occurred while closing positions: AevoClient.cancel_all_orders() got an unexpected keyword argument 'instrument_id'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f12349932e0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 139716074669760)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f1234992fc0>
    └ <Thread(Thread-3 (process_request_thread), started daemon 139716074669760)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 139716074669760)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46546)>, ('10.0.2.15', 46546))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 139716074669760)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f12334f0110>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 139716074669760)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 46546)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46546)>
    │    └ <function BaseServer.finish_request at 0x7f1230d793a0>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f12334f0110>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f12334f0110>
    │    │                   │        └ ('10.0.2.15', 46546)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46546)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f12334f0110>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f1230773600>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f1233ce94f0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f1230d7bb00>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f1233ce94f0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f1233ce94f0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f12334f0110>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f1233ce94f0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f122ffd8e00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f122ffd8d60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f122ffd8d60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f122ffa8f40>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f122ffa8680>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f122ffa85e0>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f122ffabf60>, 'buy': <function buy at 0x7f122ffd80e0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f122ffa8860>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 87, in close
    result = asyncio.run(close_positions(instrument_id=12))
             │       │   └ <function close_positions at 0x7f122ffabce0>
             │       └ <function run at 0x7f12341689a0>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7f122ff9e180>
           │      └ <function Runner.run at 0x7f1234008360>
           └ <asyncio.runners.Runner object at 0x7f122ffb1910>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:70> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f12341f5f80>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f122ffb1910>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f12341f5ee0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f12341f7ce0>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f1234142200>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f122ffb2740>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f122ffb2740>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f122ffb2740>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f122ffb2740>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 63, in close_positions
    response = aevo.cancel_all_orders(
               │    └ <function AevoClient.cancel_all_orders at 0x7f1230d67740>
               └ <aevo.AevoClient object at 0x7f12300ec560>

TypeError: AevoClient.cancel_all_orders() got an unexpected keyword argument 'instrument_id'
2024-06-15 15:48:07.910 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 15:48:07.935 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 15:48:09.480 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 15:48:09.481 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 15:58:33.994 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 15:58:34.020 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 15:58:35.619 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 15:58:35.620 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:05:06.809 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:05:08.294 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:05:08.295 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:05:08.307 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:05:08.308 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:05:09.737 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:05:09.738 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:05:23.840 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:05:25.407 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:05:25.408 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:06:02.827 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:06:04.387 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:06:04.388 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:06:04.406 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:06:04.406 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:06:05.980 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:06:05.982 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:06:18.034 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:06:19.526 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:06:19.530 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:06:19.536 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:06:19.537 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:06:21.080 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:06:21.081 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:06:33.410 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:06:34.876 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:06:34.877 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:06:34.886 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:06:34.886 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:06:36.427 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:06:36.428 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:06:47.610 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:06:49.106 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:06:49.108 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:11:40.638 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:11:42.192 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:11:42.193 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:11:42.199 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:11:42.201 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:11:43.734 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:11:43.736 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:11:56.035 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:11:57.498 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:11:57.510 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:11:57.521 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:11:57.522 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:11:59.055 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:11:59.056 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:12:11.376 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:12:12.916 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:12:12.917 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:12:12.929 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:12:12.931 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:12:14.475 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:12:14.476 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:12:26.936 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:12:28.443 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:12:28.444 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 16:12:28.454 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 16:12:28.455 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 16:12:29.960 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 16:12:29.961 | INFO     | __main__:buy_market:39 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-15 16:12:44.401 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 16:12:45.985 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 16:12:45.986 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:39:47.111 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:39:48.767 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:39:48.770 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:39:48.783 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 17:39:48.784 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 17:39:50.387 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 17:39:50.431 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 17:40:03.027 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:40:04.531 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:40:04.537 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:40:04.551 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 17:40:04.567 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 17:40:06.136 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 17:40:06.138 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 17:40:19.087 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:40:20.618 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:40:20.629 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:40:20.641 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 17:40:20.641 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 17:40:22.181 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 17:40:22.183 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 17:40:34.663 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:40:36.181 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:40:36.182 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:40:36.202 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 17:40:36.202 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 17:40:37.810 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 17:40:37.811 | INFO     | __main__:buy_market:39 - Response: {'error': 'CONFIG_NOT_SET'}
2024-06-15 17:40:52.787 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:40:54.289 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:40:54.303 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:47:13.912 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:47:15.445 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:47:15.447 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:47:15.461 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 17:47:15.461 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 17:47:16.939 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 17:47:16.940 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x03332531ad1bd67d193fc6da0ce201106ea23ffeab28091fd31d09a1a478e97b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718466436794894383', 'timestamp': '1718466436794894383', 'system_type': 'API', 'initial_margin': '1.813749', 'avg_price': '3565.56'}
2024-06-15 17:47:29.306 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:47:30.787 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:47:30.788 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:47:30.802 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 17:47:30.803 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 17:47:32.406 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 17:47:32.407 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xfe0fda1f542233cdafc07ed387542e865fc52af994373c6e68c5ca0e0a4dbebc', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718466452245674394', 'timestamp': '1718466452245674394', 'system_type': 'API', 'initial_margin': '1.811259', 'avg_price': '3565.47'}
2024-06-15 17:48:07.548 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:48:09.341 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:48:09.345 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-15 17:48:09.363 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-15 17:48:09.364 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-15 17:48:10.943 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-15 17:48:10.945 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xd813f680f57d60b17330d005f4507fac6f58df7e2d281e800cd29985de21951f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718466490773758529', 'timestamp': '1718466490773758529', 'system_type': 'API', 'initial_margin': '1.811921', 'avg_price': '3564.41'}
2024-06-15 17:48:19.195 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-15 17:48:20.776 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-15 17:48:20.777 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 17:09:47.077 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 17:09:47.164 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75e0f4497380>
    └ <Thread(Thread-1 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75e0f4497060>
    └ <Thread(Thread-1 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 129608938686144)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50938)>, ('10.0.2.15', 50938))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 129608938686144)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 50938)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50938)>
    │    └ <function BaseServer.finish_request at 0x75e0f03a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │    │                   │        └ ('10.0.2.15', 50938)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50938)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75e0efda76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0efacfaa0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75e0f03abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0efacfaa0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x75e0efacfaa0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0efacfaa0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x75e0ef90d440>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90d3a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90d3a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75e0efadcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75e0efadc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75e0efadc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x75e0ef90c180>, 'buy': <function buy at 0x75e0ef90c2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x75e0efadc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x75e0efadfd80>
             │       └ <function run at 0x75e0f4190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x75e0efaa2e30>
           │      └ <function Runner.run at 0x75e0f3b08400>
           └ <asyncio.runners.Runner object at 0x75e0efb8c350>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x75e0f421a020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x75e0efb8c350>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x75e0f4219f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x75e0f421bd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x75e0f416a2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef914190>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef914190>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef914190>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef914190>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x75e0f0396e80>
               └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x75e0f34e3100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x75e0f3698860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x75e0f34e23e0>
           └ <requests.sessions.Session object at 0x75e0f2fbddf0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x75e0f34e2340>
           └ <requests.sessions.Session object at 0x75e0f2fbddf0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x75e0f369bce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x75e0f34e00e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x75e0f36985e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x75e0f3698680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 17:09:47.444 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 17:09:47.445 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75e0f4497380>
    └ <Thread(Thread-2 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75e0f4497060>
    └ <Thread(Thread-2 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 129608938686144)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50940)>, ('10.0.2.15', 50940))
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 129608938686144)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 50940)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50940)>
    │    └ <function BaseServer.finish_request at 0x75e0f03a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │    │                   │        └ ('10.0.2.15', 50940)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50940)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75e0efda76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75e0f03abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x75e0ef90d580>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90d8a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90d8a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75e0efadcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75e0efadc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75e0efadc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (OPTIONS, POST) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x75e0ef90c180>, 'buy': <function buy at 0x75e0ef90c2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x75e0efadc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x75e0f3a84b80>
             │       └ <function run at 0x75e0f4190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x75e0efaa32e0>
           │      └ <function Runner.run at 0x75e0f3b08400>
           └ <asyncio.runners.Runner object at 0x75e0ef916000>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-4' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_run...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x75e0f421a020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x75e0ef916000>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x75e0f4219f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x75e0f421bd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x75e0f416a2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef9162f0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef9162f0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef9162f0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef9162f0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x75e0f0396b60>
               └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 17:09:52.420 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 17:09:52.421 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75e0f4497380>
    └ <Thread(Thread-3 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75e0f4497060>
    └ <Thread(Thread-3 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 129608938686144)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50954)>, ('10.0.2.15', 50954))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 129608938686144)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 50954)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50954)>
    │    └ <function BaseServer.finish_request at 0x75e0f03a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │    │                   │        └ ('10.0.2.15', 50954)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50954)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75e0efda76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916570>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75e0f03abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916570>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916570>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916570>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x75e0ef90eac0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90e840>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90e840>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75e0efadcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75e0efadc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75e0efadc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x75e0ef90c180>, 'buy': <function buy at 0x75e0ef90c2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x75e0efadc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x75e0efadfd80>
             │       └ <function run at 0x75e0f4190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x75e0efaa3b50>
           │      └ <function Runner.run at 0x75e0f3b08400>
           └ <asyncio.runners.Runner object at 0x75e0ef916c30>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x75e0f421a020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x75e0ef916c30>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x75e0f4219f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x75e0f421bd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x75e0f416a2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916f20>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916f20>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916f20>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916f20>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x75e0f0396e80>
               └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x75e0f34e3100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x75e0f3698860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x75e0f34e23e0>
           └ <requests.sessions.Session object at 0x75e0ef916fc0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x75e0f34e2340>
           └ <requests.sessions.Session object at 0x75e0ef916fc0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x75e0f369bce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x75e0f34e00e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x75e0f36985e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x75e0f3698680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 17:09:52.438 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 17:09:52.439 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75e0f4497380>
    └ <Thread(Thread-4 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75e0f4497060>
    └ <Thread(Thread-4 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 129608938686144)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50958)>, ('10.0.2.15', 50958))
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 129608938686144)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 50958)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50958)>
    │    └ <function BaseServer.finish_request at 0x75e0f03a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │    │                   │        └ ('10.0.2.15', 50958)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50958)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75e0efda76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef917710>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75e0f03abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef917710>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef917710>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef917710>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x75e0ef90f100>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90ede0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90ede0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75e0efadcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75e0efadc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75e0efadc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (OPTIONS, POST) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x75e0ef90c180>, 'buy': <function buy at 0x75e0ef90c2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x75e0efadc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x75e0f3a84b80>
             │       └ <function run at 0x75e0f4190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x75e0ef8255d0>
           │      └ <function Runner.run at 0x75e0f3b08400>
           └ <asyncio.runners.Runner object at 0x75e0ef917da0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-10' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x75e0f421a020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x75e0ef917da0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x75e0f4219f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x75e0f421bd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x75e0f416a2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c0d0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c0d0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c0d0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c0d0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x75e0f0396b60>
               └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 17:09:57.574 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 17:09:57.575 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75e0f4497380>
    └ <Thread(Thread-5 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75e0f4497060>
    └ <Thread(Thread-5 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 129608938686144)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33202)>, ('10.0.2.15', 33202))
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 129608938686144)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 129608938686144)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33202)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33202)>
    │    └ <function BaseServer.finish_request at 0x75e0f03a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │    │                   │        └ ('10.0.2.15', 33202)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33202)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75e0efda76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916900>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75e0f03abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916900>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916900>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef916900>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x75e0ef90ea20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90f1a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90f1a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75e0efadcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75e0efadc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75e0efadc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x75e0ef90c180>, 'buy': <function buy at 0x75e0ef90c2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x75e0efadc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x75e0efadfd80>
             │       └ <function run at 0x75e0f4190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x75e0efaa35b0>
           │      └ <function Runner.run at 0x75e0f3b08400>
           └ <asyncio.runners.Runner object at 0x75e0ef916ff0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-13' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x75e0f421a020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x75e0ef916ff0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x75e0f4219f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x75e0f421bd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x75e0f416a2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916dd0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916dd0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916dd0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef916dd0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x75e0f0396e80>
               └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x75e0f34e3100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x75e0f3698860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x75e0f34e23e0>
           └ <requests.sessions.Session object at 0x75e0ef916bd0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x75e0f34e2340>
           └ <requests.sessions.Session object at 0x75e0ef916bd0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x75e0f369bce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x75e0f34e00e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x75e0f36985e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x75e0f3698680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 17:09:57.589 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 17:09:57.596 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75e0f4497380>
    └ <Thread(Thread-6 (process_request_thread), started daemon 129608928200384)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75e0f4497060>
    └ <Thread(Thread-6 (process_request_thread), started daemon 129608928200384)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 129608928200384)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33212)>, ('10.0.2.15', 33212))
    │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 129608928200384)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>>
    └ <Thread(Thread-6 (process_request_thread), started daemon 129608928200384)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33212)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33212)>
    │    └ <function BaseServer.finish_request at 0x75e0f03a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │    │                   │        └ ('10.0.2.15', 33212)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33212)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75e0efda76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75e0f03abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef914080>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x75e0ef90e840>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90d260>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90d260>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75e0efadcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75e0efadc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75e0efadc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (OPTIONS, POST) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x75e0ef90c180>, 'buy': <function buy at 0x75e0ef90c2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x75e0efadc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x75e0f3a84b80>
             │       └ <function run at 0x75e0f4190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x75e0ef8246d0>
           │      └ <function Runner.run at 0x75e0f3b08400>
           └ <asyncio.runners.Runner object at 0x75e0ef915340>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-16' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x75e0f421a020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x75e0ef915340>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x75e0f4219f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x75e0f421bd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x75e0f416a2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c100>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c100>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c100>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82c100>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x75e0f0396b60>
               └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 17:10:02.489 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 17:10:02.490 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x75e0f4497380>
    └ <Thread(Thread-7 (process_request_thread), started daemon 129608928200384)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x75e0f4497060>
    └ <Thread(Thread-7 (process_request_thread), started daemon 129608928200384)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-7 (process_request_thread), started daemon 129608928200384)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33224)>, ('10.0.2.15', 33224))
    │    │        └ <Thread(Thread-7 (process_request_thread), started daemon 129608928200384)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>>
    └ <Thread(Thread-7 (process_request_thread), started daemon 129608928200384)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33224)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33224)>
    │    └ <function BaseServer.finish_request at 0x75e0f03a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │    │                   │        └ ('10.0.2.15', 33224)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33224)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x75e0efda76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef82c470>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x75e0f03abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef82c470>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef82c470>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x75e0f2f3ec60>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x75e0ef82c470>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x75e0ef90da80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90db20>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x75e0ef90db20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x75e0efadcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x75e0efadc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x75e0efadc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x75e0ef90c180>, 'buy': <function buy at 0x75e0ef90c2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x75e0efadc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x75e0efadfd80>
             │       └ <function run at 0x75e0f4190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x75e0ef824040>
           │      └ <function Runner.run at 0x75e0f3b08400>
           └ <asyncio.runners.Runner object at 0x75e0ef82ca40>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-19' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x75e0f421a020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x75e0ef82ca40>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x75e0f4219f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x75e0f421bd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x75e0f416a2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82cd30>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82cd30>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82cd30>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x75e0ef82cd30>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x75e0f0396e80>
               └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x75e0f34e3100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x75e0f2139b20>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x75e0f3698860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x75e0f34e23e0>
           └ <requests.sessions.Session object at 0x75e0ef82d3a0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x75e0f34e2340>
           └ <requests.sessions.Session object at 0x75e0ef82d3a0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x75e0f369bce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x75e0f34e00e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x75e0f36985e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x75e0f3698680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 17:13:55.654 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 17:13:55.655 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x72e507a93380>
    └ <Thread(Thread-1 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x72e507a93060>
    └ <Thread(Thread-1 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 126327908730560)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34672)>, ('10.0.2.15', 34672))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 126327908730560)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 34672)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34672)>
    │    └ <function BaseServer.finish_request at 0x72e50397d440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │    │                   │        └ ('10.0.2.15', 34672)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34672)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x72e50337b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e50322bce0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x72e50397fba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e50322bce0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x72e50322bce0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x72e50322bce0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x72e5030dd440>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030dd3a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030dd3a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x72e5030b0fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x72e5030b0720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x72e5030b0680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x72e5030dc180>, 'buy': <function buy at 0x72e5030dc2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x72e5030b0900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x72e5030b3d80>
             │       └ <function run at 0x72e5077c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x72e503072e30>
           │      └ <function Runner.run at 0x72e507104400>
           └ <asyncio.runners.Runner object at 0x72e506619490>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x72e50784e020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x72e506619490>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x72e50784df80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x72e50784fd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x72e50779e2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e4430>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e4430>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e4430>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e4430>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x72e50396ae80>
               └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x72e506b27100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x72e506ce0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x72e506b263e0>
           └ <requests.sessions.Session object at 0x72e5032eb260>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x72e506b26340>
           └ <requests.sessions.Session object at 0x72e5032eb260>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x72e506ce3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x72e506b240e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x72e506ce05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x72e506ce0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 17:13:55.692 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 17:13:55.692 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x72e507a93380>
    └ <Thread(Thread-2 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x72e507a93060>
    └ <Thread(Thread-2 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 126327908730560)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34684)>, ('10.0.2.15', 34684))
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 126327908730560)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 34684)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34684)>
    │    └ <function BaseServer.finish_request at 0x72e50397d440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │    │                   │        └ ('10.0.2.15', 34684)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34684)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x72e50337b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e4950>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x72e50397fba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e4950>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e4950>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e4950>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x72e5030dd580>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030dd8a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030dd8a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x72e5030b0fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x72e5030b0720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x72e5030b0680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x72e5030dc180>, 'buy': <function buy at 0x72e5030dc2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x72e5030b0900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x72e507080b80>
             │       └ <function run at 0x72e5077c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x72e5030732e0>
           │      └ <function Runner.run at 0x72e507104400>
           └ <asyncio.runners.Runner object at 0x72e503fc7320>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-4' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_run...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x72e50784e020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x72e503fc7320>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x72e50784df80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x72e50784fd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x72e50779e2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e65f0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e65f0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e65f0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e65f0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x72e50396ab60>
               └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 17:14:00.743 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 17:14:00.744 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x72e507a93380>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x72e507a93060>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 126327908730560)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34688)>, ('10.0.2.15', 34688))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 126327908730560)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 34688)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34688)>
    │    └ <function BaseServer.finish_request at 0x72e50397d440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │    │                   │        └ ('10.0.2.15', 34688)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34688)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x72e50337b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e6870>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x72e50397fba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e6870>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e6870>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e6870>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x72e5030deac0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030de840>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030de840>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x72e5030b0fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x72e5030b0720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x72e5030b0680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x72e5030dc180>, 'buy': <function buy at 0x72e5030dc2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x72e5030b0900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x72e5030b3d80>
             │       └ <function run at 0x72e5077c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x72e503073b50>
           │      └ <function Runner.run at 0x72e507104400>
           └ <asyncio.runners.Runner object at 0x72e5030e6f00>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x72e50784e020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x72e5030e6f00>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x72e50784df80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x72e50784fd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x72e50779e2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e71f0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e71f0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e71f0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e71f0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x72e50396ae80>
               └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x72e506b27100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x72e506ce0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x72e506b263e0>
           └ <requests.sessions.Session object at 0x72e5030e7290>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x72e506b26340>
           └ <requests.sessions.Session object at 0x72e5030e7290>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x72e506ce3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x72e506b240e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x72e506ce05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x72e506ce0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 17:14:00.774 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 17:14:00.775 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x72e507a93380>
    └ <Thread(Thread-4 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x72e507a93060>
    └ <Thread(Thread-4 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 126327908730560)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34694)>, ('10.0.2.15', 34694))
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 126327908730560)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 34694)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34694)>
    │    └ <function BaseServer.finish_request at 0x72e50397d440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │    │                   │        └ ('10.0.2.15', 34694)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 34694)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x72e50337b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e7a70>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x72e50397fba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e7a70>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e7a70>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e7a70>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x72e5030df100>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030dede0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030dede0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x72e5030b0fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x72e5030b0720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x72e5030b0680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x72e5030dc180>, 'buy': <function buy at 0x72e5030dc2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x72e5030b0900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x72e507080b80>
             │       └ <function run at 0x72e5077c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x72e502ff95d0>
           │      └ <function Runner.run at 0x72e507104400>
           └ <asyncio.runners.Runner object at 0x72e502e00080>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-10' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x72e50784e020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x72e502e00080>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x72e50784df80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x72e50784fd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x72e50779e2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e502e00370>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e502e00370>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e502e00370>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e502e00370>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x72e50396ab60>
               └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 17:14:04.791 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 17:14:04.792 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x72e507a93380>
    └ <Thread(Thread-5 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x72e507a93060>
    └ <Thread(Thread-5 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 126327908730560)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58554)>, ('10.0.2.15', 58554))
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 126327908730560)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 126327908730560)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58554)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58554)>
    │    └ <function BaseServer.finish_request at 0x72e50397d440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │    │                   │        └ ('10.0.2.15', 58554)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58554)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x72e50337b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e71a0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x72e50397fba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e71a0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e71a0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x72e5031e40e0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x72e5030e71a0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x72e5030dea20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030df1a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x72e5030df1a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x72e5030b0fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x72e5030b0720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x72e5030b0680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x72e5030dc180>, 'buy': <function buy at 0x72e5030dc2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x72e5030b0900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x72e5030b3d80>
             │       └ <function run at 0x72e5077c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x72e5030735b0>
           │      └ <function Runner.run at 0x72e507104400>
           └ <asyncio.runners.Runner object at 0x72e5030e7410>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-13' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x72e50784e020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x72e5030e7410>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x72e50784df80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x72e50784fd80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x72e50779e2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e6f50>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e6f50>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e6f50>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x72e5030e6f50>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x72e50396ae80>
               └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x72e506b27100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x72e50329e960>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x72e506ce0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x72e506b263e0>
           └ <requests.sessions.Session object at 0x72e503094260>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x72e506b26340>
           └ <requests.sessions.Session object at 0x72e503094260>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x72e506ce3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x72e506b240e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x72e506ce05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x72e506ce0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 17:22:52.361 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-16 17:22:53.912 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-16 17:22:53.913 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 17:22:53.944 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-16 17:22:53.945 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 17:22:56.032 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-16 17:22:56.033 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x399c01a1565b193f960f5aec92e4b211d65be3df4c369635099048e162741d33', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718551375300017015', 'timestamp': '1718551375300017015', 'system_type': 'API', 'initial_margin': '1.822785', 'avg_price': '3585.07'}
2024-06-16 17:23:02.190 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-16 17:23:03.740 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-16 17:23:03.741 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 17:23:03.747 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-16 17:23:03.748 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 17:23:05.340 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-16 17:23:05.342 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x34edf644269d07bf2b9e557f24be7cd25101e5451681c48837ee28f54f431e40', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718551385054238419', 'timestamp': '1718551385054238419', 'system_type': 'API', 'initial_margin': '1.823219', 'avg_price': '3585.92'}
2024-06-16 17:23:12.771 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-16 17:23:14.333 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-16 17:23:14.334 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:26:42.703 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:26:43.141 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-1 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-1 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 55632)>, ('10.0.2.15', 55632))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 55632)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 55632)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 55632)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 55632)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8100e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8100e0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8100e0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8100e0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809440>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8093a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8093a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99ae30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa9c0710>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa9c0710>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2ac3969b0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2ac3969b0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2ac3969b0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2ac3969b0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2abd5cfb0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2abd5cfb0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:26:43.914 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:26:43.915 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-2 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-2 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43812)>, ('10.0.2.15', 43812))
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 43812)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43812)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 43812)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43812)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8124b0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8124b0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8124b0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8124b0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809580>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8098a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8098a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99b2e0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa812660>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-4' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_run...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa812660>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812950>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812950>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812950>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812950>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:26:49.148 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:26:49.150 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-3 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-3 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43816)>, ('10.0.2.15', 43816))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 43816)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43816)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 43816)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43816)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b70>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b70>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b70>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b70>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80aac0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80a840>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80a840>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99bb50>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8132c0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb=...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8132c0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8135b0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8135b0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8135b0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8135b0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa813650>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa813650>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:26:49.178 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:26:49.178 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-4 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-4 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43828)>, ('10.0.2.15', 43828))
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 43828)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43828)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 43828)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43828)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b40>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b40>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812b40>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b060>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b100>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b100>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa7255d0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72c3e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-10' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72c3e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c6d0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c6d0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c6d0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c6d0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:26:54.512 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:26:54.512 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-5 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-5 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58134)>, ('10.0.2.15', 58134))
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58134)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58134)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58134)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58134)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812ba0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812ba0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812ba0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812ba0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80aa20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b240>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b240>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99b5b0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8139b0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-13' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8139b0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813c70>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813c70>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813c70>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813c70>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa813740>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa813740>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:26:54.540 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:26:54.540 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-6 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-6 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58150)>, ('10.0.2.15', 58150))
    │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-6 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58150)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58150)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58150)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58150)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810c80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810c80>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810c80>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810c80>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80aac0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809260>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809260>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa7246d0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8116a0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-16' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8116a0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c7f0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c7f0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c7f0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c7f0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:26:59.733 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:26:59.737 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-7 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-7 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-7 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58164)>, ('10.0.2.15', 58164))
    │    │        └ <Thread(Thread-7 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-7 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58164)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58164)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58164)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58164)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72c5c0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72c5c0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72c5c0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72c5c0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809a80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809b20>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809b20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa724040>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72d040>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-19' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72d040>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d330>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d330>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d330>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d330>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72d3d0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72d3d0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:26:59.793 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:26:59.805 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-8 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-8 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-8 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58174)>, ('10.0.2.15', 58174))
    │    │        └ <Thread(Thread-8 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-8 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58174)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58174)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58174)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58174)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72daf0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72daf0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72daf0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72daf0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80bce0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b9c0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b9c0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa726200>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72e180>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-22' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72e180>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72e470>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72e470>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72e470>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72e470>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:04.845 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:04.846 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-9 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-9 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41804)>, ('10.0.2.15', 41804))
    │    │        └ <Thread(Thread-9 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-9 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 41804)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41804)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 41804)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41804)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2adce9160>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2adce9160>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2adce9160>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2adce9160>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80bd80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa9df060>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa9df060>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99b4c0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8127e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-25' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8127e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813580>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813580>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813580>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813580>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa8128d0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa8128d0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:04.903 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:04.903 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-10 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-10 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41816)>, ('10.0.2.15', 41816))
    │    │        └ <Thread(Thread-10 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-10 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 41816)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41816)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 41816)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41816)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80ab60>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80aca0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80aca0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99bd30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa812e10>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-28' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa812e10>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8130d0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8130d0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8130d0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8130d0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:10.106 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:10.107 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-11 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-11 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41830)>, ('10.0.2.15', 41830))
    │    │        └ <Thread(Thread-11 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-11 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 41830)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41830)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 41830)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41830)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813da0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813da0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813da0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813da0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b380>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80ae80>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80ae80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99af20>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa810c20>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-31' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa810c20>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa810530>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa810530>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:10.151 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:10.152 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-12 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-12 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-12 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41846)>, ('10.0.2.15', 41846))
    │    │        └ <Thread(Thread-12 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-12 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 41846)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41846)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 41846)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41846)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72cd40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72cd40>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72cd40>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72cd40>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809300>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8093a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8093a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99af20>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2ac3c0b60>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-34' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2ac3c0b60>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa9c3280>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa9c3280>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa9c3280>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa9c3280>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:15.332 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:15.334 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-13 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-13 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-13 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58136)>, ('10.0.2.15', 58136))
    │    │        └ <Thread(Thread-13 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-13 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58136)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58136)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58136)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58136)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8105c0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8105c0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8105c0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8105c0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809d00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b380>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b380>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99bd30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8103b0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-37' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8103b0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810be0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810be0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810be0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810be0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2ab798f50>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2ab798f50>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:15.367 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:15.368 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-14 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-14 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-14 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58144)>, ('10.0.2.15', 58144))
    │    │        └ <Thread(Thread-14 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-14 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58144)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58144)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58144)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58144)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8139e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8139e0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8139e0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8139e0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809b20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b6a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b6a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99bf10>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa810da0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-40' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa810da0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812aa0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812aa0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812aa0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812aa0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:20.619 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:20.620 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-15 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-15 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-15 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58146)>, ('10.0.2.15', 58146))
    │    │        └ <Thread(Thread-15 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-15 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58146)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58146)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58146)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58146)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812960>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812960>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812960>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812960>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa73c220>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73c180>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73c180>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99b1f0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aab57fe0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-43' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aab57fe0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d1b0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d1b0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d1b0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d1b0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72d9d0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72d9d0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:20.635 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:20.636 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-16 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-16 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-16 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58152)>, ('10.0.2.15', 58152))
    │    │        └ <Thread(Thread-16 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-16 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58152)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58152)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58152)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58152)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813e90>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813e90>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813e90>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813e90>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809b20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8098a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8098a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99bc40>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8123c0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-46' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8123c0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8133d0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8133d0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8133d0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8133d0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:25.521 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:25.522 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-17 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-17 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-17 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42448)>, ('10.0.2.15', 42448))
    │    │        └ <Thread(Thread-17 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-17 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 42448)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42448)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 42448)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42448)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa8096c0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80bce0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80bce0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99b880>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa812b10>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-49' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa812b10>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810b50>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810b50>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810b50>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810b50>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2abd161e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2abd161e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:25.542 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:25.542 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-18 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-18 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-18 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42462)>, ('10.0.2.15', 42462))
    │    │        └ <Thread(Thread-18 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-18 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 42462)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42462)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 42462)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42462)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72dc70>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72dc70>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72dc70>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72dc70>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80ad40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80a660>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80a660>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99ae30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72d7f0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-52' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72d7f0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d5a0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d5a0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d5a0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72d5a0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:30.574 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:30.575 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-19 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-19 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42474)>, ('10.0.2.15', 42474))
    │    │        └ <Thread(Thread-19 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-19 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 42474)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42474)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 42474)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42474)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e450>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e450>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e450>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e450>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b2e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809440>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809440>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa726200>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72ca10>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-55' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72ca10>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c730>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c730>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c730>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c730>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72c230>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72c230>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:30.600 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:30.600 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-20 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-20 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=6, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42488)>, ('10.0.2.15', 42488))
    │    │        └ <Thread(Thread-20 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-20 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 42488)
    │    │              └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42488)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 42488)
    │    │                   └ <socket.socket fd=6, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42488)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80ad40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80bd80>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80bd80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=6>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99b010>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8106e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-58' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8106e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812b30>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812b30>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812b30>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812b30>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:35.939 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:35.956 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-21 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-21 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-21 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58338)>, ('10.0.2.15', 58338))
    │    │        └ <Thread(Thread-21 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-21 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58338)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58338)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58338)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58338)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a80>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a80>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a80>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b9c0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8096c0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8096c0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99bb50>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8123c0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-61' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8123c0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813550>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813550>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813550>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813550>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa813b30>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa813b30>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:35.998 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:35.998 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-22 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-22 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-22 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58342)>, ('10.0.2.15', 58342))
    │    │        └ <Thread(Thread-22 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-22 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58342)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58342)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58342)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58342)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d730>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d730>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d730>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d730>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809b20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b6a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b6a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99b6a0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72db80>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-64' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72db80>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72dea0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72dea0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72dea0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72dea0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:41.193 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:41.195 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-23 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-23 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58348)>, ('10.0.2.15', 58348))
    │    │        └ <Thread(Thread-23 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-23 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58348)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58348)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58348)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58348)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eab0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eab0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eab0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eab0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80afc0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809300>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809300>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa724130>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72f020>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-67' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72f020>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f370>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f370>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f370>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f370>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72f410>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72f410>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:27:41.217 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:27:41.217 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-24 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-24 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-24 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58356)>, ('10.0.2.15', 58356))
    │    │        └ <Thread(Thread-24 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-24 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58356)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58356)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58356)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58356)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812de0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812de0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812de0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812de0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b6a0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809b20>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809b20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99bf10>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa812480>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-70' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa812480>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812bf0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812bf0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812bf0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812bf0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:27:49.024 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:27:49.025 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-25 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-25 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-25 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 55898)>, ('10.0.2.15', 55898))
    │    │        └ <Thread(Thread-25 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-25 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 55898)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 55898)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 55898)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 55898)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ef0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b560>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8096c0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8096c0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99b100>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8106b0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-73' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8106b0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f2e0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f2e0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f2e0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f2e0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72f6e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72f6e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:29:52.902 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:29:52.905 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-26 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-26 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-26 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56726)>, ('10.0.2.15', 56726))
    │    │        └ <Thread(Thread-26 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-26 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 56726)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56726)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 56726)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56726)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d040>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d040>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d040>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d040>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80a840>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80ac00>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80ac00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa725f30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72fa40>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-76' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72fa40>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fdf0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fdf0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fdf0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fdf0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72fe90>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72fe90>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:29:52.949 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:29:52.950 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-27 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-27 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-27 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56728)>, ('10.0.2.15', 56728))
    │    │        └ <Thread(Thread-27 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-27 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 56728)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56728)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 56728)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56728)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810140>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810140>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810140>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810140>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b560>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809260>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809260>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99ac50>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa810350>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-79' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa810350>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8101c0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8101c0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8101c0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8101c0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:29:58.706 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:29:58.708 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-28 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-28 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33348)>, ('10.0.2.15', 33348))
    │    │        └ <Thread(Thread-28 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-28 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33348)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33348)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 33348)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33348)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8138f0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8138f0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8138f0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8138f0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809d00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b9c0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b9c0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99b790>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2adce8110>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-82' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2adce8110>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fc40>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fc40>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fc40>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fc40>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72fc20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72fc20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:29:58.727 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:29:58.728 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-29 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-29 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33360)>, ('10.0.2.15', 33360))
    │    │        └ <Thread(Thread-29 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-29 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33360)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33360)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 33360)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33360)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e960>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e960>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e960>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72e960>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b7e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b920>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b920>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99b4c0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72ef90>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-85' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72ef90>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f3a0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f3a0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f3a0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f3a0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:06.262 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:06.264 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-30 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-30 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-30 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58712)>, ('10.0.2.15', 58712))
    │    │        └ <Thread(Thread-30 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-30 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58712)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58712)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58712)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58712)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f890>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f890>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f890>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f890>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa73d120>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73c860>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73c860>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa7247c0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa7449e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-88' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa7449e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744d30>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744d30>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744d30>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744d30>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa744dd0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa744dd0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:06.293 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:06.298 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-31 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-31 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-31 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58726)>, ('10.0.2.15', 58726))
    │    │        └ <Thread(Thread-31 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-31 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58726)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58726)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58726)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58726)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f740>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f740>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f740>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72f740>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b7e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809300>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809300>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99bb50>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72e9f0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-91' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72e9f0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fd30>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fd30>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fd30>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fd30>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:12.424 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:12.425 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-32 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-32 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-32 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58740)>, ('10.0.2.15', 58740))
    │    │        └ <Thread(Thread-32 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-32 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58740)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58740)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58740)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58740)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d370>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d370>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d370>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72d370>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80ba60>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8093a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8093a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99bd30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa812630>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-94' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa812630>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8127d0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8127d0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8127d0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8127d0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa813860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa813860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:12.464 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:12.465 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-33 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-33 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58742)>, ('10.0.2.15', 58742))
    │    │        └ <Thread(Thread-33 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-33 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 58742)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58742)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 58742)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 58742)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813290>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809a80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b100>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b100>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa724130>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa810a10>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-97' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa810a10>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744bb0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744bb0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744bb0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744bb0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:17.872 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:17.875 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-34 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-34 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-34 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46362)>, ('10.0.2.15', 46362))
    │    │        └ <Thread(Thread-34 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-34 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 46362)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46362)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 46362)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46362)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457c0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457c0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457c0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457c0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa73d580>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73d4e0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73d4e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa7244f0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa745dc0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-100' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa745dc0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746110>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746110>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746110>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746110>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72e7b0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72e7b0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:17.920 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:17.921 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-35 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-35 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-35 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46370)>, ('10.0.2.15', 46370))
    │    │        └ <Thread(Thread-35 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-35 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 46370)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46370)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 46370)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 46370)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8106b0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8106b0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8106b0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa8106b0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809620>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809260>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809260>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99bd30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa810080>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-103' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa810080>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813820>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813820>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813820>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813820>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:24.360 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:24.361 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-36 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-36 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-36 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39284)>, ('10.0.2.15', 39284))
    │    │        └ <Thread(Thread-36 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-36 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 39284)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39284)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 39284)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39284)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ec0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ec0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ec0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813ec0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809940>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809b20>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa809b20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99bc40>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72db80>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-106' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72db80>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fb80>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fb80>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fb80>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72fb80>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72d910>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72d910>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:24.384 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:24.384 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-37 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-37 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-37 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39290)>, ('10.0.2.15', 39290))
    │    │        └ <Thread(Thread-37 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-37 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 39290)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39290)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 39290)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39290)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ddf0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ddf0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ddf0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ddf0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80ae80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80bc40>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80bc40>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa724130>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa746480>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-109' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa746480>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744c70>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744c70>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744c70>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa744c70>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:30.209 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:30.211 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-38 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-38 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-38 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39302)>, ('10.0.2.15', 39302))
    │    │        └ <Thread(Thread-38 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-38 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 39302)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39302)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 39302)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39302)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746750>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746750>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746750>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746750>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa73dd00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73dc60>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73dc60>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa7254e0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa746f90>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-112' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa746f90>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa7472e0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa7472e0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa7472e0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa7472e0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72f980>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72f980>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:30.258 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:30.258 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-39 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-39 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-39 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39318)>, ('10.0.2.15', 39318))
    │    │        └ <Thread(Thread-39 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-39 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 39318)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39318)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 39318)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 39318)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ea80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ea80>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ea80>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72ea80>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80bc40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80aa20>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80aa20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99b790>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72f350>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-115' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72f350>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c970>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c970>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c970>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72c970>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:35.791 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:35.793 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-40 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-40 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-40 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33358)>, ('10.0.2.15', 33358))
    │    │        └ <Thread(Thread-40 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-40 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33358)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33358)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 33358)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33358)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810440>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810440>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810440>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810440>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80b6a0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b560>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b560>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99b970>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8136b0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-118' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8136b0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810130>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810130>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810130>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810130>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa812de0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa812de0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:35.826 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:35.826 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-41 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-41 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-41 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33366)>, ('10.0.2.15', 33366))
    │    │        └ <Thread(Thread-41 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-41 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33366)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33366)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 33366)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33366)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810110>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810110>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810110>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa810110>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80ba60>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b100>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b100>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa724130>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa7454f0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-121' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa7454f0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa745690>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa745690>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa745690>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa745690>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:41.345 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:41.347 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-42 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-42 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-42 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33376)>, ('10.0.2.15', 33376))
    │    │        └ <Thread(Thread-42 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-42 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33376)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33376)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 33376)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33376)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457f0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457f0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457f0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7457f0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa73d580>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73d4e0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73d4e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa7244f0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa7464b0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-124' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa7464b0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746830>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746830>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746830>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746830>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa746630>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa746630>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:41.375 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:41.376 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-43 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-43 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-43 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33392)>, ('10.0.2.15', 33392))
    │    │        └ <Thread(Thread-43 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-43 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 33392)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33392)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 33392)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 33392)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813980>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813980>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813980>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813980>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80a980>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b9c0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b9c0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99b100>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa810140>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-127' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa810140>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813100>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813100>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813100>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa813100>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:46.823 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:46.825 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-44 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-44 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-44 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56962)>, ('10.0.2.15', 56962))
    │    │        └ <Thread(Thread-44 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-44 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 56962)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56962)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 56962)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56962)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813a40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813a40>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813a40>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa813a40>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809940>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b600>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b600>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99be20>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72f6e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-130' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72f6e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f190>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f190>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f190>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa72f190>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72fd40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72fd40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:46.862 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:46.862 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-45 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-45 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-45 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56970)>, ('10.0.2.15', 56970))
    │    │        └ <Thread(Thread-45 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-45 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 56970)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56970)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 56970)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56970)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7461e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7461e0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7461e0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa7461e0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa8098a0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80ae80>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80ae80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa724130>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa7467e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-133' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa7467e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747040>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747040>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747040>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747040>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:52.882 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:52.888 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-46 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-46 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-46 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56980)>, ('10.0.2.15', 56980))
    │    │        └ <Thread(Thread-46 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-46 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 56980)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56980)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 56980)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56980)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746c00>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746c00>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746c00>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa746c00>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa73d300>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73dd00>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73dd00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa7254e0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa746f30>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-136' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa746f30>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747460>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747460>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747460>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa747460>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa72fd40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa72fd40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:52.966 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:52.967 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-47 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-47 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-47 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56988)>, ('10.0.2.15', 56988))
    │    │        └ <Thread(Thread-47 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-47 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 56988)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56988)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 56988)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 56988)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eba0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eba0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eba0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa72eba0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa80bc40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa808e00>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa808e00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa99bf10>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa72f080>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-139' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa72f080>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812d40>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812d40>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812d40>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa812d40>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:30:58.753 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:30:58.754 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-48 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-48 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-48 (process_request_thread), started daemon 124050080794304)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53238)>, ('10.0.2.15', 53238))
    │    │        └ <Thread(Thread-48 (process_request_thread), started daemon 124050080794304)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-48 (process_request_thread), started daemon 124050080794304)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 53238)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53238)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 53238)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53238)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a50>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a50>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a50>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812a50>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809260>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b880>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa80b880>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa99bd30>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa8135f0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-142' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa8135f0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa8104f0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa812630>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa812630>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:30:58.820 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:30:58.821 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-49 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-49 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-49 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53242)>, ('10.0.2.15', 53242))
    │    │        └ <Thread(Thread-49 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-49 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 53242)
    │    │              └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53242)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 53242)
    │    │                   └ <socket.socket fd=7, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53242)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812bd0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812bd0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812bd0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa812bd0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa809a80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8094e0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa8094e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=7>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x70d2ae97cb80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x70d2aa724130>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa7462a0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-145' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa7462a0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746140>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746140>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746140>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa746140>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x70d2ab796b60>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 18:31:02.007 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 18:31:02.014 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x70d2af393380>
    └ <Thread(Thread-50 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x70d2af393060>
    └ <Thread(Thread-50 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-50 (process_request_thread), started daemon 124050091280064)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53256)>, ('10.0.2.15', 53256))
    │    │        └ <Thread(Thread-50 (process_request_thread), started daemon 124050091280064)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>>
    └ <Thread(Thread-50 (process_request_thread), started daemon 124050091280064)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 53256)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53256)>
    │    └ <function BaseServer.finish_request at 0x70d2ab7a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │    │                   │        └ ('10.0.2.15', 53256)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53256)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x70d2ab1a76a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa745ac0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x70d2ab7abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa745ac0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa745ac0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x70d2adce9730>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x70d2aa745ac0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x70d2aa73d580>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73d4e0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x70d2aa73d4e0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x70d2aa9dcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x70d2aa9dc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x70d2aa9dc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x70d2aa808180>, 'buy': <function buy at 0x70d2aa8082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x70d2aa9dc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x70d2aa9dfd80>
             │       └ <function run at 0x70d2aeb6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x70d2aa7244f0>
           │      └ <function Runner.run at 0x70d2aea00400>
           └ <asyncio.runners.Runner object at 0x70d2aa746330>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-148' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> c...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x70d2aebf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x70d2aa746330>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x70d2aebf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x70d2aebf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x70d2aeb462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810820>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810820>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810820>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x70d2aa810820>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x70d2ab796e80>
               └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x70d2ae42b100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x70d2adce9700>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x70d2ae5e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x70d2ae42a3e0>
           └ <requests.sessions.Session object at 0x70d2aa810a70>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x70d2ae42a340>
           └ <requests.sessions.Session object at 0x70d2aa810a70>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x70d2ae5e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x70d2ae4280e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x70d2ae5e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x70d2ae5e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 18:34:11.431 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:34:12.944 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:34:12.945 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'STALE_DATA'}
2024-06-16 18:34:12.951 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:34:12.952 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:34:14.492 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:34:14.497 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xd5da9c47df2d2127764a5ea21a939d5d08a35186c032669282f3a30c79c662ac', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555654301302652', 'timestamp': '1718555654301302652', 'system_type': 'API', 'initial_margin': '1.826234', 'avg_price': '3594.83'}
2024-06-16 18:34:27.674 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:34:29.214 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:34:29.216 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:34:29.224 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:34:29.225 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:34:31.622 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:34:31.629 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xfae996bf26c4fa564f4e484a8e9c7f4f20b47d9410c76a88ca2ccf5af22080a6', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555670675355414', 'timestamp': '1718555670675355414', 'system_type': 'API', 'initial_margin': '1.826778', 'avg_price': '3593.5'}
2024-06-16 18:34:42.702 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:34:44.727 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:34:44.729 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:38:57.538 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:38:59.081 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:38:59.082 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:38:59.087 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:38:59.088 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:39:00.651 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:39:00.661 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x0100caf4d61b4340dc65e6e8e15fe5000facfa547801c4bb47238979e9d59cb1', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555940443254236', 'timestamp': '1718555940443254236', 'system_type': 'API', 'initial_margin': '1.82678', 'avg_price': '3594.02'}
2024-06-16 18:39:06.082 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:39:07.611 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:39:07.612 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:39:07.630 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:39:07.630 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:39:09.337 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:39:09.339 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x431c91e71e7bab0292f413beebf2534aa661df42d411b790caa8213eb8ed8841', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555949174252934', 'timestamp': '1718555949174252934', 'system_type': 'API', 'initial_margin': '1.827169', 'avg_price': '3593.63'}
2024-06-16 18:39:17.090 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:39:18.654 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:39:18.656 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:39:18.663 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:39:18.663 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:39:20.723 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:39:20.724 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x85c4465d80671ca6077c93aceae0fe92f16dc114a1031dd8a53f8c2104a9fec6', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555960111855758', 'timestamp': '1718555960111855758', 'system_type': 'API', 'initial_margin': '1.828448', 'avg_price': '3594.09'}
2024-06-16 18:39:26.765 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:39:28.322 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:39:28.323 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:39:28.340 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:39:28.340 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:39:30.008 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:39:30.009 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xf4302292bc699547dac29923297020d11473ce7b196b6ac905091d2d933638a2', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555969791533007', 'timestamp': '1718555969791533007', 'system_type': 'API', 'initial_margin': '1.837938', 'avg_price': '3596.03'}
2024-06-16 18:39:34.977 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:39:36.501 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:39:36.502 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:39:36.519 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:39:36.520 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:39:38.061 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:39:38.062 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xdf87af8bbe9a94bbff6ee023dce6ae2645f486a2c874503f99030a725310203a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555977931709001', 'timestamp': '1718555977931709001', 'system_type': 'API', 'initial_margin': '1.831992', 'avg_price': '3596.53'}
2024-06-16 18:39:42.979 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:39:44.552 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:39:44.554 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:39:44.568 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:39:44.569 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:39:46.213 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:39:46.215 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xe22dfe49d7bf87fd9060c633b07d780adefef327ce94336f0ce7d311588ae4ed', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718555986068215047', 'timestamp': '1718555986068215047', 'system_type': 'API', 'initial_margin': '1.837359', 'avg_price': '3596.51'}
2024-06-16 18:39:51.296 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:39:52.761 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:39:52.763 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:39:52.777 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:39:52.780 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:39:54.441 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:39:54.443 | INFO     | __main__:buy_market:40 - Response: {'error': 'INSUFFICIENT_AVAILABLE_MARGIN'}
2024-06-16 18:39:59.818 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:40:01.440 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:40:01.441 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:40:03.873 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:40:05.613 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:40:05.614 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:41:49.998 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:41:51.522 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:41:51.527 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:41:51.532 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:41:51.532 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:41:53.016 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:41:53.017 | INFO     | __main__:buy_market:40 - Response: {'error': 'INSUFFICIENT_AVAILABLE_MARGIN'}
2024-06-16 18:42:06.343 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:42:09.906 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:42:09.907 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:42:09.920 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:42:09.921 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:42:11.470 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:42:11.472 | INFO     | __main__:buy_market:40 - Response: {'error': 'INSUFFICIENT_AVAILABLE_MARGIN'}
2024-06-16 18:58:20.917 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:58:22.716 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:58:22.717 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:58:22.732 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:58:22.732 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:58:24.574 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:58:24.575 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x23c96714366bf4908fa957127a0b1a59559876fa6c1651eec213067e0b7c7ab7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718557104337315510', 'timestamp': '1718557104337315510', 'system_type': 'API', 'initial_margin': '1.825868', 'avg_price': '3591.98'}
2024-06-16 18:58:27.521 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:58:29.025 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:58:29.025 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:58:29.082 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:58:29.082 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:58:30.745 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:58:30.747 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x8faff000486202134edcd5df22f77aa70d7f27b1b5b022406c5ac84aebc560eb', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718557110650015537', 'timestamp': '1718557110650015537', 'system_type': 'API', 'initial_margin': '1.825271', 'avg_price': '3591.58'}
2024-06-16 18:58:33.779 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:58:35.270 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:58:35.271 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:58:35.282 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:58:35.284 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:58:37.083 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:58:37.084 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xcc732f9b483e76cc6c6777aaf7d6269cf556034aef982521e5cf53a725be3209', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718557116882181263', 'timestamp': '1718557116882181263', 'system_type': 'API', 'initial_margin': '1.824376', 'avg_price': '3591.28'}
2024-06-16 18:58:39.837 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:58:41.583 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:58:41.585 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:58:41.594 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:58:41.594 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:58:43.596 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:58:43.598 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xef587e560f50e316a1b2406b0d0e9652631a141cc2a0e84665d286df3afb06ed', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718557123373698668', 'timestamp': '1718557123373698668', 'system_type': 'API', 'initial_margin': '1.82444', 'avg_price': '3591.14'}
2024-06-16 18:58:46.300 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:58:48.097 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:58:48.106 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:58:48.116 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:58:48.116 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:58:49.826 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:58:49.833 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xbc21515b886bc68042ff23fef62ecf51d4cc4c4c0114530b04f98771a9a612d8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718557129715105308', 'timestamp': '1718557129715105308', 'system_type': 'API', 'initial_margin': '1.824294', 'avg_price': '3591.13'}
2024-06-16 18:58:52.488 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:58:54.040 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:58:54.042 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:58:54.054 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:58:54.054 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:58:55.631 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:58:55.632 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x5cfdfd9503d91e80a36402f7b14158965b9071ecffe887fb1dbed8807127ef58', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718557135528297283', 'timestamp': '1718557135528297283', 'system_type': 'API', 'initial_margin': '1.8243', 'avg_price': '3591.14'}
2024-06-16 18:58:58.980 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:59:00.692 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:59:00.697 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 18:59:00.720 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 18:59:00.727 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 18:59:02.291 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 18:59:02.292 | INFO     | __main__:buy_market:40 - Response: {'error': 'STALE_DATA'}
2024-06-16 18:59:03.890 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 18:59:05.495 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 18:59:05.497 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:26:44.726 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:26:46.206 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:26:46.207 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:26:46.220 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:26:46.221 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:26:47.763 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:26:47.764 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x1f35ce988e7d2f8e18ddd2e40994672a74a5c718d6cfcf8ef0f9ffca7130df98', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718558807560226814', 'timestamp': '1718558807560226814', 'system_type': 'API', 'initial_margin': '1.832616', 'avg_price': '3603.38'}
2024-06-16 19:27:00.418 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:27:01.985 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:27:01.987 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:27:04.601 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:27:06.160 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:27:06.175 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:47:22.182 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:47:23.754 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:47:23.755 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:47:23.767 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:47:23.768 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:47:25.429 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:47:25.431 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x8717e54da2045c0b598079804e80b0b9e4a86b9d1ac4ad1e0057020d4eb38794', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560045191521911', 'timestamp': '1718560045191521911', 'system_type': 'API', 'initial_margin': '1.826292', 'avg_price': '3591.06'}
2024-06-16 19:47:31.471 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:47:32.966 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:47:32.966 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:47:32.977 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:47:32.978 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:47:34.689 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:47:34.699 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x959dd0e4dd3e72289526bee5e40d6f7699506c9df8fc290e0d423afd73a31a70', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560054496588391', 'timestamp': '1718560054496588391', 'system_type': 'API', 'initial_margin': '1.823916', 'avg_price': '3590.07'}
2024-06-16 19:47:40.154 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:47:41.713 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:47:41.729 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:47:41.735 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:47:41.737 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:47:43.289 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:47:43.300 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xaf9cc22c6b02b55cca8793a9b48190b7f9b9db7f66d3033b9176cae5f1c2bd79', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560063090854922', 'timestamp': '1718560063090854922', 'system_type': 'API', 'initial_margin': '1.828252', 'avg_price': '3589.75'}
2024-06-16 19:47:48.659 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:47:50.196 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:47:50.206 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:47:50.234 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:47:50.235 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:47:52.064 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:47:52.069 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xa1b6bcd3f28fed398657d4967a86b9a922b8f1368f585def3b681356354cbf10', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560071877741478', 'timestamp': '1718560071877741478', 'system_type': 'API', 'initial_margin': '1.825601', 'avg_price': '3589.67'}
2024-06-16 19:47:58.018 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:47:59.507 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:47:59.508 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:47:59.515 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:47:59.516 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:48:01.007 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:48:01.008 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x2986d4df9cc8899e23e61477963e11b9ef02798f5f251bb9739e8d52d754f601', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560080806789548', 'timestamp': '1718560080806789548', 'system_type': 'API', 'initial_margin': '1.828961', 'avg_price': '3589.33'}
2024-06-16 19:48:06.377 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:48:08.026 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:48:08.031 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:48:10.452 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:48:11.988 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:48:11.989 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:51:45.796 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:51:47.270 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:51:47.271 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:51:47.276 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:51:47.277 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:51:48.950 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:51:48.951 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x05d6fe36b435bddb86c6ea2023fcbd461910b569bb9d4903713e0d5fd449713b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560308775036665', 'timestamp': '1718560308775036665', 'system_type': 'API', 'initial_margin': '1.825196', 'avg_price': '3588.76'}
2024-06-16 19:51:54.273 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:51:55.702 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:51:55.704 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:53:37.024 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:53:39.081 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:53:39.082 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:53:39.101 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:53:39.102 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:53:40.643 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:53:40.647 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x286c44c38399806570e5a5b7f158acd901b64974899c17e517cfb3dc86812326', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560420454438468', 'timestamp': '1718560420454438468', 'system_type': 'API', 'initial_margin': '1.826737', 'avg_price': '3590.56'}
2024-06-16 19:53:45.970 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:53:47.492 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:53:47.502 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:53:47.514 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:53:47.515 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:53:49.023 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:53:49.024 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x5965fb9ff4fb9f4120b4cca5f0bb0866c28ef7c03fc3b9fc644c21bb0167642e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560428832943124', 'timestamp': '1718560428832943124', 'system_type': 'API', 'initial_margin': '1.827624', 'avg_price': '3590.16'}
2024-06-16 19:53:54.373 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:53:55.929 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:53:55.931 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:53:55.950 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:53:55.951 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:53:57.430 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:53:57.431 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xe5006115e22089a2b4e4dabcbac929018ce7ace6adf69dcb86eedea91372fad2', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560437248723620', 'timestamp': '1718560437248723620', 'system_type': 'API', 'initial_margin': '1.829979', 'avg_price': '3590.16'}
2024-06-16 19:54:02.858 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:54:04.374 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:54:04.375 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:54:04.439 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:54:04.442 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:54:05.966 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:54:05.967 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xac55ad89c5cf2a576f6db8303d6bab68c55004bba23fd4195aabf426668305fd', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560445783564954', 'timestamp': '1718560445783564954', 'system_type': 'API', 'initial_margin': '1.825865', 'avg_price': '3589.29'}
2024-06-16 19:54:11.286 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:54:12.819 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:54:12.820 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:54:12.845 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:54:12.845 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:54:14.338 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:54:14.339 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x866111bcf623cfc909c3b1adfa0c341723e3b4bda2cb2200c4bf6b1ab7ac4f61', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560454157960767', 'timestamp': '1718560454157960767', 'system_type': 'API', 'initial_margin': '1.824489', 'avg_price': '3589.04'}
2024-06-16 19:54:18.231 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:54:19.840 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:54:19.851 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:54:52.932 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:54:54.384 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:54:54.385 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:54:54.415 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:54:54.416 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:54:56.432 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:54:56.433 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xf1141753441a2b50fc06e5f4b02dede92cb63000d29096b8b0278a234f4bb41d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560495778044504', 'timestamp': '1718560495778044504', 'system_type': 'API', 'initial_margin': '1.824407', 'avg_price': '3588.24'}
2024-06-16 19:55:08.734 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:55:10.315 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:55:10.316 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:55:11.976 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:55:13.538 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:55:13.542 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:59:19.709 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:59:21.227 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:59:21.228 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:59:21.257 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:59:21.258 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:59:22.935 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:59:22.936 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x820ebe5f0e1c8a2ecdfc9c9a465a0c0a75f5ea48c527d663f186f9e1906ace33', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560762562754027', 'timestamp': '1718560762562754027', 'system_type': 'API', 'initial_margin': '1.824388', 'avg_price': '3589.4'}
2024-06-16 19:59:28.245 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:59:29.759 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:59:29.779 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:59:29.797 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:59:29.797 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:59:31.346 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:59:31.348 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xb9f5338ac27b2bb4ec4d3ff0e47bcefc1333d98cef3b3b3fc3b0e58dc42d948d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560771142058884', 'timestamp': '1718560771142058884', 'system_type': 'API', 'initial_margin': '1.823411', 'avg_price': '3589.39'}
2024-06-16 19:59:36.714 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:59:38.260 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:59:38.262 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:59:38.267 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:59:38.268 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:59:40.091 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:59:40.094 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x1c4ff080a519f02069aec6169458e2f58f1b478b66525a00beaeac4ef9967506', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560779705954327', 'timestamp': '1718560779705954327', 'system_type': 'API', 'initial_margin': '1.826518', 'avg_price': '3590.2'}
2024-06-16 19:59:45.413 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:59:46.879 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:59:46.880 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:59:46.893 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 19:59:46.896 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 19:59:48.386 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 19:59:48.387 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x25d962f6e3dda7f2bc922d356a84397b981e787363b0d3c43518f42a8baacc9f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718560788204715811', 'timestamp': '1718560788204715811', 'system_type': 'API', 'initial_margin': '1.82593', 'avg_price': '3590.42'}
2024-06-16 19:59:53.690 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:59:55.185 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:59:55.186 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 19:59:57.932 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 19:59:59.492 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 19:59:59.493 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:05:19.738 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:05:19.738 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:05:21.298 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:05:21.300 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xf0a98faa91d911d24b19dfc9d6d5553f6a770d7d55608b484768f4fc307e2a89', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561121102900062', 'timestamp': '1718561121102900062', 'system_type': 'API', 'initial_margin': '1.822518', 'avg_price': '3587.63'}
2024-06-16 20:05:23.915 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:05:23.916 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:05:25.435 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:05:25.437 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x59a475965817a4347f6590bf205b99715f2058268150a955dae4bebbd7008cba', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561125252142571', 'timestamp': '1718561125252142571', 'system_type': 'API', 'initial_margin': '1.825054', 'avg_price': '3588.26'}
2024-06-16 20:05:27.958 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:05:27.959 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:05:29.774 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:05:29.775 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x30ab741ed61f377e2bd4c18e1e52ffbf0a65955605e91b1f96299c7fee89b463', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561129321178444', 'timestamp': '1718561129321178444', 'system_type': 'API', 'initial_margin': '1.823086', 'avg_price': '3587.95'}
2024-06-16 20:05:32.320 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:05:32.321 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:05:34.109 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:05:34.110 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x3b1cbb12830ef96c7fb394a75f7fb6fe377396a7c44389b93e09b9f2e75a837f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561133935381661', 'timestamp': '1718561133935381661', 'system_type': 'API', 'initial_margin': '1.822981', 'avg_price': '3587.94'}
2024-06-16 20:05:36.774 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:05:36.775 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:05:38.216 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:05:38.217 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x717034f84f717640607bc9b9734ef98632f980e6b56108ca10f5531d83298dd3', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561138042310242', 'timestamp': '1718561138042310242', 'system_type': 'API', 'initial_margin': '1.825516', 'avg_price': '3588.01'}
2024-06-16 20:05:40.779 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:05:40.779 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:05:42.243 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:05:42.247 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x7db2b29e023b7869cac498c4f8c65fd5dd056209d9df88682912dbe1ef0be92e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561142068406171', 'timestamp': '1718561142068406171', 'system_type': 'API', 'initial_margin': '1.823855', 'avg_price': '3587.72'}
2024-06-16 20:05:44.731 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:05:44.732 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:05:46.544 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:05:46.548 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xdf8edb8661f7fdee9ecab00453a5eeeb12bbe97f3faceb08ac1247144353c02c', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561146352393254', 'timestamp': '1718561146352393254', 'system_type': 'API', 'initial_margin': '1.824086', 'avg_price': '3587.69'}
2024-06-16 20:05:51.249 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:05:52.785 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:05:52.787 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:11:03.359 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:11:04.913 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:11:04.914 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:11:04.923 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:11:04.924 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:11:06.555 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:11:06.556 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x2c7c5494c406bf79d2e711888757f43cdb63a51caa824edca1f8d3155cb94ac5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561466368477628', 'timestamp': '1718561466368477628', 'system_type': 'API', 'initial_margin': '1.825069', 'avg_price': '3590.79'}
2024-06-16 20:11:22.323 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:11:23.791 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:11:23.801 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:13:05.350 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:13:06.887 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:13:06.888 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:13:06.909 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:13:06.909 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:13:08.487 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:13:08.488 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x76b9346fe8b396ea6c595371f0e2e2cd1c45e8f97344fe2ccc6ed0505cf95652', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561588262614473', 'timestamp': '1718561588262614473', 'system_type': 'API', 'initial_margin': '1.829356', 'avg_price': '3590.36'}
2024-06-16 20:13:21.046 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:13:22.585 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:13:22.587 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:13:22.593 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:13:22.594 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:13:24.840 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:13:24.844 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x5edd8e25206c403c8722fc485256c3bd4d95e519cf501880f5437c31c7a39d90', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561604064785882', 'timestamp': '1718561604064785882', 'system_type': 'API', 'initial_margin': '1.825489', 'avg_price': '3589.85'}
2024-06-16 20:13:27.103 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:13:28.590 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:13:28.595 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:15:01.513 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:15:03.092 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:15:03.093 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:15:03.098 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:15:03.098 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:15:05.237 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:15:05.239 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0xb0c629d923aab5542a91102df0bbb4b20c705de4eeb7f3f12e9c098a9f8bba50', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561704409445908', 'timestamp': '1718561704409445908', 'system_type': 'API', 'initial_margin': '1.829107', 'avg_price': '3590.96'}
2024-06-16 20:15:18.184 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:15:19.738 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:15:19.739 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:15:19.776 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:15:19.776 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:15:21.585 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:15:21.586 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x1d685f127839bd3ea9b577f4135b066b8fbfc736dd03238a50b7c29a0843af9a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561721402491447', 'timestamp': '1718561721402491447', 'system_type': 'API', 'initial_margin': '1.823797', 'avg_price': '3590.15'}
2024-06-16 20:15:23.318 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:15:25.009 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:15:25.011 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:17:15.829 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:17:17.346 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:17:17.347 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:17:17.363 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:17:17.364 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:17:18.881 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:17:18.881 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x0672f5b4284b79296025f838bc567f961bfdd8209e6cce8de34bf363967d6321', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718561838672784407', 'timestamp': '1718561838672784407', 'system_type': 'API', 'initial_margin': '1.825257', 'avg_price': '3589.53'}
2024-06-16 20:17:31.896 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:17:33.557 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:17:33.559 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:17:35.600 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:17:37.304 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:17:37.305 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:20:25.139 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:20:25.140 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:20:26.753 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-16 20:20:26.754 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x057f6fb311cb8fdabaed66aac570ab43c9abdc794a8c95e6c56ab0312d5d9d61', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718562026588299937', 'timestamp': '1718562026588299937', 'system_type': 'API', 'initial_margin': '1.824599', 'avg_price': '3591.73'}
2024-06-16 20:20:30.217 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:20:30.217 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:20:31.820 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:20:31.826 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x7079edb13657e7ef5dde8650cb766716b667ac43f4265be4ade61233fd3a7bd5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718562031643666564', 'timestamp': '1718562031643666564', 'system_type': 'API', 'initial_margin': '1.827299', 'avg_price': '3592.06'}
2024-06-16 20:20:39.750 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:20:39.750 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:20:41.371 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-16 20:20:41.372 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x81fc8d79fa3187da0676c52a2609e2a69543ce54a86bc97bf5321e3e702f00f5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718562041142439785', 'timestamp': '1718562041142439785', 'system_type': 'API', 'initial_margin': '1.824857', 'avg_price': '3592.24'}
2024-06-16 20:20:48.977 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:20:50.544 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:20:50.545 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:26:38.188 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:26:38.189 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:26:39.981 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-16 20:26:39.983 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0xd38ddbbc99775e84d122684646dccb28440981d2fafbe9e0b7299d60f2d041ec', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718562399535911091', 'timestamp': '1718562399535911091', 'system_type': 'API', 'initial_margin': '1.825512', 'avg_price': '3593.53'}
2024-06-16 20:26:43.665 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:26:43.665 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:26:45.218 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:26:45.258 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x90b4b183fe7d9f86b2c3fdbe494725dbe06b0eba8627924dc9f54058aab2f343', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718562405059883376', 'timestamp': '1718562405059883376', 'system_type': 'API', 'initial_margin': '1.827014', 'avg_price': '3593.56'}
2024-06-16 20:26:52.730 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:26:52.732 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:26:54.300 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-16 20:26:54.302 | INFO     | __main__:sell_market:56 - Response: {'error': 'STALE_DATA'}
2024-06-16 20:27:01.307 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:27:02.762 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:27:02.766 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:29:22.837 | INFO     | __main__:sell_market:48 - Creating market sell order...
2024-06-16 20:29:22.837 | ERROR    | __main__:sell_market:58 - An error occurred while creating market sell order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x755fc6393380>
    └ <Thread(Thread-1 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x755fc6393060>
    └ <Thread(Thread-1 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 129054114055872)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 51734)>, ('10.0.2.15', 51734))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 129054114055872)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 51734)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 51734)>
    │    └ <function BaseServer.finish_request at 0x755fc2da5440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │    │                   │        └ ('10.0.2.15', 51734)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 51734)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755fc27a36a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac2a80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755fc2da7ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac2a80>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac2a80>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac2a80>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x755fc1909440>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc19093a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc19093a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x755fc1ad8fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x755fc1ad8720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x755fc1ad8680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'sell'
           │    │           │    │              └ <Rule '/sell' (POST, OPTIONS) -> sell>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x755fc1908180>, 'buy': <function buy at 0x755fc19082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x755fc1ad8900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 119, in sell
    result = asyncio.run(sell_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                         │    │                       │    └ 0.01
             │       │   │                         │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                         │    └ (1,)
             │       │   │                         └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function sell_market at 0x755fc1adb380>
             │       └ <function run at 0x755fc5b6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object sell_market at 0x755fc1a9ae30>
           │      └ <function Runner.run at 0x755fc5a00400>
           └ <asyncio.runners.Runner object at 0x755fc3e16cc0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<sell_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:58> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x755fc5bf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x755fc3e16cc0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x755fc5bf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x755fc5bf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x755fc5b462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc19144f0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc19144f0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc19144f0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc19144f0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 49, in sell_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x755fc2d92b60>
               └ <aevo.AevoClient object at 0x755fc1b71fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 20:29:26.228 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:29:26.229 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x755fc6393380>
    └ <Thread(Thread-2 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x755fc6393060>
    └ <Thread(Thread-2 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 129054114055872)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 54770)>, ('10.0.2.15', 54770))
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 129054114055872)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 54770)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 54770)>
    │    └ <function BaseServer.finish_request at 0x755fc2da5440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │    │                   │        └ ('10.0.2.15', 54770)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 54770)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755fc27a36a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1915880>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755fc2da7ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1915880>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x755fc1915880>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1915880>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x755fc1909ee0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc1909a80>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc1909a80>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x755fc1ad8fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x755fc1ad8720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x755fc1ad8680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x755fc1908180>, 'buy': <function buy at 0x755fc19082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x755fc1ad8900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x755fc597cb80>
             │       └ <function run at 0x755fc5b6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x755fc1a9b010>
           │      └ <function Runner.run at 0x755fc5a00400>
           └ <asyncio.runners.Runner object at 0x755fc27e5430>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-4' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_run...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x755fc5bf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x755fc27e5430>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x755fc5bf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x755fc5bf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x755fc5b462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc3e43160>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc3e43160>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc3e43160>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc3e43160>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x755fc2d92b60>
               └ <aevo.AevoClient object at 0x755fc1b71fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 20:29:33.867 | INFO     | __main__:sell_market:48 - Creating market sell order...
2024-06-16 20:29:33.867 | ERROR    | __main__:sell_market:58 - An error occurred while creating market sell order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x755fc6393380>
    └ <Thread(Thread-3 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x755fc6393060>
    └ <Thread(Thread-3 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 129054114055872)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53670)>, ('10.0.2.15', 53670))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 129054114055872)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 53670)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53670)>
    │    └ <function BaseServer.finish_request at 0x755fc2da5440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │    │                   │        └ ('10.0.2.15', 53670)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53670)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755fc27a36a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac3fe0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755fc2da7ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac3fe0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac3fe0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1ac3fe0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x755fc19094e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc1909940>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc1909940>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x755fc1ad8fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x755fc1ad8720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x755fc1ad8680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'sell'
           │    │           │    │              └ <Rule '/sell' (POST, OPTIONS) -> sell>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x755fc1908180>, 'buy': <function buy at 0x755fc19082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x755fc1ad8900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 119, in sell
    result = asyncio.run(sell_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                         │    │                       │    └ 0.01
             │       │   │                         │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                         │    └ (1,)
             │       │   │                         └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function sell_market at 0x755fc1adb380>
             │       └ <function run at 0x755fc5b6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object sell_market at 0x755fc1a9b5b0>
           │      └ <function Runner.run at 0x755fc5a00400>
           └ <asyncio.runners.Runner object at 0x755fc1915af0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<sell_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:58> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x755fc5bf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x755fc1915af0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x755fc5bf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x755fc5bf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x755fc5b462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1915de0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1915de0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1915de0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1915de0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 49, in sell_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x755fc2d92b60>
               └ <aevo.AevoClient object at 0x755fc1b71fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 20:29:39.405 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:29:39.406 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x755fc6393380>
    └ <Thread(Thread-4 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x755fc6393060>
    └ <Thread(Thread-4 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 129054114055872)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53686)>, ('10.0.2.15', 53686))
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 129054114055872)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 53686)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53686)>
    │    └ <function BaseServer.finish_request at 0x755fc2da5440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │    │                   │        └ ('10.0.2.15', 53686)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53686)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755fc27a36a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916150>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755fc2da7ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916150>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916150>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916150>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x755fc190a480>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc190a200>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc190a200>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x755fc1ad8fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x755fc1ad8720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x755fc1ad8680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (POST, OPTIONS) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x755fc1908180>, 'buy': <function buy at 0x755fc19082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x755fc1ad8900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 114, in buy
    result = asyncio.run(buy_market(instrument_id=keys.instrument_id, quantity=keys.quantity))
             │       │   │                        │    │                       │    └ 0.01
             │       │   │                        │    │                       └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   │                        │    └ (1,)
             │       │   │                        └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function buy_market at 0x755fc597cb80>
             │       └ <function run at 0x755fc5b6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x755fc19e4400>
           │      └ <function Runner.run at 0x755fc5a00400>
           └ <asyncio.runners.Runner object at 0x755fc1916720>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-10' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x755fc5bf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x755fc1916720>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x755fc5bf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x755fc5bf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x755fc5b462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1916a10>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1916a10>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1916a10>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1916a10>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x755fc2d92b60>
               └ <aevo.AevoClient object at 0x755fc1b71fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 231, in rest_create_market_order
    int(instrument_id),
        └ (1,)

TypeError: int() argument must be a string, a bytes-like object or a real number, not 'tuple'
2024-06-16 20:29:52.120 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-16 20:29:52.122 | ERROR    | __main__:close_positions:72 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x755fc6393380>
    └ <Thread(Thread-5 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x755fc6393060>
    └ <Thread(Thread-5 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 129054114055872)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 44582)>, ('10.0.2.15', 44582))
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 129054114055872)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 129054114055872)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 44582)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 44582)>
    │    └ <function BaseServer.finish_request at 0x755fc2da5440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │    │                   │        └ ('10.0.2.15', 44582)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 44582)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x755fc27a36a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916c30>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x755fc2da7ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916c30>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916c30>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x755fc1a8a600>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x755fc1916c30>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x755fc190a5c0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc63a8860>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x755fc63a8860>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x755fc1ad8fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x755fc1ad8720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x755fc1ad8680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (POST, OPTIONS) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x755fc1908180>, 'buy': <function buy at 0x755fc19082c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x755fc1ad8900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 124, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x755fc1adbd80>
             │       └ <function run at 0x755fc5b6ca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x755fc19e54e0>
           │      └ <function Runner.run at 0x755fc5a00400>
           └ <asyncio.runners.Runner object at 0x755fc1917320>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-13' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:72> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x755fc5bf6020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x755fc1917320>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x755fc5bf5f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x755fc5bf7d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x755fc5b462a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1917610>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1917610>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1917610>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x755fc1917610>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 64, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x755fc2d92e80>
               └ <aevo.AevoClient object at 0x755fc1b71fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x755fc5427100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x755fc1b71fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x755fc55e0860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x755fc54263e0>
           └ <requests.sessions.Session object at 0x755fc2717200>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x755fc5426340>
           └ <requests.sessions.Session object at 0x755fc2717200>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x755fc55e3ce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x755fc54240e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x755fc55e05e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x755fc55e0680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 20:32:08.679 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:32:08.680 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:32:08.681 | ERROR    | __main__:sell_market:59 - An error occurred while creating market sell order: 'tuple' object has no attribute 'to_bytes'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f72efa97380>
    └ <Thread(Thread-1 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f72efa97060>
    └ <Thread(Thread-1 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 140131530966720)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50274)>, ('10.0.2.15', 50274))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 140131530966720)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 50274)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50274)>
    │    └ <function BaseServer.finish_request at 0x7f72eb9a1440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │    │                   │        └ ('10.0.2.15', 50274)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50274)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f72eb39b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb09c860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f72eb9a3ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb09c860>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb09c860>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb09c860>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f72eaf04ea0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf04e00>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf04e00>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f72eb0d4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f72eb0d4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f72eb0d4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'sell'
           │    │           │    │              └ <Rule '/sell' (OPTIONS, POST) -> sell>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f72eaf04040>, 'buy': <function buy at 0x7f72eaf04180>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f72eb0d4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 89, in sell
    result = asyncio.run(sell_market(instrument_id=1, quantity=0.01))
             │       │   └ <function sell_market at 0x7f72eb0d7380>
             │       └ <function run at 0x7f72ef7c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object sell_market at 0x7f72eb096d40>
           │      └ <function Runner.run at 0x7f72ef108400>
           └ <asyncio.runners.Runner object at 0x7f72eb1b8710>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<sell_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:59> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f72ef852020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f72eb1b8710>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f72ef851f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f72ef853d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f72ef7962a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72ed744250>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72ed744250>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72ed744250>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72ed744250>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 50, in sell_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7f72eb992b60>
               └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 230, in rest_create_market_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7f72eb993560>
                     └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7f72eb993880>
                                └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eb0da3f0>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7f72eb991940>
                     │      └ <aevo.Order object at 0x7f72ec5ae9c0>
                     └ <eth_hash.main.Keccak256 object at 0x7f72ee7cfa40>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           │      │               └ <aevo.Order object at 0x7f72ec5ae9c0>
                           │      └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eb0da3f0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7f72eb991120>
           │                │    │            └ <aevo.Order object at 0x7f72ec5ae9c0>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7f72eb991580>)>
           │                └ <aevo.Order object at 0x7f72ec5ae9c0>
           └ <function keccak at 0x7f72ee7f0860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'maker'
    │              │      │   │            │    └ {'maker': ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',), 'isBuy': False, 'limitPrice': 0, 'amount': 10000, 'salt': 98375233...
    │              │      │   │            └ <aevo.Order object at 0x7f72ec5ae9c0>
    │              │      │   └ <function EIP712Type.encode_value at 0x7f72eb9902c0>
    │              │      └ <eip712_structs.Address object at 0x7f72ebfe24b0>
    │              └ <method 'append' of 'list' objects>
    └ []

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Address._encode_value at 0x7f72eb990860>
           └ <eip712_structs.Address object at 0x7f72ebfe24b0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 101, in _encode_value
    return Uint(160).encode_value(v)
           │                      └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           └ <class 'eip712_structs.Uint'>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Uint._encode_value at 0x7f72eb990e00>
           └ <eip712_structs.Uint object at 0x7f72eb0da2d0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 210, in _encode_value
    value.to_bytes(
    └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)

AttributeError: 'tuple' object has no attribute 'to_bytes'
2024-06-16 20:32:11.688 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:32:11.688 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:32:11.690 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: 'tuple' object has no attribute 'to_bytes'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f72efa97380>
    └ <Thread(Thread-2 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f72efa97060>
    └ <Thread(Thread-2 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 140131530966720)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50288)>, ('10.0.2.15', 50288))
    │    │        └ <Thread(Thread-2 (process_request_thread), started daemon 140131530966720)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>>
    └ <Thread(Thread-2 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 50288)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50288)>
    │    └ <function BaseServer.finish_request at 0x7f72eb9a1440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │    │                   │        └ ('10.0.2.15', 50288)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 50288)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f72eb39b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da450>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f72eb9a3ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da450>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da450>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da450>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f72eaf054e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf05300>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf05300>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f72eb0d4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f72eb0d4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f72eb0d4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (OPTIONS, POST) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f72eaf04040>, 'buy': <function buy at 0x7f72eaf04180>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f72eb0d4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 83, in buy
    result = asyncio.run(buy_market(instrument_id=1, quantity=0.01))
             │       │   └ <function buy_market at 0x7f72ef084b80>
             │       └ <function run at 0x7f72ef7c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x7f72eb0973d0>
           │      └ <function Runner.run at 0x7f72ef108400>
           └ <asyncio.runners.Runner object at 0x7f72eb0db6e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-4' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_run...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f72ef852020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f72eb0db6e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f72ef851f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f72ef853d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f72ef7962a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb0db9d0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb0db9d0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb0db9d0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb0db9d0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7f72eb992b60>
               └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 230, in rest_create_market_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7f72eb993560>
                     └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7f72eb993880>
                                └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eb0dbc50>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7f72eb991940>
                     │      └ <aevo.Order object at 0x7f72ec5632f0>
                     └ <eth_hash.main.Keccak256 object at 0x7f72ee7cfa40>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           │      │               └ <aevo.Order object at 0x7f72ec5632f0>
                           │      └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eb0dbc50>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7f72eb991120>
           │                │    │            └ <aevo.Order object at 0x7f72ec5632f0>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7f72eb991580>)>
           │                └ <aevo.Order object at 0x7f72ec5632f0>
           └ <function keccak at 0x7f72ee7f0860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'maker'
    │              │      │   │            │    └ {'maker': ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',), 'isBuy': True, 'limitPrice': 1157920892373161954235709850086879078...
    │              │      │   │            └ <aevo.Order object at 0x7f72ec5632f0>
    │              │      │   └ <function EIP712Type.encode_value at 0x7f72eb9902c0>
    │              │      └ <eip712_structs.Address object at 0x7f72ebfe24b0>
    │              └ <method 'append' of 'list' objects>
    └ []

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Address._encode_value at 0x7f72eb990860>
           └ <eip712_structs.Address object at 0x7f72ebfe24b0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 101, in _encode_value
    return Uint(160).encode_value(v)
           │                      └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           └ <class 'eip712_structs.Uint'>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Uint._encode_value at 0x7f72eb990e00>
           └ <eip712_structs.Uint object at 0x7f72eb0dbc80>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 210, in _encode_value
    value.to_bytes(
    └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)

AttributeError: 'tuple' object has no attribute 'to_bytes'
2024-06-16 20:32:19.825 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:32:19.826 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:32:19.827 | ERROR    | __main__:sell_market:59 - An error occurred while creating market sell order: 'tuple' object has no attribute 'to_bytes'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f72efa97380>
    └ <Thread(Thread-3 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f72efa97060>
    └ <Thread(Thread-3 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 140131530966720)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53310)>, ('10.0.2.15', 53310))
    │    │        └ <Thread(Thread-3 (process_request_thread), started daemon 140131530966720)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>>
    └ <Thread(Thread-3 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 53310)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53310)>
    │    └ <function BaseServer.finish_request at 0x7f72eb9a1440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │    │                   │        └ ('10.0.2.15', 53310)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 53310)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f72eb39b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0dbec0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f72eb9a3ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0dbec0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0dbec0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0dbec0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f72eaf06200>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf062a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf062a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f72eb0d4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f72eb0d4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f72eb0d4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'sell'
           │    │           │    │              └ <Rule '/sell' (OPTIONS, POST) -> sell>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f72eaf04040>, 'buy': <function buy at 0x7f72eaf04180>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f72eb0d4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 89, in sell
    result = asyncio.run(sell_market(instrument_id=1, quantity=0.01))
             │       │   └ <function sell_market at 0x7f72eb0d7380>
             │       └ <function run at 0x7f72ef7c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object sell_market at 0x7f72eb097d30>
           │      └ <function Runner.run at 0x7f72ef108400>
           └ <asyncio.runners.Runner object at 0x7f72eafec530>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-7' coro=<sell_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:59> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f72ef852020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f72eafec530>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f72ef851f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f72ef853d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f72ef7962a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec820>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec820>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec820>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec820>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 50, in sell_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7f72eb992b60>
               └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 230, in rest_create_market_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7f72eb993560>
                     └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7f72eb993880>
                                └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eafecaa0>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7f72eb991940>
                     │      └ <aevo.Order object at 0x7f72eafec8c0>
                     └ <eth_hash.main.Keccak256 object at 0x7f72ee7cfa40>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           │      │               └ <aevo.Order object at 0x7f72eafec8c0>
                           │      └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eafecaa0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7f72eb991120>
           │                │    │            └ <aevo.Order object at 0x7f72eafec8c0>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7f72eb991580>)>
           │                └ <aevo.Order object at 0x7f72eafec8c0>
           └ <function keccak at 0x7f72ee7f0860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'maker'
    │              │      │   │            │    └ {'maker': ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',), 'isBuy': False, 'limitPrice': 0, 'amount': 10000, 'salt': 73992693...
    │              │      │   │            └ <aevo.Order object at 0x7f72eafec8c0>
    │              │      │   └ <function EIP712Type.encode_value at 0x7f72eb9902c0>
    │              │      └ <eip712_structs.Address object at 0x7f72ebfe24b0>
    │              └ <method 'append' of 'list' objects>
    └ []

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Address._encode_value at 0x7f72eb990860>
           └ <eip712_structs.Address object at 0x7f72ebfe24b0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 101, in _encode_value
    return Uint(160).encode_value(v)
           │                      └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           └ <class 'eip712_structs.Uint'>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Uint._encode_value at 0x7f72eb990e00>
           └ <eip712_structs.Uint object at 0x7f72eafec860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 210, in _encode_value
    value.to_bytes(
    └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)

AttributeError: 'tuple' object has no attribute 'to_bytes'
2024-06-16 20:32:25.204 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:32:25.205 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:32:25.206 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: 'tuple' object has no attribute 'to_bytes'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f72efa97380>
    └ <Thread(Thread-4 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f72efa97060>
    └ <Thread(Thread-4 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 140131530966720)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35544)>, ('10.0.2.15', 35544))
    │    │        └ <Thread(Thread-4 (process_request_thread), started daemon 140131530966720)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>>
    └ <Thread(Thread-4 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 35544)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35544)>
    │    └ <function BaseServer.finish_request at 0x7f72eb9a1440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │    │                   │        └ ('10.0.2.15', 35544)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35544)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f72eb39b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafecd40>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f72eb9a3ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafecd40>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafecd40>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafecd40>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f72eaf068e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf067a0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf067a0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f72eb0d4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f72eb0d4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f72eb0d4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (OPTIONS, POST) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f72eaf04040>, 'buy': <function buy at 0x7f72eaf04180>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f72eb0d4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 83, in buy
    result = asyncio.run(buy_market(instrument_id=1, quantity=0.01))
             │       │   └ <function buy_market at 0x7f72ef084b80>
             │       └ <function run at 0x7f72ef7c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x7f72eaff0d60>
           │      └ <function Runner.run at 0x7f72ef108400>
           └ <asyncio.runners.Runner object at 0x7f72eafed2e0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-10' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f72ef852020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f72eafed2e0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f72ef851f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f72ef853d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f72ef7962a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafed5d0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafed5d0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafed5d0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafed5d0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7f72eb992b60>
               └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 230, in rest_create_market_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7f72eb993560>
                     └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7f72eb993880>
                                └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eafedcd0>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7f72eb991940>
                     │      └ <aevo.Order object at 0x7f72eafed6d0>
                     └ <eth_hash.main.Keccak256 object at 0x7f72ee7cfa40>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           │      │               └ <aevo.Order object at 0x7f72eafed6d0>
                           │      └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eafedcd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7f72eb991120>
           │                │    │            └ <aevo.Order object at 0x7f72eafed6d0>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7f72eb991580>)>
           │                └ <aevo.Order object at 0x7f72eafed6d0>
           └ <function keccak at 0x7f72ee7f0860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'maker'
    │              │      │   │            │    └ {'maker': ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',), 'isBuy': True, 'limitPrice': 1157920892373161954235709850086879078...
    │              │      │   │            └ <aevo.Order object at 0x7f72eafed6d0>
    │              │      │   └ <function EIP712Type.encode_value at 0x7f72eb9902c0>
    │              │      └ <eip712_structs.Address object at 0x7f72ebfe24b0>
    │              └ <method 'append' of 'list' objects>
    └ []

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Address._encode_value at 0x7f72eb990860>
           └ <eip712_structs.Address object at 0x7f72ebfe24b0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 101, in _encode_value
    return Uint(160).encode_value(v)
           │                      └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           └ <class 'eip712_structs.Uint'>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Uint._encode_value at 0x7f72eb990e00>
           └ <eip712_structs.Uint object at 0x7f72eafed7f0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 210, in _encode_value
    value.to_bytes(
    └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)

AttributeError: 'tuple' object has no attribute 'to_bytes'
2024-06-16 20:32:32.929 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:32:32.930 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:32:32.931 | ERROR    | __main__:sell_market:59 - An error occurred while creating market sell order: 'tuple' object has no attribute 'to_bytes'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f72efa97380>
    └ <Thread(Thread-5 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f72efa97060>
    └ <Thread(Thread-5 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 140131530966720)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35558)>, ('10.0.2.15', 35558))
    │    │        └ <Thread(Thread-5 (process_request_thread), started daemon 140131530966720)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>>
    └ <Thread(Thread-5 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 35558)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35558)>
    │    └ <function BaseServer.finish_request at 0x7f72eb9a1440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │    │                   │        └ ('10.0.2.15', 35558)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 35558)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f72eb39b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedb20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f72eb9a3ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedb20>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedb20>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedb20>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f72eaf06e80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf06ca0>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf06ca0>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f72eb0d4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f72eb0d4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f72eb0d4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'sell'
           │    │           │    │              └ <Rule '/sell' (OPTIONS, POST) -> sell>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f72eaf04040>, 'buy': <function buy at 0x7f72eaf04180>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f72eb0d4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 89, in sell
    result = asyncio.run(sell_market(instrument_id=1, quantity=0.01))
             │       │   └ <function sell_market at 0x7f72eb0d7380>
             │       └ <function run at 0x7f72ef7c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object sell_market at 0x7f72eaff2020>
           │      └ <function Runner.run at 0x7f72ef108400>
           └ <asyncio.runners.Runner object at 0x7f72eafee0f0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-13' coro=<sell_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:59> cb=[_r...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f72ef852020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f72eafee0f0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f72ef851f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f72ef853d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f72ef7962a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb09f940>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb09f940>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb09f940>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eb09f940>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 50, in sell_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7f72eb992b60>
               └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 230, in rest_create_market_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7f72eb993560>
                     └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7f72eb993880>
                                └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eb0dbdd0>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7f72eb991940>
                     │      └ <aevo.Order object at 0x7f72eb17e900>
                     └ <eth_hash.main.Keccak256 object at 0x7f72ee7cfa40>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           │      │               └ <aevo.Order object at 0x7f72eb17e900>
                           │      └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eb0dbdd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7f72eb991120>
           │                │    │            └ <aevo.Order object at 0x7f72eb17e900>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7f72eb991580>)>
           │                └ <aevo.Order object at 0x7f72eb17e900>
           └ <function keccak at 0x7f72ee7f0860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'maker'
    │              │      │   │            │    └ {'maker': ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',), 'isBuy': False, 'limitPrice': 0, 'amount': 10000, 'salt': 15539330...
    │              │      │   │            └ <aevo.Order object at 0x7f72eb17e900>
    │              │      │   └ <function EIP712Type.encode_value at 0x7f72eb9902c0>
    │              │      └ <eip712_structs.Address object at 0x7f72ebfe24b0>
    │              └ <method 'append' of 'list' objects>
    └ []

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Address._encode_value at 0x7f72eb990860>
           └ <eip712_structs.Address object at 0x7f72ebfe24b0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 101, in _encode_value
    return Uint(160).encode_value(v)
           │                      └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           └ <class 'eip712_structs.Uint'>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Uint._encode_value at 0x7f72eb990e00>
           └ <eip712_structs.Uint object at 0x7f72eb0dbe30>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 210, in _encode_value
    value.to_bytes(
    └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)

AttributeError: 'tuple' object has no attribute 'to_bytes'
2024-06-16 20:32:38.207 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:32:38.208 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:32:38.215 | ERROR    | __main__:buy_market:43 - An error occurred while creating market buy order: 'tuple' object has no attribute 'to_bytes'
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f72efa97380>
    └ <Thread(Thread-6 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f72efa97060>
    └ <Thread(Thread-6 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 140131530966720)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42738)>, ('10.0.2.15', 42738))
    │    │        └ <Thread(Thread-6 (process_request_thread), started daemon 140131530966720)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>>
    └ <Thread(Thread-6 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 42738)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42738)>
    │    └ <function BaseServer.finish_request at 0x7f72eb9a1440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │    │                   │        └ ('10.0.2.15', 42738)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 42738)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f72eb39b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da630>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f72eb9a3ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da630>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da630>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eb0da630>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f72eaf06f20>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf06d40>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf06d40>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f72eb0d4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f72eb0d4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f72eb0d4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/buy' (OPTIONS, POST) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f72eaf04040>, 'buy': <function buy at 0x7f72eaf04180>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f72eb0d4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 83, in buy
    result = asyncio.run(buy_market(instrument_id=1, quantity=0.01))
             │       │   └ <function buy_market at 0x7f72ef084b80>
             │       └ <function run at 0x7f72ef7c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x7f72eb0976a0>
           │      └ <function Runner.run at 0x7f72ef108400>
           └ <asyncio.runners.Runner object at 0x7f72eb0da5d0>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-16' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:43> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f72ef852020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f72eb0da5d0>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f72ef851f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f72ef853d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f72ef7962a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafee2c0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafee2c0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafee2c0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafee2c0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 34, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7f72eb992b60>
               └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 230, in rest_create_market_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7f72eb993560>
                     └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7f72eb993880>
                                └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eafed4c0>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7f72eb991940>
                     │      └ <aevo.Order object at 0x7f72eb0dbda0>
                     └ <eth_hash.main.Keccak256 object at 0x7f72ee7cfa40>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           │      │               └ <aevo.Order object at 0x7f72eb0dbda0>
                           │      └ <function EIP712Struct.hash_struct at 0x7f72eb991620>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7f72eafed4c0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7f72eb991120>
           │                │    │            └ <aevo.Order object at 0x7f72eb0dbda0>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7f72eb991580>)>
           │                └ <aevo.Order object at 0x7f72eb0dbda0>
           └ <function keccak at 0x7f72ee7f0860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'maker'
    │              │      │   │            │    └ {'maker': ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',), 'isBuy': True, 'limitPrice': 1157920892373161954235709850086879078...
    │              │      │   │            └ <aevo.Order object at 0x7f72eb0dbda0>
    │              │      │   └ <function EIP712Type.encode_value at 0x7f72eb9902c0>
    │              │      └ <eip712_structs.Address object at 0x7f72ebfe24b0>
    │              └ <method 'append' of 'list' objects>
    └ []

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Address._encode_value at 0x7f72eb990860>
           └ <eip712_structs.Address object at 0x7f72ebfe24b0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 101, in _encode_value
    return Uint(160).encode_value(v)
           │                      └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           └ <class 'eip712_structs.Uint'>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)
           │    └ <function Uint._encode_value at 0x7f72eb990e00>
           └ <eip712_structs.Uint object at 0x7f72eafecf80>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 210, in _encode_value
    value.to_bytes(
    └ ('0xD1a86753268899D56e2ff8b338b75aa45033b17e',)

AttributeError: 'tuple' object has no attribute 'to_bytes'
2024-06-16 20:32:43.156 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:32:43.157 | ERROR    | __main__:close_positions:74 - Произошла ошибка при закрытии позиций: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7f72efa97380>
    └ <Thread(Thread-7 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7f72efa97060>
    └ <Thread(Thread-7 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-7 (process_request_thread), started daemon 140131530966720)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41944)>, ('10.0.2.15', 41944))
    │    │        └ <Thread(Thread-7 (process_request_thread), started daemon 140131530966720)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>>
    └ <Thread(Thread-7 (process_request_thread), started daemon 140131530966720)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 41944)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41944)>
    │    └ <function BaseServer.finish_request at 0x7f72eb9a1440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │    │                   │        └ ('10.0.2.15', 41944)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 41944)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7f72eb39b6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedcd0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7f72eb9a3ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedcd0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedcd0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7f72ee52dfa0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7f72eafedcd0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7f72eaf06200>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf06a20>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7f72eaf06a20>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7f72eb0d4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7f72eb0d4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7f72eb0d4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'close'
           │    │           │    │              └ <Rule '/close' (OPTIONS, POST) -> close>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7f72eaf04040>, 'buy': <function buy at 0x7f72eaf04180>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7f72eb0d4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 95, in close
    result = asyncio.run(close_positions())
             │       │   └ <function close_positions at 0x7f72eb0d7d80>
             │       └ <function run at 0x7f72ef7c4a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object close_positions at 0x7f72eaff13f0>
           │      └ <function Runner.run at 0x7f72ef108400>
           └ <asyncio.runners.Runner object at 0x7f72eafecd70>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-19' coro=<close_positions() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:74> cb...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7f72ef852020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7f72eafecd70>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7f72ef851f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7f72ef853d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7f72ef7962a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec220>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec220>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec220>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7f72eafec220>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 66, in close_positions
    response = aevo.rest_cancel_all_orders(
               │    └ <function AevoClient.rest_cancel_all_orders at 0x7f72eb992e80>
               └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 277, in rest_cancel_all_orders
    req = self.client.delete(
          │    │      └ <function delete at 0x7f72eeae3100>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x7f72ee52db80>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 157, in delete
    return request("delete", url, **kwargs)
           │                 │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │                 └ 'https://api.aevo.xyz/orders-all'
           └ <function request at 0x7f72eec98860>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'json': {}, 'headers': {'AEVO-KEY': ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',), 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb0...
           │       │              │           └ 'https://api.aevo.xyz/orders-all'
           │       │              └ 'delete'
           │       └ <function Session.request at 0x7f72eeae23e0>
           └ <requests.sessions.Session object at 0x7f72eafec290>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 575, in request
    prep = self.prepare_request(req)
           │    │               └ <Request [DELETE]>
           │    └ <function Session.prepare_request at 0x7f72eeae2340>
           └ <requests.sessions.Session object at 0x7f72eafec290>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 486, in prepare_request
    p.prepare(
    │ └ <function PreparedRequest.prepare at 0x7f72eec9bce0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 369, in prepare
    self.prepare_headers(headers)
    │    │               └ {'User-Agent': 'python-requests/2.31.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'AE...
    │    └ <function PreparedRequest.prepare_headers at 0x7f72eeae00e0>
    └ <PreparedRequest [DELETE]>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/models.py", line 491, in prepare_headers
    check_header_validity(header)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function check_header_validity at 0x7f72eec985e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1040, in check_header_validity
    _validate_header_part(header, value, 1)
    │                     │       └ ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)
    │                     └ ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',))
    └ <function _validate_header_part at 0x7f72eec98680>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/utils.py", line 1049, in _validate_header_part
    raise InvalidHeader(
          └ <class 'requests.exceptions.InvalidHeader'>

requests.exceptions.InvalidHeader: Header part (('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) from ('AEVO-KEY', ('NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi',)) must be of type str or bytes, not <class 'tuple'>
2024-06-16 20:39:21.488 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-16 20:39:21.488 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:39:22.984 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-16 20:39:22.985 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x9eeb7e5eceb300c8990aa35c8d8cf34912a7a87f29790e281b568b9ebe3f6376', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718563162840852625', 'timestamp': '1718563162840852625', 'system_type': 'API', 'initial_margin': '1.826605', 'avg_price': '3595.68'}
2024-06-16 20:39:28.234 | INFO     | __main__:buy_market:33 - Creating market buy order...
2024-06-16 20:39:28.235 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:39:29.892 | INFO     | __main__:buy_market:39 - Market buy order request sent successfully
2024-06-16 20:39:29.896 | INFO     | __main__:buy_market:40 - Response: {'order_id': '0x0f120c3759c6a83d994775545f65edffafe0e0d58f7f1d01c2464631237eb6b8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718563169748915784', 'timestamp': '1718563169748915784', 'system_type': 'API', 'initial_margin': '1.829556', 'avg_price': '3596.06'}
2024-06-16 20:39:34.219 | INFO     | __main__:close_positions:65 - Закрытие всех позиций...
2024-06-16 20:39:36.666 | INFO     | __main__:close_positions:70 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:39:36.667 | INFO     | __main__:close_positions:71 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 20:56:42.345 | INFO     | __main__:sell_market:46 - Creating market sell order...
2024-06-16 20:56:42.346 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:56:45.404 | INFO     | __main__:sell_market:52 - Market sell order request sent successfully
2024-06-16 20:56:45.406 | INFO     | __main__:sell_market:53 - Response: {'order_id': '0xeccbc2ef6e4e63dd710c076cd775971f7e2e123c76c96de53511ac086a312ec4', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718564205252891491', 'timestamp': '1718564205252891491', 'system_type': 'API', 'initial_margin': '1.826141', 'avg_price': '3594.77'}
2024-06-16 20:56:50.565 | INFO     | __main__:buy_market:31 - Creating market buy order...
2024-06-16 20:56:50.567 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:56:52.119 | INFO     | __main__:buy_market:37 - Market buy order request sent successfully
2024-06-16 20:56:52.120 | INFO     | __main__:buy_market:38 - Response: {'error': 'STALE_DATA'}
2024-06-16 20:56:59.436 | INFO     | __main__:sell_market:46 - Creating market sell order...
2024-06-16 20:56:59.438 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 20:57:01.103 | INFO     | __main__:sell_market:52 - Market sell order request sent successfully
2024-06-16 20:57:01.104 | INFO     | __main__:sell_market:53 - Response: {'order_id': '0xe756892659e7b6d93f92e77e815671706e1513cac7292f9c95431bde6945ed56', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718564220872258797', 'timestamp': '1718564220872258797', 'system_type': 'API', 'initial_margin': '1.826052', 'avg_price': '3594.59'}
2024-06-16 20:57:07.120 | INFO     | __main__:close_positions:61 - Закрытие всех позиций...
2024-06-16 20:57:08.649 | INFO     | __main__:close_positions:66 - Запрос на закрытие позиций успешно отправлен
2024-06-16 20:57:08.651 | INFO     | __main__:close_positions:67 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-16 22:33:45.667 | INFO     | __main__:buy_market:31 - Creating market buy order...
2024-06-16 22:33:45.688 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 22:33:47.182 | INFO     | __main__:buy_market:37 - Market buy order request sent successfully
2024-06-16 22:33:47.183 | INFO     | __main__:buy_market:38 - Response: {'order_id': '0xc59c44277e43439ba0fc0cb95a11a5dd8ef337dfe8d909042c450532750e5e57', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718570027011781458', 'timestamp': '1718570027011781458', 'system_type': 'API', 'initial_margin': '1.830656', 'avg_price': '3598.75'}
2024-06-16 22:34:04.901 | INFO     | __main__:buy_market:31 - Creating market buy order...
2024-06-16 22:34:04.901 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 22:34:06.342 | INFO     | __main__:buy_market:37 - Market buy order request sent successfully
2024-06-16 22:34:06.348 | INFO     | __main__:buy_market:38 - Response: {'order_id': '0xa4a6713d0bcc9c90ccfd5d662c7bbb3ecd11a9f5deecf0ccbe9522f849a865d7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718570046169992830', 'timestamp': '1718570046169992830', 'system_type': 'API', 'initial_margin': '1.827968', 'avg_price': '3598.26'}
2024-06-16 22:34:23.188 | INFO     | __main__:buy_market:31 - Creating market buy order...
2024-06-16 22:34:23.190 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 22:34:24.693 | INFO     | __main__:buy_market:37 - Market buy order request sent successfully
2024-06-16 22:34:24.694 | INFO     | __main__:buy_market:38 - Response: {'order_id': '0x0b4866ab81ac3b083e0f26d23a3801288f3571557e56e4c1eb918084cfd53f57', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718570064522599732', 'timestamp': '1718570064522599732', 'system_type': 'API', 'initial_margin': '1.83065', 'avg_price': '3598.92'}
2024-06-16 22:36:10.040 | INFO     | __main__:buy_market:31 - Creating market buy order...
2024-06-16 22:36:10.042 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 22:36:11.623 | INFO     | __main__:buy_market:37 - Market buy order request sent successfully
2024-06-16 22:36:11.624 | INFO     | __main__:buy_market:38 - Response: {'order_id': '0x0568f4cd7c7ff98a2b7e9c515c3e43f41501b684ad0b04f618ea874b1860c26f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718570171449210621', 'timestamp': '1718570171449210621', 'system_type': 'API', 'initial_margin': '1.831031', 'avg_price': '3601.69'}
2024-06-16 22:36:29.328 | INFO     | __main__:buy_market:31 - Creating market buy order...
2024-06-16 22:36:29.328 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-16 22:36:31.006 | INFO     | __main__:buy_market:37 - Market buy order request sent successfully
2024-06-16 22:36:31.007 | INFO     | __main__:buy_market:38 - Response: {'order_id': '0x9da9572590fca7284c8a8c64774f91d5197287a7fe8822481546f3bb9cd08f79', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718570190783127872', 'timestamp': '1718570190783127872', 'system_type': 'API', 'initial_margin': '1.833681', 'avg_price': '3601.88'}
2024-06-16 22:36:43.319 | INFO     | __main__:close_positions:61 - Закрытие всех позиций...
2024-06-16 22:36:45.051 | INFO     | __main__:close_positions:66 - Запрос на закрытие позиций успешно отправлен
2024-06-16 22:36:45.052 | INFO     | __main__:close_positions:67 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 15:43:19.352 | INFO     | __main__:close_positions:61 - Закрытие всех позиций...
2024-06-19 15:43:20.958 | INFO     | __main__:close_positions:66 - Запрос на закрытие позиций успешно отправлен
2024-06-19 15:43:20.962 | INFO     | __main__:close_positions:67 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 15:57:56.645 | INFO     | __main__:close_positions:61 - Закрытие всех позиций...
2024-06-19 15:57:58.179 | INFO     | __main__:close_positions:66 - Запрос на закрытие позиций успешно отправлен
2024-06-19 15:57:58.197 | INFO     | __main__:close_positions:67 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 16:16:37.072 | INFO     | __main__:close_positions:61 - Закрытие всех позиций...
2024-06-19 16:16:38.696 | INFO     | __main__:close_positions:66 - Запрос на закрытие позиций успешно отправлен
2024-06-19 16:16:38.697 | INFO     | __main__:close_positions:67 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 17:10:55.731 | INFO     | __main__:close_positions:61 - Закрытие всех позиций...
2024-06-19 17:10:57.608 | INFO     | __main__:close_positions:66 - Запрос на закрытие позиций успешно отправлен
2024-06-19 17:10:57.609 | INFO     | __main__:close_positions:67 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 17:26:15.871 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 17:26:17.540 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 17:26:17.545 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 18:08:40.896 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 18:08:42.352 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 18:08:42.353 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 18:08:53.525 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-19 18:08:53.526 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:08:55.199 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-19 18:08:55.200 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x5a441ba9a87bc5a0b0dbd689952c7645990fc9e712011f9a1d776dbc850f9d5f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718813335018888462', 'timestamp': '1718813335018888462', 'system_type': 'API', 'initial_margin': '1.794612', 'avg_price': '3532.42'}
2024-06-19 18:08:58.068 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-19 18:08:58.068 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:08:59.627 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-19 18:08:59.628 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xa3e9acd296d89ffcbb737a556ad3a749edcb4ed2a36a35a67c5d57933c97ce88', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718813339446837412', 'timestamp': '1718813339446837412', 'system_type': 'API', 'initial_margin': '1.795116', 'avg_price': '3532.44'}
2024-06-19 18:10:03.744 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 18:10:05.641 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 18:10:05.642 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 18:12:16.337 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-19 18:12:16.337 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:12:17.901 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-19 18:12:17.902 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x13353fdee468769d7a49eb5ca89253a13ce070952c2b3f5bd6d4e2bc3c55c7a8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718813537689198631', 'timestamp': '1718813537689198631', 'system_type': 'API', 'initial_margin': '1.793368', 'avg_price': '3526.54'}
2024-06-19 18:12:20.828 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-19 18:12:20.828 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:12:22.850 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-19 18:12:22.851 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x69c0cb4672b45de9378bfe3f19483b5a1509a91dbbc614567272507c25936dae', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718813542687763410', 'timestamp': '1718813542687763410', 'system_type': 'API', 'initial_margin': '1.798581', 'avg_price': '3527.39'}
2024-06-19 18:12:36.716 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 18:12:38.336 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 18:12:38.341 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 18:14:34.963 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-19 18:14:34.964 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:14:36.496 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-19 18:14:36.511 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x4a062044a13f1e226a9e8ac9f59ad48f753a15df91f3f1e75b8554b757b2867b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718813676310147576', 'timestamp': '1718813676310147576', 'system_type': 'API', 'initial_margin': '1.793851', 'avg_price': '3529.43'}
2024-06-19 18:14:39.742 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-19 18:14:39.742 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:14:41.296 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-19 18:14:41.297 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x1fe853a4a4fd5eb3c30606fc81931774f517e5c37f9c14e8c5fd8113c5e0f2a6', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718813681124498831', 'timestamp': '1718813681124498831', 'system_type': 'API', 'initial_margin': '1.796035', 'avg_price': '3530'}
2024-06-19 18:27:02.570 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-19 18:27:02.578 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:27:04.221 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-19 18:27:04.221 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x5abafb1dd5af74f73ed6c9d7e3e189d8387d21675a9eed2933c03a5b47b5938b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718814423964798535', 'timestamp': '1718814423964798535', 'system_type': 'API', 'initial_margin': '1.80121', 'avg_price': '3540.97'}
2024-06-19 18:27:07.241 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-19 18:27:07.242 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 18:27:08.665 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-19 18:27:08.666 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x58da1922451b75af49ba7a4085849f328249db270af24e161c76f98707e447d3', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718814428506143079', 'timestamp': '1718814428506143079', 'system_type': 'API', 'initial_margin': '1.802105', 'avg_price': '3541.62'}
2024-06-19 18:27:24.318 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 18:27:25.874 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 18:27:25.875 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 19:58:59.952 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-19 19:58:59.992 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 19:59:03.609 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-19 19:59:03.617 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xe9a866fedc6f1b23de25e2295267a777029bf54d14d94d40d78d6db1135e1bc0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718819942555645994', 'timestamp': '1718819942555645994', 'system_type': 'API', 'initial_margin': '1.808521', 'avg_price': '3559.99'}
2024-06-19 19:59:06.861 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-19 19:59:06.862 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 19:59:08.478 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-19 19:59:08.480 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xd262e0fa7e048121bb5e4e8222408308e8034e370eba52c2c160a9aac261af6b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718819948298672798', 'timestamp': '1718819948298672798', 'system_type': 'API', 'initial_margin': '1.808534', 'avg_price': '3560'}
2024-06-19 19:59:22.307 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 19:59:23.709 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 19:59:23.710 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 20:06:39.248 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-19 20:06:39.249 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 20:06:41.151 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-19 20:06:41.152 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x2b63bfd96d772e9d21b711e1a742158ace6da064445e51a016cc96414f82f855', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718820400972668673', 'timestamp': '1718820400972668673', 'system_type': 'API', 'initial_margin': '1.811359', 'avg_price': '3562.47'}
2024-06-19 20:06:43.971 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-19 20:06:43.972 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 20:06:45.507 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-19 20:06:45.508 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x51d32eb09187aeccf26d37709af793b4454bde971c1e918f5e884b862be07456', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718820405335565116', 'timestamp': '1718820405335565116', 'system_type': 'API', 'initial_margin': '1.813616', 'avg_price': '3562.89'}
2024-06-19 20:06:57.942 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 20:06:59.620 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 20:06:59.621 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-19 20:10:12.641 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-19 20:10:12.641 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 20:10:14.187 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-19 20:10:14.188 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x70700c9225bc9f1ba3dcfe4a9f0b15a9503399d3c203897c6bc39b18939e8cbd', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718820613989458673', 'timestamp': '1718820613989458673', 'system_type': 'API', 'initial_margin': '1.809299', 'avg_price': '3560.39'}
2024-06-19 20:10:17.216 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-19 20:10:17.217 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-19 20:10:18.794 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-19 20:10:18.795 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x8f1d467953d73cba0379500cc226d41746a2ca65ca2ba9da6f9a9af57ddc76d7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718820618516466980', 'timestamp': '1718820618516466980', 'system_type': 'API', 'initial_margin': '1.811473', 'avg_price': '3560.57'}
2024-06-19 20:10:38.550 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-19 20:10:39.984 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-19 20:10:39.986 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-20 14:08:29.821 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 14:08:29.872 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 14:08:31.333 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 14:08:31.334 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xe0f034564147ba04c0095c3a70de41eb258bf15ca85258ec55a2fde7792df1e1', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718885311194846785', 'timestamp': '1718885311194846785', 'system_type': 'API', 'initial_margin': '1.832523', 'avg_price': '3607.33'}
2024-06-20 14:08:34.333 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 14:08:34.334 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 14:08:36.460 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 14:08:36.461 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x51e1f02951fa25fb7de78db7e0ae97530dfb48440f499e2fb0e50e8800bb3d6d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718885316315151371', 'timestamp': '1718885316315151371', 'system_type': 'API', 'initial_margin': '1.832966', 'avg_price': '3608.2'}
2024-06-20 14:09:29.081 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-20 14:09:30.801 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-20 14:09:30.802 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-20 14:46:53.496 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 14:46:53.497 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 14:46:55.095 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 14:46:55.096 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xe13a1c8ca6c0e18708cdf1d5053548abd0f041ac9b60664fb110fcd77505288e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718887614946145231', 'timestamp': '1718887614946145231', 'system_type': 'API', 'initial_margin': '1.822902', 'avg_price': '3588.4'}
2024-06-20 14:46:58.098 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 14:46:58.101 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 14:46:59.762 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 14:46:59.762 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x5856e21125fd3da386383e2b09e81010bdddb082f624e9aadd82d533eaa87018', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718887619618462443', 'timestamp': '1718887619618462443', 'system_type': 'API', 'initial_margin': '1.832224', 'avg_price': '3589.24'}
2024-06-20 14:47:21.662 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-20 14:47:23.146 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-20 14:47:23.147 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-20 15:02:04.882 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 15:02:04.882 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 15:02:06.983 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 15:02:06.986 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x3c5217e10628aaebdf9ddbad3d05b20726296bd1bd18fd11e0b8387cd90579c7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718888526712239469', 'timestamp': '1718888526712239469', 'system_type': 'API', 'initial_margin': '1.825133', 'avg_price': '3585.51'}
2024-06-20 15:02:54.916 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 15:02:54.917 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 15:02:56.961 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 15:02:56.962 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xef4de19325681c06a0374e7bea35a77ad04065ed71f69c73ac8822e80f78e2ff', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718888576748991911', 'timestamp': '1718888576748991911', 'system_type': 'API', 'initial_margin': '1.823426', 'avg_price': '3582.1'}
2024-06-20 15:02:59.896 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 15:02:59.896 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 15:03:01.396 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 15:03:01.397 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x4d78e01e20acfaa156da610ae681145a1ef157ae678cbe663f4f699d9b72e51f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718888581191196100', 'timestamp': '1718888581191196100', 'system_type': 'API', 'initial_margin': '1.819849', 'avg_price': '3582.38'}
2024-06-20 15:03:19.101 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-20 15:03:20.687 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-20 15:03:20.688 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-20 15:56:38.827 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 15:56:38.929 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 15:56:40.752 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 15:56:40.753 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xe53084d8a815750d464f950c57b3d2874c2ce00fd3eca97c488bf34e5b09f112', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718891800506446315', 'timestamp': '1718891800506446315', 'system_type': 'API', 'initial_margin': '1.798406', 'avg_price': '3530.59'}
2024-06-20 15:56:43.621 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 15:56:43.621 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 15:56:45.108 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 15:56:45.109 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x39c9a5af98bd21e13e3aebe3d3f500b6e38e3426c9bb450864f912b522697395', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718891804895861029', 'timestamp': '1718891804895861029', 'system_type': 'API', 'initial_margin': '1.803762', 'avg_price': '3532.05'}
2024-06-20 15:57:02.800 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-20 15:57:04.415 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-20 15:57:04.416 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-20 16:02:37.338 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 16:02:37.339 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 16:02:38.800 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 16:02:38.801 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x7ce53b38f533460c4b63e513c7781c9df87f9b151cdd1db933c8ccce4ab563a8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718892158563203445', 'timestamp': '1718892158563203445', 'system_type': 'API', 'initial_margin': '1.797362', 'avg_price': '3514.94'}
2024-06-20 16:02:41.651 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 16:02:41.652 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 16:02:43.883 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 16:02:43.883 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x872d238604c27bc07451483632b95904b452d7a062c6b3b6ae3c7af2c690fe24', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718892163613030851', 'timestamp': '1718892163613030851', 'system_type': 'API', 'initial_margin': '1.799315', 'avg_price': '3517.57'}
2024-06-20 16:03:02.271 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-20 16:03:03.764 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-20 16:03:03.765 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-20 17:26:12.590 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 17:26:12.645 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 17:26:14.300 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 17:26:14.301 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xd1f7f830524c264521da197aaf0f4589f55860e5b07ed50fc50acd35fdea95e8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718897174126869597', 'timestamp': '1718897174126869597', 'system_type': 'API', 'initial_margin': '1.788925', 'avg_price': '3521.51'}
2024-06-20 17:26:17.231 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 17:26:17.231 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 17:26:18.818 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 17:26:18.819 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xe413c262c2b46f3ae53affe8d744be3097ced347722c47e8a77206382bd5c163', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718897178647803891', 'timestamp': '1718897178647803891', 'system_type': 'API', 'initial_margin': '1.789576', 'avg_price': '3521.4'}
2024-06-20 17:26:33.690 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-20 17:26:35.277 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-20 17:26:35.278 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-20 17:51:18.421 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 17:51:18.421 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 17:51:19.980 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 17:51:20.010 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x7130deac9a5a6966c86d3025f67a92840d292af19f5a094f3787007157d7c70a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718898679770618978', 'timestamp': '1718898679770618978', 'system_type': 'API', 'initial_margin': '1.790897', 'avg_price': '3517.73'}
2024-06-20 17:51:33.276 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-20 17:51:33.277 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 17:51:34.799 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-20 17:51:34.800 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x7c1582a9835697a6d9562754514c895e31239d3a91eea88f6f38d906d961bfe3', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1718898694603028866', 'timestamp': '1718898694603028866', 'system_type': 'API', 'initial_margin': '1.793033', 'avg_price': '3517.49'}
2024-06-20 17:51:40.178 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-20 17:51:40.179 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 17:51:41.706 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-20 17:51:41.707 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xd1f470d6b67299dbba9ffe78a5c190eb36eae8c843e7dbe7ff5807d1c3a212b1', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1718898701527794577', 'timestamp': '1718898701527794577', 'system_type': 'API', 'initial_margin': '1.79113', 'avg_price': '3518.57'}
2024-06-20 17:51:54.468 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-20 17:51:54.469 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 17:51:54.480 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3553772967', 'amount': '10000', 'salt': '342273364', 'signature': '0xbc5230a59d5d366db52107c248d9d611c6539c83276d48dad83d013c37115f1e7701e452b1d6199065bc282de2ca4ef0baf8461cab3076eadb9ce6667e976be91c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1718898714}
2024-06-20 17:51:56.004 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-20 17:51:56.005 | INFO     | __main__:sell_limit:102 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-20 17:51:56.012 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-20 17:51:56.012 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-20 17:51:56.028 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3483401225', 'amount': '10000', 'salt': '305524318', 'signature': '0x44bd7431eae77f40204676a62132d002b64f362f8500ddbf7c1851f639f426a716e85dcbdb082c5a6f24498b290fda4d94f97eb745c73041183e506ff9850fda1b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1718898716}
2024-06-20 17:51:57.590 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-20 17:51:57.590 | INFO     | __main__:buy_limit:85 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-20 17:52:03.395 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-20 17:52:04.928 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-20 17:52:04.930 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 15:13:10.561 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 15:13:10.607 | ERROR    | __main__:buy_limit:88 - An error occurred while creating limit buy order: type str doesn't define __round__ method
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7c11ce49b380>
    └ <Thread(Thread-1 (process_request_thread), started daemon 136415824316096)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7c11ce49b060>
    └ <Thread(Thread-1 (process_request_thread), started daemon 136415824316096)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 136415824316096)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 44116)>, ('10.0.2.15', 44116))
    │    │        └ <Thread(Thread-1 (process_request_thread), started daemon 136415824316096)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7c11cc0f38f0>>
    └ <Thread(Thread-1 (process_request_thread), started daemon 136415824316096)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 44116)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 44116)>
    │    └ <function BaseServer.finish_request at 0x7c11ca3a9440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c11cc0f38f0>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c11cc0f38f0>
    │    │                   │        └ ('10.0.2.15', 44116)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 44116)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c11cc0f38f0>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7c11c9da36a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c11c9aec2c0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7c11ca3abba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7c11c9aec2c0>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7c11c9aec2c0>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7c11cc0f38f0>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7c11c9aec2c0>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7c11c9915800>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c11c9915760>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7c11c9915760>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7c11c9adcfe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7c11c9adc720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7c11c9adc680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy_limit_route'
           │    │           │    │              └ <Rule '/buy_limit' (POST, OPTIONS) -> buy_limit_route>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7c11c9914180>, 'buy': <function buy at 0x7c11c99142c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7c11c9adc900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 132, in buy_limit_route
    result = asyncio.run(buy_limit(instrument_id, quantity, limit_price))
             │       │   │         │              │         └ '3510.00'
             │       │   │         │              └ 0.01
             │       │   │         └ 1
             │       │   └ <function buy_limit at 0x7c11c9adfe20>
             │       └ <function run at 0x7c11ce190a40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_limit at 0x7c11c9918640>
           │      └ <function Runner.run at 0x7c11cdb10400>
           └ <asyncio.runners.Runner object at 0x7c11cd0b5a60>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-1' coro=<buy_limit() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:88> cb=[_run_...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7c11cdb06020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7c11cd0b5a60>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7c11cdb05f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7c11cdb07d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7c11ce16e2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7c11cafbc250>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7c11cafbc250>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7c11cafbc250>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7c11cafbc250>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 77, in buy_limit
    response = aevo.rest_create_order(
               │    └ <function AevoClient.rest_create_order at 0x7c11ca39eac0>
               └ <aevo.AevoClient object at 0x7c11ca396360>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 213, in rest_create_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7c11ca39f560>
                     └ <aevo.AevoClient object at 0x7c11ca396360>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7c11ca39f880>
                                └ <aevo.AevoClient object at 0x7c11ca396360>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 554, in sign_order
    limitPrice=int(round(limit_price * price_decimals, is_buy)),
                         │             │               └ True
                         │             └ 1000000
                         └ '3510.00'

TypeError: type str doesn't define __round__ method
2024-06-23 15:26:44.521 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 15:26:44.522 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 15:26:44.547 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3510000000', 'amount': '10000', 'salt': '92837354', 'signature': '0xf446e9f15765e9be799ef8567dee47d75f254b15040acb99eff7979504cf5a5d55af96b2b7d7f18f4314ee566ac0686213ec684f95a3240c11fcc2800f8bb6811b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719149204}
2024-06-23 15:26:46.219 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 15:26:46.219 | INFO     | __main__:buy_limit:85 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-23 15:29:57.960 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 15:29:57.962 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 15:29:57.976 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3510000000', 'amount': '10000', 'salt': '7405414291', 'signature': '0x921a9af072036369f9822f9e77cd14436bd73576c6240d9cf50bb05d74c6f5da67c915c8feec4485afd079bd81a272ef3185cc104342cec80570907bd028dbfd1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719149397}
2024-06-23 15:29:59.543 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 15:29:59.546 | INFO     | __main__:buy_limit:85 - Response: {'order_id': '0x0809d9aa6221495f5d9735e8aca75e961c1b489aa21c263d2a9a9b437df9c08a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'limit', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '3510', 'filled': '0.01', 'created_timestamp': '1719149399384464337', 'timestamp': '1719149399384464337', 'system_type': 'API', 'initial_margin': '1.923252', 'avg_price': '3496.01', 'time_in_force': 'GTC'}
2024-06-23 15:32:28.007 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 15:32:28.008 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 15:32:28.022 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3510000000', 'amount': '10000', 'salt': '4907509533', 'signature': '0x8585543c97b7b222b13d01fb6df0a8e9da218f3c634243b0319e6a63098a387227a4571648066bcc14d2f92f7e131e7afd6a041362390fb8c393a0ac63c19e1a1b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719149548}
2024-06-23 15:32:30.073 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 15:32:30.074 | INFO     | __main__:buy_limit:85 - Response: {'order_id': '0xb87e23fad0da8e98e567af0584c44add2459c50e60783b50f076518a7a9d3c7e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'limit', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '3510', 'filled': '0.01', 'created_timestamp': '1719149549898172762', 'timestamp': '1719149549898172762', 'system_type': 'API', 'initial_margin': '1.939448', 'avg_price': '3494.48', 'time_in_force': 'GTC'}
2024-06-23 15:33:16.794 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 15:33:16.794 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 15:33:16.810 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '4510000000', 'amount': '10000', 'salt': '7342951990', 'signature': '0xa2e98fa56e1c5d18bfb11d58a8977f897d5913819c53e79c371a698f23b04f902922605ed2bc50cee5583680f1807e35b634d2a6efa7939b4f8c76d9f086fcb81c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719149596}
2024-06-23 15:33:18.356 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 15:33:18.357 | INFO     | __main__:buy_limit:85 - Response: {'error': 'INSUFFICIENT_AVAILABLE_MARGIN'}
2024-06-23 15:34:26.024 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 15:34:26.026 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 15:34:26.060 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3810000000', 'amount': '10000', 'salt': '1506566484', 'signature': '0x6d85268dc94769b3afb52418deb3576425d47f3ab3eb61280fc1e859f5e330996cc129508ff3689a1d529f79837ec1e6f9f3ae3f218d00d69ae91b3063e0383f1b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719149666}
2024-06-23 15:34:28.149 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 15:34:28.150 | INFO     | __main__:buy_limit:85 - Response: {'order_id': '0x2faa1b5f3746387b935c0ff199f19295a520276c2d881815181c1076b848784e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'limit', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '3810', 'filled': '0.01', 'created_timestamp': '1719149667946944021', 'timestamp': '1719149667946944021', 'system_type': 'API', 'initial_margin': '5.057467', 'avg_price': '3498.22', 'time_in_force': 'GTC'}
2024-06-23 15:52:59.481 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-23 15:52:59.482 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 15:52:59.499 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3010000000', 'amount': '10000', 'salt': '2824963047', 'signature': '0xf1a9b09e414e686d156ada3fbbee981fdd726f618a63af5867e687f3e0294d7430018f003fd5ef5ff28fb30ee9e72d434e73bea3e13e8d57a996d1df65ef23101b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719150779}
2024-06-23 15:53:01.196 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-23 15:53:01.197 | INFO     | __main__:sell_limit:102 - Response: {'order_id': '0xb3c72d0e4ac9a9dc563a4bac629f0f7ce0504418af63565ba02fe05bcafaf0bd', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'limit', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '3010', 'filled': '0.01', 'created_timestamp': '1719150781001458242', 'timestamp': '1719150781001458242', 'system_type': 'API', 'initial_margin': '6.397796', 'avg_price': '3496.69', 'time_in_force': 'GTC'}
2024-06-23 16:05:43.085 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 16:05:43.086 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 16:05:48.172 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 16:05:48.172 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xfca172b4a1ff03b0edd5844832e6fa355d2d25e8a24363d819076fcff1cc4a01', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719151547881924799', 'timestamp': '1719151547881924799', 'system_type': 'API', 'initial_margin': '1.783302', 'avg_price': '3496.56'}
2024-06-23 17:53:25.759 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 17:53:25.771 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:53:27.464 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 17:53:27.471 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x47a73754e08d1e5f039cb05b9fe6fd7ee4430c3440034677a5c8406438feb6d2', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719158007288845738', 'timestamp': '1719158007288845738', 'system_type': 'API', 'initial_margin': '1.764483', 'avg_price': '3472.3'}
2024-06-23 17:54:08.010 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 17:54:08.011 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:54:09.498 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 17:54:09.499 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xcd3f6e8ed3346cb1270c429bd862b45ee37ec808fd58e6b989069d74015797e7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719158049321593303', 'timestamp': '1719158049321593303', 'system_type': 'API', 'initial_margin': '1.765088', 'avg_price': '3472.03'}
2024-06-23 17:54:12.427 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 17:54:12.427 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:54:13.908 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 17:54:13.909 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x5a6fcc5841e6f341c3c00a53fb24c2f8e03ba206006683abb56ee94fc9721f16', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719158053737797044', 'timestamp': '1719158053737797044', 'system_type': 'API', 'initial_margin': '1.765227', 'avg_price': '3472.29'}
2024-06-23 17:54:28.019 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-23 17:54:28.020 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:54:28.033 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3506010427', 'amount': '10000', 'salt': '7971013034', 'signature': '0xdcf604befb85010d4d7f232270168274f3ad191e85f1525c680f2ff5b72f2d6104aec212c0e84c15e23efee80971996a6e38c2802632b47bb9aa89245f6788c51b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158068}
2024-06-23 17:54:29.510 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-23 17:54:29.511 | INFO     | __main__:sell_limit:102 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 17:54:29.516 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 17:54:29.517 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:54:29.554 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3436584477', 'amount': '10000', 'salt': '4482483005', 'signature': '0x87f392af219837ef2fcc390eaae0b28ab4c00b055b7da57bfc9824156d677563331068c3f2aaf75bb2397358f79ae7600d026197a6a644642feebee5722a29091b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158069}
2024-06-23 17:54:31.185 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 17:54:31.186 | INFO     | __main__:buy_limit:85 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 17:55:16.102 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 17:55:17.550 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 17:55:17.551 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 17:55:36.659 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 17:55:36.659 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:55:38.164 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 17:55:38.165 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xe0581d0af92e148cb19522f7bf503d4c9004c59afacd512d2cddd51a97ad4fb3', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719158137995405659', 'timestamp': '1719158137995405659', 'system_type': 'API', 'initial_margin': '1.765967', 'avg_price': '3471.5'}
2024-06-23 17:55:41.061 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 17:55:41.063 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:55:42.617 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 17:55:42.618 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xf1818e0c8eb86100797d914dff2db7c8b5bf5e14f4ba840159a9ffffd35a92fb', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719158142438664314', 'timestamp': '1719158142438664314', 'system_type': 'API', 'initial_margin': '1.767374', 'avg_price': '3472.38'}
2024-06-23 17:55:58.160 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-23 17:55:58.161 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:55:58.179 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3505740757', 'amount': '10000', 'salt': '8661795325', 'signature': '0x0b31e089ca77cce5c94369d4a0f25214dec70dc7a0326f3a39a72562128b9ddd5d739a59481b197330b8152f525e1bc1e4c80aef877b02d36d94501943097d671c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158158}
2024-06-23 17:55:59.645 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-23 17:55:59.647 | INFO     | __main__:sell_limit:102 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 17:55:59.651 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 17:55:59.652 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:55:59.666 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3436320147', 'amount': '10000', 'salt': '8330428542', 'signature': '0x11148bfa20c7d67845c032955ca57b09022e8829e64d3d4db6e3e47401ca012416bc91bd099b7a641249d87deeae34c3253c69a3d806f10d228242c944ab10b81c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158159}
2024-06-23 17:56:01.102 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 17:56:01.103 | INFO     | __main__:buy_limit:85 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 17:56:20.084 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 17:56:21.673 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 17:56:21.676 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 17:57:33.007 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 17:57:33.007 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:57:34.503 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 17:57:34.504 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x364dc973007d9b072cda1338ac14dee5bd4190af4860d94dfc34e054ce1ec1a0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719158254340309872', 'timestamp': '1719158254340309872', 'system_type': 'API', 'initial_margin': '1.765289', 'avg_price': '3471.65'}
2024-06-23 17:57:37.219 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 17:57:37.220 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:57:38.793 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 17:57:38.794 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x4143d3120942b8ec3b61abf90686b603a50c4f236d6f1e6e5f839a038b32651e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719158258622779026', 'timestamp': '1719158258622779026', 'system_type': 'API', 'initial_margin': '1.769145', 'avg_price': '3472.59'}
2024-06-23 17:57:52.954 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-23 17:57:52.954 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:57:52.970 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3506533779', 'amount': '10000', 'salt': '6775104211', 'signature': '0x261ccefe4cf5d44fe8d8f3339af371d7e4d89557c412730d7a40676b4173f59c49fede70d81501b21aa3ba79b40fbe876e1c4123657442edee386a267840f3a61b', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158272}
2024-06-23 17:57:54.447 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-23 17:57:54.447 | INFO     | __main__:sell_limit:102 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 17:57:54.653 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 17:57:54.653 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 17:57:54.664 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3437097466', 'amount': '10000', 'salt': '3975238291', 'signature': '0x340997df8ba2294b57f4563acd8c2cef7aca2ae14f42865bf1329f52d6aed56d33da1cbf17d789809f2082e11056db641671f6e7a608a3fb8a66fa94cc750f7d1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158274}
2024-06-23 17:57:56.131 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 17:57:56.132 | INFO     | __main__:buy_limit:85 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 17:58:06.894 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 17:58:08.350 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 17:58:08.352 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 18:04:19.858 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 18:04:19.859 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:04:21.361 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 18:04:21.362 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xd68d70e5e4e4872919471b8d8ba36abde454bc8eb728e5d409a1918c4d38e9e9', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719158661199104907', 'timestamp': '1719158661199104907', 'system_type': 'API', 'initial_margin': '1.767766', 'avg_price': '3475.11'}
2024-06-23 18:04:35.647 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-23 18:04:35.647 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:04:35.660 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3509102690', 'amount': '10000', 'salt': '4212249636', 'signature': '0xbe9569b9ea8cba8a15565409e9c9d60ff16090e5cf2f46a4911475ea1caf10e82e5fdc46b21ef4fd5453b0a7fad952eec6dc6ce16ba8d23c24192d13fe601de81c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158675}
2024-06-23 18:04:37.119 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-23 18:04:37.120 | INFO     | __main__:sell_limit:102 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 18:04:37.138 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 18:04:37.138 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:04:37.150 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3439615508', 'amount': '10000', 'salt': '9701391649', 'signature': '0xd1c3c73450bdad114057e1cdb215b052a362ed423e3e45b300715312fb7fe3e97993e608f4e93839c18bce79e5d1e2524376242bc71e3633783347b1c5e6ceb21c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719158677}
2024-06-23 18:04:38.662 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 18:04:38.664 | INFO     | __main__:buy_limit:85 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 18:10:38.219 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 18:10:38.220 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:10:39.707 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 18:10:39.708 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xe4b18632141b4989a758f54e2ccf41d72cc747052e21fc1bb901553d406de236', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719159039515794245', 'timestamp': '1719159039515794245', 'system_type': 'API', 'initial_margin': '1.771056', 'avg_price': '3473.35'}
2024-06-23 18:10:55.035 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-23 18:10:55.036 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:10:55.051 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3507186311', 'amount': '10000', 'salt': '7157847532', 'signature': '0x8b321069bd2a66dd7bc04d6b5b28dc25cf0891f58140d014e0be5a6de6afcff01df676790432efd2d654942aeda5572a2eabf20eb4a580e9f0ff8ea601c08df01c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719159055}
2024-06-23 18:10:56.649 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-23 18:10:56.650 | INFO     | __main__:sell_limit:102 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 18:10:58.425 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 18:11:00.027 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 18:11:00.031 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 18:19:40.263 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 18:19:40.263 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:19:42.037 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 18:19:42.037 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x4170a5885398807a5cae7be25a8328ec76389696e715496b6ff1a8fbf356305d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719159581864797401', 'timestamp': '1719159581864797401', 'system_type': 'API', 'initial_margin': '1.772273', 'avg_price': '3480.6'}
2024-06-23 18:19:49.235 | INFO     | __main__:sell_limit:93 - Creating limit sell order...
2024-06-23 18:19:49.235 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:19:49.247 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': False, 'instrument': 1, 'limit_price': '3513980312', 'amount': '10000', 'salt': '2498101826', 'signature': '0x29aa24c39e4b1e81308c69859b467fade022bdecf4e883b8fb3874a8682764c25e2bb88b8fc70f6fcb575e4e07c105bcfe70ce5ed803112073c797530d6622ac1c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719159589}
2024-06-23 18:19:50.668 | INFO     | __main__:sell_limit:101 - Limit sell order request sent successfully
2024-06-23 18:19:50.668 | INFO     | __main__:sell_limit:102 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 18:19:50.711 | INFO     | __main__:buy_limit:76 - Creating limit buy order...
2024-06-23 18:19:50.711 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 18:19:50.724 | INFO     | aevo:rest_create_order:216 - {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '3444396543', 'amount': '10000', 'salt': '3299867930', 'signature': '0xa7bcf0b40db60ea7b6cc189f6d841c050d4542472d8e69ad48eb6eab632a4fd202d0daa1970ea95988c55ad3a3fef3851034da0b45373b13b8f7e7efe94474181c', 'post_only': False, 'reduce_only': False, 'close_position': False, 'timestamp': 1719159590}
2024-06-23 18:19:52.224 | INFO     | __main__:buy_limit:84 - Limit buy order request sent successfully
2024-06-23 18:19:52.225 | INFO     | __main__:buy_limit:85 - Response: {'error': 'INVALID_PRICE_STEP_SIZE'}
2024-06-23 18:20:00.890 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 18:20:02.340 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 18:20:02.341 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 19:00:05.913 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 19:00:07.491 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 19:00:07.492 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 19:00:34.292 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 19:00:35.739 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 19:00:35.743 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 19:22:33.860 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 19:22:35.500 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 19:22:35.502 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 19:35:15.449 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 19:35:17.183 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 19:35:17.184 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 19:35:19.182 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 19:35:20.716 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 19:35:20.717 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 20:52:40.784 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 20:52:42.626 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 20:52:42.627 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 20:55:11.156 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 20:55:12.690 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 20:55:12.691 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 20:59:48.149 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 20:59:48.150 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 20:59:49.660 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 20:59:49.661 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x2c432b0aba166d59f2e29c708be73bfdc8d8a61d4ce63a139a2e1a86bfeff445', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169189495851893', 'timestamp': '1719169189495851893', 'system_type': 'API', 'initial_margin': '1.765991', 'avg_price': '3476.36'}
2024-06-23 20:59:52.411 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 20:59:52.411 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 20:59:54.839 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 20:59:54.840 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x4aa184368065cbd88c17fb9b80085eb4b55249f7dde1777594d47e34a3be16b0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169194590824400', 'timestamp': '1719169194590824400', 'system_type': 'API', 'initial_margin': '1.767495', 'avg_price': '3476.47'}
2024-06-23 21:00:18.427 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 21:00:20.012 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 21:00:20.013 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 21:03:51.116 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:03:51.117 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:03:52.887 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:03:52.889 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xa10f62cd2c8f2b3fbb95fd3e095d17ea6fb7119d3bf51650978d62122cfe4330', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169432524627566', 'timestamp': '1719169432524627566', 'system_type': 'API', 'initial_margin': '1.76681', 'avg_price': '3477.88'}
2024-06-23 21:03:56.340 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:03:56.341 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:03:58.250 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:03:58.251 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x68e7c79b16c24f0c17ef6a175b3aaea1635d736f7554333e980f35e3d4674d12', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169437800809591', 'timestamp': '1719169437800809591', 'system_type': 'API', 'initial_margin': '1.768529', 'avg_price': '3478.2'}
2024-06-23 21:04:28.211 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 21:04:30.547 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 21:04:30.549 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 21:05:13.837 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:05:13.838 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:05:18.431 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:05:18.433 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x9b8995d77e4c38111dc19d2b8d79f70eb5aa5ed8813c7471960d37f252108bfd', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169518246310993', 'timestamp': '1719169518246310993', 'system_type': 'API', 'initial_margin': '1.767433', 'avg_price': '3479.2'}
2024-06-23 21:05:22.165 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:05:22.165 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:05:23.763 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:05:23.764 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x49704d6ccc55d44f95cfcc5ec5a38d94505082e4a88bb5bcfba9c7643b6f258f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169523501780743', 'timestamp': '1719169523501780743', 'system_type': 'API', 'initial_margin': '1.770633', 'avg_price': '3479.25'}
2024-06-23 21:05:59.839 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:05:59.840 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:06:02.765 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:06:02.782 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x6f40394c1980debd33b2a634e20d5f10ee93a0b1ddbd553f217242b84537d639', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169562346664066', 'timestamp': '1719169562346664066', 'system_type': 'API', 'initial_margin': '1.76738', 'avg_price': '3479.1'}
2024-06-23 21:06:02.791 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:06:02.792 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:06:04.458 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:06:04.459 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x8c1a7db1964dfa32a625a26f941f6b1f4109cb18858f257831e02a8db39d3920', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169564286328687', 'timestamp': '1719169564286328687', 'system_type': 'API', 'initial_margin': '1.771173', 'avg_price': '3479.09'}
2024-06-23 21:06:21.401 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 21:06:23.382 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 21:06:23.387 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 21:07:40.499 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:07:40.501 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:07:43.227 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:07:43.228 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xae1d9513ab10c458af4a91ea97879e5d4174b0e9f8376b0d114df4cae435ad6c', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169662419560036', 'timestamp': '1719169662419560036', 'system_type': 'API', 'initial_margin': '1.766808', 'avg_price': '3477.97'}
2024-06-23 21:08:44.902 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:08:44.902 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:08:46.406 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:08:46.407 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xd8986e23d2ce9c7b5cbd683805663a1608dc22ad9c87c3dd7d6a1baff5a42f92', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169726229888652', 'timestamp': '1719169726229888652', 'system_type': 'API', 'initial_margin': '1.766565', 'avg_price': '3477.49'}
2024-06-23 21:08:49.754 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:08:49.754 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:08:51.728 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:08:51.729 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xc08fdbe42175a41ca3a9f6ca3245c4c3742a50b39cbc65fa16096ec2c84ad666', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169731538208437', 'timestamp': '1719169731538208437', 'system_type': 'API', 'initial_margin': '1.766696', 'avg_price': '3477.5'}
2024-06-23 21:09:15.163 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:09:15.163 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:09:16.660 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:09:16.660 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x6dffccb0488c67e327797a8d30bf91c1809e001764fc162b0a633b8b2df011e6', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169756481700668', 'timestamp': '1719169756481700668', 'system_type': 'API', 'initial_margin': '1.767068', 'avg_price': '3478'}
2024-06-23 21:09:16.676 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:09:16.676 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:09:18.260 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:09:18.268 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xde466193bc0e65a8a5f26344992f831bc536e51fb2da7194a144579816e000cb', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169758078682026', 'timestamp': '1719169758078682026', 'system_type': 'API', 'initial_margin': '1.767233', 'avg_price': '3478.08'}
2024-06-23 21:12:03.601 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:12:03.602 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:12:05.087 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:12:05.088 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x8c37d597add9dc944c8faf6e615c18cd9ffffb79748041ddda915dbeec94122a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169924921819782', 'timestamp': '1719169924921819782', 'system_type': 'API', 'initial_margin': '1.76595', 'avg_price': '3476.28'}
2024-06-23 21:12:21.804 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:12:21.805 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:12:23.336 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:12:23.337 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xf75402a50a2ecee49fdf388bf06ced3e27097d93a3318547f9b245f88680bd1b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719169943126791932', 'timestamp': '1719169943126791932', 'system_type': 'API', 'initial_margin': '1.766491', 'avg_price': '3476.14'}
2024-06-23 21:12:23.358 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:12:23.359 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:12:25.017 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:12:25.019 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x9eeef08ebe977a127b5a5c74e2cbe05a12fde40138a9664af09304f94c02fcd5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719169944850357724', 'timestamp': '1719169944850357724', 'system_type': 'API', 'initial_margin': '1.765824', 'avg_price': '3476.03'}
2024-06-23 21:12:56.570 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 21:12:58.049 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 21:12:58.049 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 21:38:19.498 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:38:19.499 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:38:21.064 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:38:21.065 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xe217c7c6327759b4116287ac4509d073faa01c36f9aabdecc9ffa42bf15c4f33', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719171500887588542', 'timestamp': '1719171500887588542', 'system_type': 'API', 'initial_margin': '1.767784', 'avg_price': '3475.43'}
2024-06-23 21:50:31.945 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:50:31.946 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:50:33.915 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:50:33.916 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x234ca45df03b204bfdd083c9a46f1e405a4cc6fb57c7afec9055dc7d79585822', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719172233624652330', 'timestamp': '1719172233624652330', 'system_type': 'API', 'initial_margin': '1.767344', 'avg_price': '3476.32'}
2024-06-23 21:51:56.077 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 21:51:57.636 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 21:51:57.637 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 21:54:01.160 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:54:01.160 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:54:02.683 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:54:02.684 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x00fd36d066d1002383aa0feb62bce2a38d11f057091f4623db2ec629e5ba9059', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719172442500928343', 'timestamp': '1719172442500928343', 'system_type': 'API', 'initial_margin': '1.766682', 'avg_price': '3477.72'}
2024-06-23 21:58:25.712 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 21:58:27.209 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 21:58:27.211 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 21:59:24.428 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 21:59:24.428 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:59:25.877 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 21:59:25.879 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x2e2a1c42a900527935cba8cc40f166d5fee8c813843500bd3255e7b79b3bbe6a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719172765714979449', 'timestamp': '1719172765714979449', 'system_type': 'API', 'initial_margin': '1.767358', 'avg_price': '3478.15'}
2024-06-23 21:59:57.627 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 21:59:57.627 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 21:59:59.186 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 21:59:59.187 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xf3a54e11166ce27b751767d65dfff19effcdf6ae61f868b31af306f10c2bab50', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719172799012398619', 'timestamp': '1719172799012398619', 'system_type': 'API', 'initial_margin': '1.767128', 'avg_price': '3478.6'}
2024-06-23 22:00:39.991 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 22:00:39.991 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:00:42.091 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 22:00:42.092 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x55a88691184896b162a6265e0d7902b446fc409de8fe81908e040cd57cebd105', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719172841901336727', 'timestamp': '1719172841901336727', 'system_type': 'API', 'initial_margin': '1.766755', 'avg_price': '3477.44'}
2024-06-23 22:01:01.110 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 22:01:01.111 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:01:02.609 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 22:01:02.610 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x958724cdd130cec08e6166e973fef45dea3118940c476016d327ef64f6ce077b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719172862424737804', 'timestamp': '1719172862424737804', 'system_type': 'API', 'initial_margin': '1.766808', 'avg_price': '3477.77'}
2024-06-23 22:27:29.374 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 22:27:29.375 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:27:31.390 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 22:27:31.391 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x2c0b62e6b2250daa3cd7c8a14515cf643bf2803e68e9938b30182b2bb903ee4f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719174451207927237', 'timestamp': '1719174451207927237', 'system_type': 'API', 'initial_margin': '1.761232', 'avg_price': '3465.94'}
2024-06-23 22:27:48.051 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 22:27:48.052 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:27:49.534 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 22:27:49.535 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x91705647385f07caff3ec102b48f10cdc0fc938d6dbaf5c38b83b3fd48cf9c72', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719174469351800034', 'timestamp': '1719174469351800034', 'system_type': 'API', 'initial_margin': '1.760692', 'avg_price': '3465.93'}
2024-06-23 22:27:52.046 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 22:27:52.047 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:27:53.604 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 22:27:53.605 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xb19c99a7bee9250ff9958ea84aecc17c2460801446e99b1eb461152ad480d6d4', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719174473405114834', 'timestamp': '1719174473405114834', 'system_type': 'API', 'initial_margin': '1.761206', 'avg_price': '3465.94'}
2024-06-23 22:28:02.608 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 22:28:04.077 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 22:28:04.081 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-23 22:49:42.699 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 22:49:42.699 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:49:44.133 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 22:49:44.134 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xd6219ffd056b71229d3a5f585368ad2fb747a263f92ef834443198bc109ba307', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719175783949898181', 'timestamp': '1719175783949898181', 'system_type': 'API', 'initial_margin': '1.749449', 'avg_price': '3439.1'}
2024-06-23 22:49:56.661 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-23 22:49:56.661 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:49:58.126 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-23 22:49:58.132 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0x4037f3b17f1b57f28da0e87670de00be068b3fceecdaa5f11e357c3fde6dc2f0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719175797945436170', 'timestamp': '1719175797945436170', 'system_type': 'API', 'initial_margin': '1.746812', 'avg_price': '3438.61'}
2024-06-23 22:50:00.589 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-23 22:50:00.589 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-23 22:50:02.439 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-23 22:50:02.440 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x51d01352197ca95f4bfa6dfd54962300131a594e6c34d74356fd9fa02f785f10', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719175802246616341', 'timestamp': '1719175802246616341', 'system_type': 'API', 'initial_margin': '1.750292', 'avg_price': '3438.72'}
2024-06-23 22:50:06.685 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-23 22:50:08.206 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-23 22:50:08.207 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 14:04:26.132 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:04:26.164 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:04:27.762 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:04:27.763 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x163ae406c285992eff975be88c0db80b6e88b0bd7ad873103d6593cf13ced3d4', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719230667591223522', 'timestamp': '1719230667591223522', 'system_type': 'API', 'initial_margin': '1.686582', 'avg_price': '3318.61'}
2024-06-24 14:05:09.956 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-24 14:05:11.446 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-24 14:05:11.448 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 14:20:49.120 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:20:49.121 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:20:50.666 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:20:50.667 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x76e1557633517475e4dad049a9c37f2ee6f53538941bc7c10e9165fc7bd98066', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719231650511211819', 'timestamp': '1719231650511211819', 'system_type': 'API', 'initial_margin': '1.690325', 'avg_price': '3326.34'}
2024-06-24 14:21:32.250 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-24 14:21:33.727 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-24 14:21:33.728 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 14:22:32.185 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:22:32.185 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:22:33.730 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:22:33.731 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x9fa44ba7f1ae3917c20a8928c096720e15577ecf68987e0f8c8240a93591d6a5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719231753574181452', 'timestamp': '1719231753574181452', 'system_type': 'API', 'initial_margin': '1.69318', 'avg_price': '3327.11'}
2024-06-24 14:23:18.604 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-24 14:23:20.049 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-24 14:23:20.050 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 14:24:08.284 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:24:08.284 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:24:09.836 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:24:09.837 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xea228db5f8357d05774a68d60fa9b81a7f2092be4dd9f506513d07797dee6a50', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719231849654172948', 'timestamp': '1719231849654172948', 'system_type': 'API', 'initial_margin': '1.699321', 'avg_price': '3331.14'}
2024-06-24 14:24:43.451 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-24 14:24:43.451 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:24:45.248 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-24 14:24:45.265 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xf6082b3819c0c5becddca48029c8459ac9941029ab879783cc946dc71a858022', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719231884990627533', 'timestamp': '1719231884990627533', 'system_type': 'API', 'initial_margin': '1.69414', 'avg_price': '3334.93'}
2024-06-24 14:24:47.655 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:24:47.659 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:24:49.237 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:24:49.237 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x02bb119ffa19c8cfc2585a576f2249b1fb523c579e577203396a0b71b9c3110f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719231889078833471', 'timestamp': '1719231889078833471', 'system_type': 'API', 'initial_margin': '1.695499', 'avg_price': '3335.05'}
2024-06-24 14:24:53.556 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-24 14:24:55.039 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-24 14:24:55.040 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 14:25:41.460 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:25:41.460 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:25:42.961 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:25:42.962 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xd81a80f94ba70d47d5197a3be65dbdf24b9c6f6c50201b827a231f2ecd0d6957', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719231942802807411', 'timestamp': '1719231942802807411', 'system_type': 'API', 'initial_margin': '1.701031', 'avg_price': '3335.51'}
2024-06-24 14:26:19.320 | INFO     | __main__:sell_market:47 - Creating market sell order...
2024-06-24 14:26:19.322 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:26:20.917 | INFO     | __main__:sell_market:53 - Market sell order request sent successfully
2024-06-24 14:26:20.918 | INFO     | __main__:sell_market:54 - Response: {'order_id': '0xf32314c1d0dd7078e9f757c5329517aa29f60f86ca048f916f2c53cd5a6781eb', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719231980754810481', 'timestamp': '1719231980754810481', 'system_type': 'API', 'initial_margin': '1.703766', 'avg_price': '3329.71'}
2024-06-24 14:26:27.029 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-24 14:26:28.514 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-24 14:26:28.516 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 14:31:40.481 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:31:40.482 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:31:41.986 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:31:41.987 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x11492ee6fe0f782b730bb825eefdffeb77bb89c0917ce8502d2ec2495710c409', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719232301827554111', 'timestamp': '1719232301827554111', 'system_type': 'API', 'initial_margin': '1.691514', 'avg_price': '3329.75'}
2024-06-24 14:32:26.640 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-24 14:32:28.089 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-24 14:32:28.090 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 14:33:59.573 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 14:33:59.574 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 14:34:01.125 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 14:34:01.126 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0x058a44f0b4b6a7f83011ef1bc1abe60d2901096f45e848509f65d6b2c9d82a73', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719232440956289578', 'timestamp': '1719232440956289578', 'system_type': 'API', 'initial_margin': '1.690408', 'avg_price': '3325.63'}
2024-06-24 15:30:59.152 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 15:30:59.202 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 15:31:00.813 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 15:31:00.815 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xbe8197032944d05878fd993ab4ae2ef448b673914de46c42e470839ccf8d66b8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719235860634627246', 'timestamp': '1719235860634627246', 'system_type': 'API', 'initial_margin': '1.687491', 'avg_price': '3312.7'}
2024-06-24 15:31:16.695 | INFO     | __main__:close_positions:62 - Закрытие всех позиций...
2024-06-24 15:31:18.175 | INFO     | __main__:close_positions:67 - Запрос на закрытие позиций успешно отправлен
2024-06-24 15:31:18.177 | INFO     | __main__:close_positions:68 - Ответ: {'error': 'NO_ORDERS_TO_CANCEL'}
2024-06-24 15:47:10.651 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 15:47:10.651 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 15:47:12.218 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 15:47:12.219 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xef2dae155cb44bf3f9277a5ed86abc54106a57a2e8453f5c9992e2f7338c007b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719236832039831607', 'timestamp': '1719236832039831607', 'system_type': 'API', 'initial_margin': '1.688767', 'avg_price': '3317.45'}
2024-06-24 15:47:26.729 | INFO     | __main__:close_positions:63 - Закрытие всех позиций...
2024-06-24 15:47:28.468 | ERROR    | __main__:close_positions:69 - Не удалось получить позиции
2024-06-24 15:59:32.659 | INFO     | __main__:buy_market:32 - Creating market buy order...
2024-06-24 15:59:32.691 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 15:59:34.176 | INFO     | __main__:buy_market:38 - Market buy order request sent successfully
2024-06-24 15:59:34.177 | INFO     | __main__:buy_market:39 - Response: {'order_id': '0xa297cdee93e39f435671190ab09ca0f618e19103ca861d5c6e1e0c24e4cfc92b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719237574013572115', 'timestamp': '1719237574013572115', 'system_type': 'API', 'initial_margin': '1.69089', 'avg_price': '3324.38'}
2024-06-24 16:17:09.344 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 16:17:09.344 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 16:17:10.962 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 16:17:10.963 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x1c11f929f1afe91d9ee4fe0b66c148bfafbdd6e89cf5a30520906fc7fec3f8c7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719238630731499124', 'timestamp': '1719238630731499124', 'system_type': 'API', 'initial_margin': '1.689316', 'avg_price': '3320.9'}
2024-06-24 16:34:44.439 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 16:34:44.439 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 16:34:45.946 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 16:34:45.948 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x9cb942e7c3d448631ae99fd14934538120eb1397fee5e52eac46206de4b0b8fc', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719239685764789384', 'timestamp': '1719239685764789384', 'system_type': 'API', 'initial_margin': '1.685081', 'avg_price': '3313.44'}
2024-06-24 16:34:57.801 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 16:34:59.360 | INFO     | __main__:close_positions:72 - No open positions found.
2024-06-24 17:19:26.424 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:19:26.425 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:19:28.045 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:19:28.046 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x9f89285b52c2431bc985d2b439f72dbae7eccf5c0bd5278388ad7c586434349f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719242367864513425', 'timestamp': '1719242367864513425', 'system_type': 'API', 'initial_margin': '1.690309', 'avg_price': '3310.38'}
2024-06-24 17:20:19.469 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-24 17:20:19.469 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:20:21.147 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-24 17:20:21.148 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0xc24e805837412d9c54329fd80d7abedb78e5f92a878a247d621c4eb0f13c1066', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719242420952866292', 'timestamp': '1719242420952866292', 'system_type': 'API', 'initial_margin': '1.682343', 'avg_price': '3311.7'}
2024-06-24 17:20:22.783 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:20:24.276 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 17:30:35.292 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:30:35.292 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:30:36.981 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:30:36.983 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x5c65d7afd449f3fef1a6c723c305c8df6722a72fbf4d27e5a31de2ae6c46a993', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719243036799484043', 'timestamp': '1719243036799484043', 'system_type': 'API', 'initial_margin': '1.685847', 'avg_price': '3306.83'}
2024-06-24 17:30:50.916 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:30:52.369 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 17:32:37.738 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:32:37.741 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:32:39.244 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:32:39.246 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x7cc9ec43789879f5025b1077d817f2051e2d3d6e8b401430be8cc0609b35c928', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719243159052480965', 'timestamp': '1719243159052480965', 'system_type': 'API', 'initial_margin': '1.677651', 'avg_price': '3302.46'}
2024-06-24 17:32:53.171 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:32:54.692 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 17:33:43.505 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:33:43.505 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:33:45.018 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:33:45.018 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xdaa352c07e15adf46a161516a95f831b326e0cea8e4f8b29c8610e672ba6102f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719243224813315659', 'timestamp': '1719243224813315659', 'system_type': 'API', 'initial_margin': '1.682911', 'avg_price': '3305.68'}
2024-06-24 17:33:56.773 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-24 17:33:56.773 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:33:58.346 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-24 17:33:58.347 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x29deacebf3508dede05349cedf6877ffb2d6b30395d97af59e46e8a3c202f3e1', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719243238151574169', 'timestamp': '1719243238151574169', 'system_type': 'API', 'initial_margin': '1.679603', 'avg_price': '3306.31'}
2024-06-24 17:34:05.323 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:34:05.324 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:34:07.129 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:34:07.130 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xed473bf413799d5fb1d1a0341495df966c06eeb3de6291411ffc8403b3ddc81e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719243246959046046', 'timestamp': '1719243246959046046', 'system_type': 'API', 'initial_margin': '1.694175', 'avg_price': '3307.17'}
2024-06-24 17:34:08.681 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:34:10.512 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 17:35:06.510 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:35:06.511 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:35:08.013 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:35:08.014 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xb3cd496f69ad7c75348232b87a7944d1e1ac84ebd0d8ff96e0d1874192cad779', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719243307822888551', 'timestamp': '1719243307822888551', 'system_type': 'API', 'initial_margin': '1.680048', 'avg_price': '3301.62'}
2024-06-24 17:35:19.529 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-24 17:35:19.532 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:35:21.025 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-24 17:35:21.026 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0xbeada26f515a704679ea6ef0ce2ae4f75b81224b555dcd1dc53a6bb23eb4a7eb', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719243320847137625', 'timestamp': '1719243320847137625', 'system_type': 'API', 'initial_margin': '1.679308', 'avg_price': '3300.69'}
2024-06-24 17:35:31.561 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:35:31.564 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:35:33.690 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:35:33.691 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x766ee78b9c61f4864ace4122774cc8e84810b6b8660db8842d94780093c13ad8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719243333512541058', 'timestamp': '1719243333512541058', 'system_type': 'API', 'initial_margin': '1.678445', 'avg_price': '3300.67'}
2024-06-24 17:35:41.432 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:35:42.952 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 17:46:34.374 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:46:34.380 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:46:35.910 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:46:35.911 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xd1954fbf589f8d89ab1900e51e3474b576bdf9aa1e6f261ed3e96f327e0e0979', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719243995724033548', 'timestamp': '1719243995724033548', 'system_type': 'API', 'initial_margin': '1.673609', 'avg_price': '3288.04'}
2024-06-24 17:46:49.500 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:46:50.986 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 17:49:46.451 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:49:46.451 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:49:48.040 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:49:48.041 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xae7663fa3b1a9d9334e01560584d33f7c359f35cd904dacff4118bf6d32d970d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719244187860158895', 'timestamp': '1719244187860158895', 'system_type': 'API', 'initial_margin': '1.672662', 'avg_price': '3277.5'}
2024-06-24 17:50:00.447 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-24 17:50:00.448 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:50:03.160 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-24 17:50:03.162 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0xa69dfac1bd1d21bd544c32f50181470fb37ed7e1fc97ea030ca194ea4e7ab719', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719244202978258337', 'timestamp': '1719244202978258337', 'system_type': 'API', 'initial_margin': '1.668688', 'avg_price': '3277.63'}
2024-06-24 17:50:05.679 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:50:05.680 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:50:07.314 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:50:07.315 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xb1e78d930718f86bd558ea8b40c1c59a972bf923105aa7c296d1866c852d571b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719244207135985240', 'timestamp': '1719244207135985240', 'system_type': 'API', 'initial_margin': '1.675432', 'avg_price': '3280.91'}
2024-06-24 17:50:10.539 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:50:12.396 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 17:57:27.004 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 17:57:27.004 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 17:57:28.463 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 17:57:28.464 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xfb7a2536ef03abf18475f7772b1ee9f98268b6cef6e270543f41f709418ec9c9', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719244648301221740', 'timestamp': '1719244648301221740', 'system_type': 'API', 'initial_margin': '1.675276', 'avg_price': '3269.97'}
2024-06-24 17:57:50.264 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 17:57:51.717 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 19:18:04.825 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 19:18:04.826 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 19:18:14.100 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 19:18:14.101 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x8dbeb8a67d5f591dbb22dc054d193712b365bec575dc9d46060b0abe8ff80ace', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719249492954206596', 'timestamp': '1719249492954206596', 'system_type': 'API', 'initial_margin': '1.670775', 'avg_price': '3283.59'}
2024-06-24 19:18:15.112 | INFO     | __main__:close_positions:65 - Closing positions...
2024-06-24 19:18:19.734 | ERROR    | __main__:close_positions:82 - Failed to cancel orders. Status code: 400
2024-06-24 19:30:19.367 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 19:30:19.368 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 19:30:21.366 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 19:30:21.367 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x5752621d7e2e138ab41e97d3d9ec76f380359e9fc9dc585444a615270de933f8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719250221101881415', 'timestamp': '1719250221101881415', 'system_type': 'API', 'initial_margin': '1.669856', 'avg_price': '3269.61'}
2024-06-24 19:30:22.373 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-24 19:30:24.111 | INFO     | __main__:close_positions:72 - No open positions found.
2024-06-24 19:36:33.592 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 19:36:33.592 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 19:36:36.102 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 19:36:36.103 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xf44c70b7594a4310d09e9975ff5d8518847ce9dd7fda4cb55be1b65e9e1d935a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719250595671823256', 'timestamp': '1719250595671823256', 'system_type': 'API', 'initial_margin': '1.676511', 'avg_price': '3293.24'}
2024-06-24 19:36:37.206 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-24 19:36:39.307 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-24 19:36:39.307 | INFO     | __main__:close_positions:86 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3292.387264', 'avg_entry_price': '3293.24', 'unrealized_pnl': '-0.008527', 'maintenance_margin': '0.987972', 'liquidation_price': '2669.766883', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 19:51:00.931 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 19:51:00.931 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 19:51:02.611 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 19:51:02.612 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x0ab1db9e4813655266466f2328379fa9b1b5fe9c857b0b2176e92d121f600d98', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719251462442950008', 'timestamp': '1719251462442950008', 'system_type': 'API', 'initial_margin': '1.68726', 'avg_price': '3297.3'}
2024-06-24 19:51:03.624 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-24 19:51:05.170 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-24 19:51:05.170 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3295.539581', 'avg_entry_price': '3297.3', 'unrealized_pnl': '-0.017604', 'maintenance_margin': '0.98919', 'liquidation_price': '2682.1866', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 19:51:05.173 | ERROR    | __main__:close_positions:101 - Failed to close position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3295.539581', 'avg_entry_price': '3297.3', 'unrealized_pnl': '-0.017604', 'maintenance_margin': '0.98919', 'liquidation_price': '2682.1866', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 19:51:05.174 | ERROR    | __main__:close_positions:102 - Error: type str doesn't define __round__ method
2024-06-24 19:53:07.516 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 19:53:07.516 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 19:53:09.161 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 19:53:09.165 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x0f20dce9a75475194f7978ec85e1ca37fac2ea23f6f7784f4f9a92ecc6d713b4', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719251588973730189', 'timestamp': '1719251588973730189', 'system_type': 'API', 'initial_margin': '1.677658', 'avg_price': '3292.54'}
2024-06-24 19:53:10.180 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-24 19:53:11.579 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-24 19:53:11.580 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3293.016518', 'avg_entry_price': '3292.54', 'unrealized_pnl': '0.004765', 'maintenance_margin': '0.987762', 'liquidation_price': '2690.2095', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 19:53:11.581 | ERROR    | __main__:close_positions:101 - Failed to close position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3293.016518', 'avg_entry_price': '3292.54', 'unrealized_pnl': '0.004765', 'maintenance_margin': '0.987762', 'liquidation_price': '2690.2095', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 19:53:11.581 | ERROR    | __main__:close_positions:102 - Error: type str doesn't define __round__ method
2024-06-24 21:12:49.066 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 21:12:49.066 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 21:12:50.798 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 21:12:50.804 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xbceff663e198557627c9bb6b6a28d5e3c0c36f4693325a3f8d7cbcee0bf7e111', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719256370614060551', 'timestamp': '1719256370614060551', 'system_type': 'API', 'initial_margin': '1.683179', 'avg_price': '3300.24'}
2024-06-24 21:12:51.810 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-24 21:12:53.318 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-24 21:12:53.318 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3299.578742', 'avg_entry_price': '3300.24', 'unrealized_pnl': '-0.006612', 'maintenance_margin': '0.990072', 'liquidation_price': '2703.5246', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 21:12:53.319 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 21:12:55.405 | INFO     | __main__:close_positions:105 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3299.578742', 'avg_entry_price': '3300.24', 'unrealized_pnl': '-0.006612', 'maintenance_margin': '0.990072', 'liquidation_price': '2703.5246', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 21:12:55.406 | INFO     | __main__:close_positions:106 - Result: {'order_id': '0x21459014aec878ae49ddf44b67824a8df2a49742937c89edd7ab14829b0963b0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719256375129107318', 'timestamp': '1719256375129107318', 'system_type': 'API', 'initial_margin': '1.676512', 'avg_price': '3300.23'}
2024-06-24 21:18:42.584 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 21:18:42.585 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 21:18:46.162 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 21:18:46.164 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x56590370b226f328c0184720a298f32a838a0b61355af3501da1f55709ef58f5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719256725992367307', 'timestamp': '1719256725992367307', 'system_type': 'API', 'initial_margin': '1.675273', 'avg_price': '3297.78'}
2024-06-24 21:18:47.182 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-24 21:18:48.797 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-24 21:18:48.797 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3297.848486', 'avg_entry_price': '3297.78', 'unrealized_pnl': '0.000684', 'maintenance_margin': '0.989334', 'liquidation_price': '2706.352612', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 21:18:48.798 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 21:18:50.550 | INFO     | __main__:close_positions:105 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3297.848486', 'avg_entry_price': '3297.78', 'unrealized_pnl': '0.000684', 'maintenance_margin': '0.989334', 'liquidation_price': '2706.352612', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 21:18:50.551 | INFO     | __main__:close_positions:106 - Result: {'order_id': '0xbc0cb96fb38be02c1d56afae0931236fd8763b1d12db51d513d54b0dcb3cf178', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719256730359416021', 'timestamp': '1719256730359416021', 'system_type': 'API', 'initial_margin': '1.675609', 'avg_price': '3298.45'}
2024-06-24 21:22:37.108 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-24 21:22:37.108 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 21:22:38.715 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-24 21:22:38.716 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x3405189879c3d92360ef54ff370c9336bd11cbf98fdffc77afc99db2d8357e65', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719256958528993329', 'timestamp': '1719256958528993329', 'system_type': 'API', 'initial_margin': '1.674989', 'avg_price': '3293.96'}
2024-06-24 21:22:39.724 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-24 21:22:41.274 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-24 21:22:41.274 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3293.23171', 'avg_entry_price': '3293.96', 'unrealized_pnl': '-0.007282', 'maintenance_margin': '0.988188', 'liquidation_price': '2703.58511', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 21:22:41.274 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-24 21:22:42.696 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3293.23171', 'avg_entry_price': '3293.96', 'unrealized_pnl': '-0.007282', 'maintenance_margin': '0.988188', 'liquidation_price': '2703.58511', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-24 21:22:42.712 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0x31cd3693252ef77cbd63c6be4b660564a942f187d3f81299595b04b9f52549e8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719256962532614596', 'timestamp': '1719256962532614596', 'system_type': 'API', 'initial_margin': '1.674481', 'avg_price': '3293.07'}
2024-06-27 15:35:30.469 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 15:35:32.052 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-27 15:37:18.731 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 15:37:18.732 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 15:37:20.184 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 15:37:20.185 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x82e0ab9c2dfd307145b0a196974ba874070b709a7388136cf2e25360a37cfbfb', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719495440041700982', 'timestamp': '1719495440041700982', 'system_type': 'API', 'initial_margin': '1.758436', 'avg_price': '3459.22'}
2024-06-27 15:37:35.431 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-27 15:37:35.431 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 15:37:37.221 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-27 15:37:37.223 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x3f3f5b390da15f84e6a7b53d0a020235449ce5681be99c09b7e3eda7036d8bf2', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719495457089554461', 'timestamp': '1719495457089554461', 'system_type': 'API', 'initial_margin': '1.759156', 'avg_price': '3458.19'}
2024-06-27 15:37:40.823 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 15:37:40.824 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 15:37:42.378 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 15:37:42.379 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x0c1dd9d56b5c5af3c70bff467e7fc65ed2467004e2bd6d633f97165eec5e3467', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719495462249676102', 'timestamp': '1719495462249676102', 'system_type': 'API', 'initial_margin': '1.771248', 'avg_price': '3459.21'}
2024-06-27 15:37:59.460 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 15:38:00.844 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 15:38:00.844 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3459.241348', 'avg_entry_price': '3459.21', 'unrealized_pnl': '0.000313', 'maintenance_margin': '1.037763', 'liquidation_price': '2889.13252', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 15:38:00.846 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 15:38:03.497 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3459.241348', 'avg_entry_price': '3459.21', 'unrealized_pnl': '0.000313', 'maintenance_margin': '1.037763', 'liquidation_price': '2889.13252', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 15:38:03.497 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0xdc82023c3fe52d3649485d163848aca7bc227042eef7212c969039054daf85ce', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719495483350455578', 'timestamp': '1719495483350455578', 'system_type': 'API', 'initial_margin': '1.758883', 'avg_price': '3458.2'}
2024-06-27 16:16:49.207 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 16:16:49.239 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:16:50.903 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 16:16:50.904 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x9f35e9868e3adfaf5569d1da1e2db3fdcca553498c911feeeae1181b09ba0107', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719497810745661219', 'timestamp': '1719497810745661219', 'system_type': 'API', 'initial_margin': '1.762793', 'avg_price': '3466.74'}
2024-06-27 16:17:06.414 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-27 16:17:06.414 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:17:09.120 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-27 16:17:09.121 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x2e7ebb326bfc89b64a0c9476f22bfd79c2f4e6ca50a48dbc893b344e423f04c6', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719497828959858064', 'timestamp': '1719497828959858064', 'system_type': 'API', 'initial_margin': '1.764561', 'avg_price': '3465.53'}
2024-06-27 16:17:11.683 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 16:17:11.683 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:17:13.240 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 16:17:13.240 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xa5a20f74628c99367deb55babe7d62e2a3cc9cca8518c06d04b70ad3bc8f068c', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719497833090441933', 'timestamp': '1719497833090441933', 'system_type': 'API', 'initial_margin': '1.760482', 'avg_price': '3465.34'}
2024-06-27 16:17:27.726 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 16:17:29.236 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 16:17:29.237 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3464.607308', 'avg_entry_price': '3465.34', 'unrealized_pnl': '-0.007326', 'maintenance_margin': '1.039602', 'liquidation_price': '2909.756379', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 16:17:29.237 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:17:31.022 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3464.607308', 'avg_entry_price': '3465.34', 'unrealized_pnl': '-0.007326', 'maintenance_margin': '1.039602', 'liquidation_price': '2909.756379', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 16:17:31.023 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0x18d88df706255932902047a741e9e11ed92f6debd459254c2a9d69b212126ae6', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719497850835591331', 'timestamp': '1719497850835591331', 'system_type': 'API', 'initial_margin': '1.76386', 'avg_price': '3464.5'}
2024-06-27 16:51:26.927 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 16:51:26.948 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:51:28.528 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 16:51:28.529 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xe40e4e2c4ec4d581dd22b51c0c06eddb44f4572ae32f97372d60b529c65afd26', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719499888312425056', 'timestamp': '1719499888312425056', 'system_type': 'API', 'initial_margin': '1.753396', 'avg_price': '3449.22'}
2024-06-27 16:51:42.771 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-27 16:51:42.771 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:51:45.060 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-27 16:51:45.062 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x3b6ddf8d06c38f1ad948f5f5a7921a5c1cb06a65e0e1707ad155797119c6e773', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719499904889482454', 'timestamp': '1719499904889482454', 'system_type': 'API', 'initial_margin': '1.753063', 'avg_price': '3447.55'}
2024-06-27 16:51:47.753 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 16:51:47.755 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:51:49.470 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 16:51:49.470 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xbcd44d7255cf45a73956db55ddef68df0c829e52474725aae95bd087d4610f60', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719499909257710661', 'timestamp': '1719499909257710661', 'system_type': 'API', 'initial_margin': '1.756359', 'avg_price': '3448.53'}
2024-06-27 16:51:52.371 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 16:51:54.017 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 16:51:54.017 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3448.552833', 'avg_entry_price': '3448.53', 'unrealized_pnl': '0.000228', 'maintenance_margin': '1.034559', 'liquidation_price': '2905.994298', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 16:51:54.018 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 16:52:02.329 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3448.552833', 'avg_entry_price': '3448.53', 'unrealized_pnl': '0.000228', 'maintenance_margin': '1.034559', 'liquidation_price': '2905.994298', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 16:52:02.330 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0xc22b058096c728f31e7596f5a097741d7a493fa49effcf41a47b348bc116beac', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719499922168146164', 'timestamp': '1719499922168146164', 'system_type': 'API', 'initial_margin': '1.753437', 'avg_price': '3448.18'}
2024-06-27 17:00:06.016 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 17:00:06.017 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:00:07.577 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 17:00:07.578 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x64767d1d1fe7241a4d5ffa0e67c5df865a35703804eb69dab32cfe7e4b420dac', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719500407331290676', 'timestamp': '1719500407331290676', 'system_type': 'API', 'initial_margin': '1.757809', 'avg_price': '3446.38'}
2024-06-27 17:00:23.826 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-27 17:00:23.827 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:00:26.238 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-27 17:00:26.239 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x2f20b74764716d8fa3e27f4fbd387e5306f8d798b23f8fb745cb3b0ad551e8f0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719500426076237799', 'timestamp': '1719500426076237799', 'system_type': 'API', 'initial_margin': '1.75034', 'avg_price': '3444.64'}
2024-06-27 17:00:30.566 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 17:00:32.035 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-27 17:09:28.485 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 17:09:28.485 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:09:31.406 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 17:09:31.407 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x39b9566f5746b499b5297ed51b0b3adabb02a29a3e073e6970c4446f9e75a0e2', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719500971220849974', 'timestamp': '1719500971220849974', 'system_type': 'API', 'initial_margin': '1.754825', 'avg_price': '3445.53'}
2024-06-27 17:09:48.101 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-27 17:09:48.101 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:09:49.858 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-27 17:09:49.860 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x18b6a8e1ae9df03d782c7d877e8a5dcd7d5c4369a4a17705783d4dc49d57dfc5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719500989688927657', 'timestamp': '1719500989688927657', 'system_type': 'API', 'initial_margin': '1.750691', 'avg_price': '3444.28'}
2024-06-27 17:09:54.911 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 17:09:56.654 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-27 17:12:00.588 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 17:12:00.589 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:12:03.961 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 17:12:03.962 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x13f0b7d50ba7f49940867ef80328e8e0666df332572bd801c705c238ce981139', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719501123791999564', 'timestamp': '1719501123791999564', 'system_type': 'API', 'initial_margin': '1.751917', 'avg_price': '3446'}
2024-06-27 17:12:20.299 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 17:12:22.416 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 17:12:22.416 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3446.174304', 'avg_entry_price': '3446', 'unrealized_pnl': '0.001743', 'maintenance_margin': '1.0338', 'liquidation_price': '2923.17377', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 17:12:22.417 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:12:24.142 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3446.174304', 'avg_entry_price': '3446', 'unrealized_pnl': '0.001743', 'maintenance_margin': '1.0338', 'liquidation_price': '2923.17377', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 17:12:24.143 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0xa9a0763bce96f863c6d7ee1524bbffe78b906ce95c40a58ba9a6526ca9650741', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719501143984295346', 'timestamp': '1719501143984295346', 'system_type': 'API', 'initial_margin': '1.75151', 'avg_price': '3446.58'}
2024-06-27 17:18:17.334 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 17:18:17.335 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:18:18.900 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 17:18:18.901 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x977582576a37bcec297f0abcf229feff57bb888f184d7f002e855d20754a4ab2', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719501498738522860', 'timestamp': '1719501498738522860', 'system_type': 'API', 'initial_margin': '1.753026', 'avg_price': '3450.23'}
2024-06-27 17:18:35.529 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 17:18:38.262 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 17:18:38.263 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3450.275858', 'avg_entry_price': '3450.23', 'unrealized_pnl': '0.000458', 'maintenance_margin': '1.035069', 'liquidation_price': '2932.4425', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 17:18:38.264 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 17:18:39.764 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3450.275858', 'avg_entry_price': '3450.23', 'unrealized_pnl': '0.000458', 'maintenance_margin': '1.035069', 'liquidation_price': '2932.4425', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 17:18:39.765 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0x038dec5cd38b4deb1a444a4baa8f98bc5471948e25b9f80d60012acc7580a3fd', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719501519595340294', 'timestamp': '1719501519595340294', 'system_type': 'API', 'initial_margin': '1.755456', 'avg_price': '3449.99'}
2024-06-27 18:00:34.522 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 18:00:36.049 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-27 18:23:50.701 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 18:23:50.735 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:23:52.407 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 18:23:52.408 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x598f674aad70359e07b94d3d2d2ab1624191349ce2c3267e40d92af028d68343', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719505432268798730', 'timestamp': '1719505432268798730', 'system_type': 'API', 'initial_margin': '1.750174', 'avg_price': '3443.05'}
2024-06-27 18:24:05.835 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-27 18:24:05.836 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:24:07.715 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-27 18:24:07.716 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0xfbe95fd6aff3e9a4802b328fd8250250b02809863a1a23cb0644f087d76c4e49', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719505447541829892', 'timestamp': '1719505447541829892', 'system_type': 'API', 'initial_margin': '1.749353', 'avg_price': '3443.62'}
2024-06-27 18:24:09.999 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 18:24:11.592 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-27 18:28:06.242 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 18:28:06.242 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:28:08.032 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 18:28:08.032 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x25799d039305f25bcb32a66ea4d40b75b4598a9dc074997d25b3f14e04098235', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719505687880488773', 'timestamp': '1719505687880488773', 'system_type': 'API', 'initial_margin': '1.748782', 'avg_price': '3442.48'}
2024-06-27 18:28:20.920 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-27 18:28:20.920 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:28:22.609 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-27 18:28:22.612 | INFO     | __main__:sell_market:56 - Response: {'order_id': '0x8525aa31a9e0dc85a12407a37c6e4ec92322458e9cd978dc9cb3de2d87cffba2', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719505702454808422', 'timestamp': '1719505702454808422', 'system_type': 'API', 'initial_margin': '1.750619', 'avg_price': '3442.49'}
2024-06-27 18:28:26.879 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 18:28:28.665 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-27 18:40:21.887 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 18:40:21.887 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:40:23.916 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 18:40:23.918 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x44f69e6691031ede7b7b24f7acc4c22a0da822548f226a498e357d55a85f357c', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719506423762641606', 'timestamp': '1719506423762641606', 'system_type': 'API', 'initial_margin': '1.752099', 'avg_price': '3448.06'}
2024-06-27 18:43:53.722 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 18:43:53.722 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:43:55.202 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 18:43:55.204 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x6ff86025f62fe0c2d26452be0783070cec10f5384a979e6b046cb92adffe918a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719506635044709985', 'timestamp': '1719506635044709985', 'system_type': 'API', 'initial_margin': '1.75679', 'avg_price': '3451.56'}
2024-06-27 18:43:58.702 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 18:44:00.246 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 18:44:00.247 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3451.293063', 'avg_entry_price': '3451.56', 'unrealized_pnl': '-0.002669', 'maintenance_margin': '1.035468', 'liquidation_price': '2953.532902', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 18:44:00.247 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:44:01.973 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3451.293063', 'avg_entry_price': '3451.56', 'unrealized_pnl': '-0.002669', 'maintenance_margin': '1.035468', 'liquidation_price': '2953.532902', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 18:44:01.974 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0x3924610686166ca1fe85918944c8b045828a966facbd69cdb075f49415a389ab', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719506641782377836', 'timestamp': '1719506641782377836', 'system_type': 'API', 'initial_margin': '1.753384', 'avg_price': '3451.55'}
2024-06-27 18:47:27.284 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 18:47:27.284 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:47:29.108 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 18:47:29.109 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0xe83511ef6f2e18df72ea87614fc3d30d23c2f960b6493911f2dbcdbd33f0e48e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719506848942277275', 'timestamp': '1719506848942277275', 'system_type': 'API', 'initial_margin': '1.752207', 'avg_price': '3449.15'}
2024-06-27 18:47:43.895 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 18:47:45.545 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 18:47:45.545 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3449.603364', 'avg_entry_price': '3449.15', 'unrealized_pnl': '0.004533', 'maintenance_margin': '1.034745', 'liquidation_price': '2956.5176', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 18:47:45.546 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 18:47:47.026 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3449.603364', 'avg_entry_price': '3449.15', 'unrealized_pnl': '0.004533', 'maintenance_margin': '1.034745', 'liquidation_price': '2956.5176', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 18:47:47.027 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0xa8c28d5d05170e64e5fb2941e9fb04afeef56b90e893a91f10d8ace0fd2ff750', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719506866846837752', 'timestamp': '1719506866846837752', 'system_type': 'API', 'initial_margin': '1.752419', 'avg_price': '3449.6'}
2024-06-27 19:58:27.418 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 19:58:27.429 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 19:58:29.022 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 19:58:29.023 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x91de94c53deb336dd522e270f4c7738d7ed2dbd2cc018422f22abd787b53f942', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719511108828895504', 'timestamp': '1719511108828895504', 'system_type': 'API', 'initial_margin': '1.757782', 'avg_price': '3460.2'}
2024-06-27 19:58:53.039 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 19:58:54.445 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 19:58:54.445 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3460.236354', 'avg_entry_price': '3460.2', 'unrealized_pnl': '0.000363', 'maintenance_margin': '1.03806', 'liquidation_price': '2972.977', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 19:58:54.446 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 19:58:55.907 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3460.236354', 'avg_entry_price': '3460.2', 'unrealized_pnl': '0.000363', 'maintenance_margin': '1.03806', 'liquidation_price': '2972.977', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 19:58:55.908 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0xbc4e93880215c19be0d238d8479f68c0b963f514b3c86fe8dc9503aa47e32223', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719511135755501909', 'timestamp': '1719511135755501909', 'system_type': 'API', 'initial_margin': '1.75919', 'avg_price': '3460.09'}
2024-06-27 20:36:08.542 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 20:36:08.543 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 20:36:10.112 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 20:36:10.113 | INFO     | __main__:buy_market:41 - Response: {'order_id': '0x6216149bd791606d64d41ef155be77192fadfb9cfe6ffbf812ef9263dec3c58a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719513369935988881', 'timestamp': '1719513369935988881', 'system_type': 'API', 'initial_margin': '1.759867', 'avg_price': '3461.15'}
2024-06-27 20:36:17.487 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 20:36:19.072 | INFO     | __main__:close_positions:82 - Found 1 open positions.
2024-06-27 20:36:19.072 | INFO     | __main__:close_positions:85 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3460.301604', 'avg_entry_price': '3461.15', 'unrealized_pnl': '-0.008483', 'maintenance_margin': '1.038345', 'liquidation_price': '2979.216262', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 20:36:19.073 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 20:36:20.734 | INFO     | __main__:close_positions:98 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3460.301604', 'avg_entry_price': '3461.15', 'unrealized_pnl': '-0.008483', 'maintenance_margin': '1.038345', 'liquidation_price': '2979.216262', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-27 20:36:20.735 | INFO     | __main__:close_positions:99 - Result: {'order_id': '0x25d64d0c0f69e0da446065c48eab45f2a5a6867ca51fb6e4ff2fcec599421410', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719513380557178741', 'timestamp': '1719513380557178741', 'system_type': 'API', 'initial_margin': '1.75804', 'avg_price': '3460.3'}
2024-06-27 21:28:35.670 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 21:28:35.671 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 21:28:37.731 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 21:28:37.732 | INFO     | __main__:buy_market:41 - Response: {'error': 'INVALID_AMOUNT_STEP_SIZE'}
2024-06-27 21:30:14.862 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-27 21:30:17.737 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-27 21:33:08.601 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 21:33:08.601 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 21:33:10.074 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 21:33:10.075 | INFO     | __main__:buy_market:41 - Response: {'error': 'INVALID_AMOUNT_STEP_SIZE'}
2024-06-27 21:36:52.164 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-27 21:36:52.165 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-27 21:36:53.716 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-27 21:36:53.717 | INFO     | __main__:buy_market:41 - Response: {'error': 'INVALID_AMOUNT_STEP_SIZE'}
2024-06-30 16:07:47.753 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:07:47.817 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:07:49.470 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-30 16:07:49.470 | INFO     | __main__:buy_market:41 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-30 16:08:24.292 | INFO     | __main__:sell_market:49 - Creating market sell order...
2024-06-30 16:08:24.296 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:08:26.010 | INFO     | __main__:sell_market:55 - Market sell order request sent successfully
2024-06-30 16:08:26.019 | INFO     | __main__:sell_market:56 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-30 16:08:31.423 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-30 16:08:32.892 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-30 16:08:35.423 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:08:35.423 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:08:36.906 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-30 16:08:36.908 | INFO     | __main__:buy_market:41 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-30 16:13:20.500 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:13:20.528 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:13:22.119 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-30 16:13:22.120 | INFO     | __main__:buy_market:41 - Response: {'error': 'ORDER_INVALID_SIGNING_KEY'}
2024-06-30 16:14:20.476 | INFO     | __main__:close_positions:65 - Fetching open positions...
2024-06-30 16:14:22.093 | INFO     | __main__:close_positions:79 - No open positions found.
2024-06-30 16:17:20.108 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:17:20.109 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:17:22.441 | INFO     | __main__:buy_market:40 - Market buy order request sent successfully
2024-06-30 16:17:22.442 | INFO     | __main__:buy_market:41 - Response: {'error': 'INVALID_AMOUNT_STEP_SIZE'}
2024-06-30 16:22:11.710 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:22:11.711 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:22:13.336 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 16:22:13.337 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xe2baf58cf1beefa01867f9423375c0883f0febc79aceecad0b87ae1c318e8109', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719757333155405768', 'timestamp': '1719757333155405768', 'system_type': 'API', 'initial_margin': '1.727143', 'avg_price': '3396.6'}
2024-06-30 16:26:03.005 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 16:26:03.005 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:26:05.376 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 16:26:05.382 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x03204cf23e10d016d52ec84338152cdfa2a00843161029828980fa1fc7923a0a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719757565071942137', 'timestamp': '1719757565071942137', 'system_type': 'API', 'initial_margin': '1.724302', 'avg_price': '3393.69'}
2024-06-30 16:26:07.929 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:26:07.932 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:26:09.549 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 16:26:09.550 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x7a6bbe87b4c45f839d803592545eb965b41fcdc7cde599a6220911940d3156ea', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719757569319826487', 'timestamp': '1719757569319826487', 'system_type': 'API', 'initial_margin': '1.725902', 'avg_price': '3393.72'}
2024-06-30 16:27:13.933 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-06-30 16:27:15.550 | INFO     | __main__:close_positions:85 - Found 1 open positions.
2024-06-30 16:27:15.551 | INFO     | __main__:close_positions:88 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3393.692839', 'avg_entry_price': '3393.72', 'unrealized_pnl': '-0.000271', 'maintenance_margin': '1.018116', 'liquidation_price': '2924.8251', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-30 16:27:15.551 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:27:17.171 | INFO     | __main__:close_positions:101 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3393.692839', 'avg_entry_price': '3393.72', 'unrealized_pnl': '-0.000271', 'maintenance_margin': '1.018116', 'liquidation_price': '2924.8251', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-30 16:27:17.172 | INFO     | __main__:close_positions:102 - Result: {'order_id': '0x7d0e7c7d157296d318c51d829f9feb6708ebb8d11704626dc0f8032703196dad', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719757636967787179', 'timestamp': '1719757636967787179', 'system_type': 'API', 'initial_margin': '1.724156', 'avg_price': '3394.01'}
2024-06-30 16:35:34.457 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:35:34.457 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:35:36.093 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 16:35:36.094 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x821c9399e9d2f89ac99d031e7c2b59ed839bb8ec32d4d75208306e97171ec10d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719758135902263722', 'timestamp': '1719758135902263722', 'system_type': 'API', 'initial_margin': '1.724121', 'avg_price': '3391.76'}
2024-06-30 16:47:21.834 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:47:21.834 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:47:23.414 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 16:47:23.415 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x14b15dbc47784b35fda874d84be066d3ec995a41ce8eed22f2bd910ff200bb6b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719758843198834182', 'timestamp': '1719758843198834182', 'system_type': 'API', 'initial_margin': '1.728769', 'avg_price': '3388.7'}
2024-06-30 16:47:38.676 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-06-30 16:47:41.058 | INFO     | __main__:close_positions:85 - Found 1 open positions.
2024-06-30 16:47:41.059 | INFO     | __main__:close_positions:88 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3387.683959', 'avg_entry_price': '3388.7', 'unrealized_pnl': '-0.01016', 'maintenance_margin': '1.01661', 'liquidation_price': '2929.927861', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-30 16:47:41.059 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:47:42.659 | INFO     | __main__:close_positions:101 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3387.683959', 'avg_entry_price': '3388.7', 'unrealized_pnl': '-0.01016', 'maintenance_margin': '1.01661', 'liquidation_price': '2929.927861', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-30 16:47:42.660 | INFO     | __main__:close_positions:102 - Result: {'order_id': '0x80d2f209c07817c4eeda13e2aca7b2e30bde94229886126ccf6f3a67cf408040', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719758862454768808', 'timestamp': '1719758862454768808', 'system_type': 'API', 'initial_margin': '1.721355', 'avg_price': '3387.57'}
2024-06-30 16:48:28.014 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:48:28.015 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:48:29.710 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 16:48:29.711 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x61a41517c3567ab3f845af67206a95c4f4c113ab659216ed2af10c110dce2054', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719758909501967921', 'timestamp': '1719758909501967921', 'system_type': 'API', 'initial_margin': '1.723283', 'avg_price': '3388.51'}
2024-06-30 16:52:39.623 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 16:52:39.624 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:52:41.523 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 16:52:41.526 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xa5f3ac7a5839b66106def83f8cfc7e7a3f6760b573cc3c43a22452e5f756a652', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719759161198355592', 'timestamp': '1719759161198355592', 'system_type': 'API', 'initial_margin': '1.72246', 'avg_price': '3390.15'}
2024-06-30 16:52:44.329 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 16:52:44.330 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 16:52:45.885 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 16:52:45.886 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x7ff988512020b9f0cd627db70f025bd306b1801cf043ba24883d484540eff59e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719759165690325526', 'timestamp': '1719759165690325526', 'system_type': 'API', 'initial_margin': '1.725503', 'avg_price': '3390.47'}
2024-06-30 17:03:10.133 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:03:10.134 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:03:11.854 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:03:11.855 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x2c94df1da2478c9f1b0aa3a69d133e37e8fe47b3bdd7963cf318668f9059685c', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719759791600677278', 'timestamp': '1719759791600677278', 'system_type': 'API', 'initial_margin': '1.723349', 'avg_price': '3392.42'}
2024-06-30 17:03:14.557 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:03:14.558 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:03:17.487 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:03:17.491 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x1aa063b0921c146f70a358a0672c4a0fd722441be056da5211f3e80d5b7b3e4a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719759796850132591', 'timestamp': '1719759796850132591', 'system_type': 'API', 'initial_margin': '1.726481', 'avg_price': '3392.57'}
2024-06-30 17:05:20.491 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:05:20.492 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:05:22.996 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:05:22.998 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xe2ded44c1e04d59612af202905dee199519784a72a5c13898ca6ae561e86f623', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719759922804819220', 'timestamp': '1719759922804819220', 'system_type': 'API', 'initial_margin': '1.724671', 'avg_price': '3389.76'}
2024-06-30 17:05:26.296 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:05:26.297 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:05:28.369 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:05:28.378 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xb562f229fd238a58bf877df24186d40b2974709b640fbeb13bf0e45b0117b34b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719759928040703235', 'timestamp': '1719759928040703235', 'system_type': 'API', 'initial_margin': '1.723711', 'avg_price': '3389.8'}
2024-06-30 17:07:39.362 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:07:39.363 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:07:41.295 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:07:41.298 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x03c9af1e9924e5d433968595f7f74014ae2027d17fcaa4989facb9160af355f9', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719760060955644797', 'timestamp': '1719760060955644797', 'system_type': 'API', 'initial_margin': '1.724535', 'avg_price': '3391.89'}
2024-06-30 17:07:44.250 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:07:44.251 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:07:45.906 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:07:45.910 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x0f417438cae2c621a30072a7685d9239b02b43a7c0ef284333d365fceb502e96', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719760065731244367', 'timestamp': '1719760065731244367', 'system_type': 'API', 'initial_margin': '1.724704', 'avg_price': '3392.17'}
2024-06-30 17:13:13.352 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:13:13.353 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:13:15.707 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:13:15.708 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xa676a3c268bafaae4be1d01398718391dd98a9b49f94f43b36f9b041c7e84595', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719760395377662226', 'timestamp': '1719760395377662226', 'system_type': 'API', 'initial_margin': '1.724608', 'avg_price': '3394.08'}
2024-06-30 17:13:23.656 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:13:23.657 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:13:26.230 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:13:26.233 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x0e3730e0f683d01bda63a7190252cad24213542cd67b49be579a08e1664af166', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719760405913990790', 'timestamp': '1719760405913990790', 'system_type': 'API', 'initial_margin': '1.727033', 'avg_price': '3393.82'}
2024-06-30 17:26:13.611 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:26:13.612 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:26:15.784 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:26:15.786 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x96508fa5a99dfec1a5ecd0e55a441a2dbdfcfc265fb06a33a75fc02426f08db9', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719761175588187154', 'timestamp': '1719761175588187154', 'system_type': 'API', 'initial_margin': '1.723138', 'avg_price': '3391.9'}
2024-06-30 17:26:19.027 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:26:19.027 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:26:24.091 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:26:24.093 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xcf3696b6a9a526af9ee857b9f9c8ee3a200e301987caac34f85bb87db59e409b', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719761181938352876', 'timestamp': '1719761181938352876', 'system_type': 'API', 'initial_margin': '1.725141', 'avg_price': '3392.3'}
2024-06-30 17:33:41.422 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:33:41.424 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:33:48.854 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:33:48.856 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xfff716aa9c2eb3ce4924e088e727b9f2e9211ce16683ac8486063fb6bd1d0627', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719761625612912048', 'timestamp': '1719761625612912048', 'system_type': 'API', 'initial_margin': '1.724015', 'avg_price': '3393.64'}
2024-06-30 17:33:53.848 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:33:53.849 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:33:57.836 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:33:57.837 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xa7c202ec8dffee5adbaf41d26d3aa3544a92d739d5c9f878a673c4e2c2389356', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719761637327330910', 'timestamp': '1719761637327330910', 'system_type': 'API', 'initial_margin': '1.724028', 'avg_price': '3393.65'}
2024-06-30 17:40:28.537 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:40:28.539 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:40:30.564 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:40:30.565 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xa2f1e25f932984b2a568299029419d5222313656792f1c3329635234ea1c2afe', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719762030247470572', 'timestamp': '1719762030247470572', 'system_type': 'API', 'initial_margin': '1.723397', 'avg_price': '3391.75'}
2024-06-30 17:40:33.208 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:40:33.208 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:40:34.803 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:40:34.805 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xb6adb04814ce34eb58b37cbd3fca4bfb1f2d615e9c2bdfc1fbc3772c835a6d47', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719762034608820987', 'timestamp': '1719762034608820987', 'system_type': 'API', 'initial_margin': '1.724661', 'avg_price': '3392.1'}
2024-06-30 17:42:19.873 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:42:19.874 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:42:21.541 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:42:21.542 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x1a34a343daa55d6fe8a41514aeff5d962c8396f596a249c7f835d97314bf91ad', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719762141365997633', 'timestamp': '1719762141365997633', 'system_type': 'API', 'initial_margin': '1.723867', 'avg_price': '3393.44'}
2024-06-30 17:42:24.978 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:42:24.978 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:42:26.778 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:42:26.780 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x097426944c5248fe3f875dccd39a2d3488a3c34084a4d55ebeb9ece2c5d68f09', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719762146593057703', 'timestamp': '1719762146593057703', 'system_type': 'API', 'initial_margin': '1.725664', 'avg_price': '3393.56'}
2024-06-30 17:44:36.854 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:44:36.854 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:44:38.852 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:44:38.853 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x55421fc33c9fae2b7634f85c10e5a2f65f4c977f6e2643f25dc15e8b06a49ddc', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719762278653159102', 'timestamp': '1719762278653159102', 'system_type': 'API', 'initial_margin': '1.724796', 'avg_price': '3395.27'}
2024-06-30 17:44:41.868 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:44:41.869 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:44:43.513 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:44:43.516 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x00798adb21efaacf3ec6dd325c76396cce3e54bfe1c8ca019d28f1f6dad3f82c', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719762283321094681', 'timestamp': '1719762283321094681', 'system_type': 'API', 'initial_margin': '1.728279', 'avg_price': '3395.57'}
2024-06-30 17:47:14.324 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:47:14.324 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:47:16.350 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:47:16.352 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x0e48611981cb14df661e59fc3f41ce413c9746936fbdcf63e64371c407f3a46d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719762435968414147', 'timestamp': '1719762435968414147', 'system_type': 'API', 'initial_margin': '1.728319', 'avg_price': '3396.96'}
2024-06-30 17:47:19.542 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:47:19.542 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:47:21.183 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:47:21.185 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xe57ef62bd728de9ff354e6bd39c7bb51117083aabf33e3d332538c7b42e6fdb3', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719762440991399370', 'timestamp': '1719762440991399370', 'system_type': 'API', 'initial_margin': '1.728562', 'avg_price': '3397.49'}
2024-06-30 17:49:41.056 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:49:41.057 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:49:45.994 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:49:45.995 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x76c6bf19d9151e3fde8030f993dc0f7914ec86325e8a293f1a4db6a8c49730f4', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719762585196631277', 'timestamp': '1719762585196631277', 'system_type': 'API', 'initial_margin': '1.72591', 'avg_price': '3395.04'}
2024-06-30 17:49:50.912 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:49:50.913 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:49:52.713 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:49:52.715 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xa2f33f17ffce6a467e8374dcfd57e44beb296c5aa3f620b45a7a9bf9dafc4346', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719762592325653422', 'timestamp': '1719762592325653422', 'system_type': 'API', 'initial_margin': '1.725926', 'avg_price': '3395.3'}
2024-06-30 17:55:15.025 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:55:15.026 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:55:16.707 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:55:16.708 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x9dc7ff1a3786a8e07457768b1e506222900a8b0db4bf631570215191450d722d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719762916497805282', 'timestamp': '1719762916497805282', 'system_type': 'API', 'initial_margin': '1.725813', 'avg_price': '3397.27'}
2024-06-30 17:55:19.833 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:55:19.836 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:55:22.530 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:55:22.531 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xaf1c66e57bc1c81d794eea898f52f51baa661d84361658520f117819d1a4f28d', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719762921775915754', 'timestamp': '1719762921775915754', 'system_type': 'API', 'initial_margin': '1.729568', 'avg_price': '3397.51'}
2024-06-30 17:58:01.711 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 17:58:01.712 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:58:03.383 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 17:58:03.384 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xf1c3b6c6e31d1b7161f294dc08fa380be384d3e96fa922e2cad4c1ef0f717bc8', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719763083187575667', 'timestamp': '1719763083187575667', 'system_type': 'API', 'initial_margin': '1.725178', 'avg_price': '3395.5'}
2024-06-30 17:58:07.018 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 17:58:07.025 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 17:58:08.573 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 17:58:08.574 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xb72785376e3b671f00f0d6dbe0c71811c4c71a19d9f4c3ea43ee95a91f020977', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719763088396862381', 'timestamp': '1719763088396862381', 'system_type': 'API', 'initial_margin': '1.725229', 'avg_price': '3395.56'}
2024-06-30 18:00:53.707 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 18:00:53.708 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:00:55.396 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 18:00:55.397 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xff16fb0fc8d77c64d7cb556c146f49e52efa64e5f7538247aba6e931bc48f8b3', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719763255185888428', 'timestamp': '1719763255185888428', 'system_type': 'API', 'initial_margin': '1.725676', 'avg_price': '3397'}
2024-06-30 18:00:58.661 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 18:00:58.662 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:01:00.290 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 18:01:00.291 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xccb34eb1b7b0765ce7ea89de789e93499b68339456bdcb8882d25339e5fe3d5a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719763260084336370', 'timestamp': '1719763260084336370', 'system_type': 'API', 'initial_margin': '1.728888', 'avg_price': '3397.31'}
2024-06-30 18:04:28.193 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 18:04:28.194 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:04:32.447 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 18:04:32.448 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x7201ffd9fce4aecc05b4d42f8d4284de17c01bc7118aba44ca02aaae3b9d31ae', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719763471395900915', 'timestamp': '1719763471395900915', 'system_type': 'API', 'initial_margin': '1.726466', 'avg_price': '3395.58'}
2024-06-30 18:04:37.715 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 18:04:37.717 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:04:39.917 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 18:04:39.918 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xf0a1747379e7a2f8f1a417505a796508b284cc75a69b43ad2ccb604be10e137e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719763479731300286', 'timestamp': '1719763479731300286', 'system_type': 'API', 'initial_margin': '1.72501', 'avg_price': '3395.26'}
2024-06-30 18:08:28.191 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 18:08:28.191 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:08:34.712 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 18:08:34.714 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x1b51130951772fbde963cb2b6ac8f7135057f4134e1d15a20924ad38b0c5052a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719763711393671281', 'timestamp': '1719763711393671281', 'system_type': 'API', 'initial_margin': '1.72364', 'avg_price': '3392.56'}
2024-06-30 18:08:40.323 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 18:08:40.324 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:08:43.054 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 18:08:43.055 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xe67032697501ddd257148774c37dc555ef06a429dbea122ed3c870b282b935e0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719763722714065224', 'timestamp': '1719763722714065224', 'system_type': 'API', 'initial_margin': '1.723552', 'avg_price': '3392.6'}
2024-06-30 18:13:25.327 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 18:13:25.328 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:13:28.254 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 18:13:28.255 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x021dfda3688abc68d620ea50837ed0a4ad9b5dbcfd06fb1e62e279ecf5617323', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719764007798821039', 'timestamp': '1719764007798821039', 'system_type': 'API', 'initial_margin': '1.723742', 'avg_price': '3390.58'}
2024-06-30 18:13:32.717 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 18:13:32.717 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:13:35.868 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 18:13:35.869 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x133a0a2bf50365279858ce50bbc1c205c792574d5a0e2c76785cb5f7a0827593', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719764015197204093', 'timestamp': '1719764015197204093', 'system_type': 'API', 'initial_margin': '1.723723', 'avg_price': '3390.85'}
2024-06-30 18:15:15.631 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-06-30 18:15:15.631 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:15:17.343 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-06-30 18:15:17.343 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x4ad84c554e55f169fd1c92a5d8eae566d52adb7e5ec08075a9cec3ce7f155000', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719764117117851366', 'timestamp': '1719764117117851366', 'system_type': 'API', 'initial_margin': '1.723677', 'avg_price': '3393.07'}
2024-06-30 18:15:20.469 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-06-30 18:15:20.470 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:15:22.352 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-06-30 18:15:22.354 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x10edd388232dbd7be3a5c55a2098459d8748d37c1d91f50230f23538b604dc81', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719764121989688788', 'timestamp': '1719764121989688788', 'system_type': 'API', 'initial_margin': '1.727289', 'avg_price': '3393.17'}
2024-06-30 18:17:44.227 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-06-30 18:17:45.803 | INFO     | __main__:close_positions:85 - Found 1 open positions.
2024-06-30 18:17:45.804 | INFO     | __main__:close_positions:88 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3392.40769', 'avg_entry_price': '3393.17', 'unrealized_pnl': '-0.007623', 'maintenance_margin': '1.017951', 'liquidation_price': '3043.401749', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-30 18:17:45.804 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-06-30 18:17:47.403 | INFO     | __main__:close_positions:101 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3392.40769', 'avg_entry_price': '3393.17', 'unrealized_pnl': '-0.007623', 'maintenance_margin': '1.017951', 'liquidation_price': '3043.401749', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-06-30 18:17:47.404 | INFO     | __main__:close_positions:102 - Result: {'order_id': '0x8d74325bb9242bc6a87e0b4495aa25f11be86b993982ec093eaabb8b4fb46a9a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719764267225151562', 'timestamp': '1719764267225151562', 'system_type': 'API', 'initial_margin': '1.723439', 'avg_price': '3392.6'}
2024-07-01 16:31:28.595 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 16:31:28.627 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 16:31:30.088 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 16:31:30.089 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xef77d8e3544411db6cfd687f22a7f8767c4bce0e4d5aa6232c1ec0396426ae5f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719844289921550186', 'timestamp': '1719844289921550186', 'system_type': 'API', 'initial_margin': '1.758631', 'avg_price': '3456.73'}
2024-07-01 16:35:19.795 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 16:35:19.802 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 16:35:21.231 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 16:35:21.232 | INFO     | __main__:sell_market:59 - Response: {'error': 'INVALID_AMOUNT_STEP_SIZE'}
2024-07-01 16:35:23.515 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 16:35:23.516 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 16:35:25.056 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 16:35:25.059 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xe8233e3d9843ab6b84d4e6bddbac8f1f863693328c977ef4902b68a8e6709622', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719844524888788152', 'timestamp': '1719844524888788152', 'system_type': 'API', 'initial_margin': '1.761301', 'avg_price': '3455.76'}
2024-07-01 16:36:37.583 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 16:36:37.583 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 16:36:39.083 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 16:36:39.085 | INFO     | __main__:sell_market:59 - Response: {'error': 'INVALID_AMOUNT_STEP_SIZE'}
2024-07-01 16:36:41.469 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 16:36:41.469 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 16:36:42.958 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 16:36:42.959 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x2022e3912d52fa712a573e766ea197f711946d4f0c5f4841f0ff424b87cec033', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719844602774694512', 'timestamp': '1719844602774694512', 'system_type': 'API', 'initial_margin': '1.757543', 'avg_price': '3459.72'}
2024-07-01 16:46:43.600 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 16:46:43.601 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 16:46:44.945 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 16:46:44.946 | INFO     | __main__:buy_market:42 - Response: {'error': 'INVALID_AMOUNT_STEP_SIZE'}
2024-07-01 16:47:31.114 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-01 16:47:32.831 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-01 17:51:30.701 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 17:51:30.702 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 17:51:32.341 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 17:51:32.343 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x2f7475e198dfaeaa8917f75cda6feaecccc3a181d8442bdd67f83c2538b1f347', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719849092138058298', 'timestamp': '1719849092138058298', 'system_type': 'API', 'initial_margin': '1.763839', 'avg_price': '3469.87'}
2024-07-01 18:04:18.808 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:04:18.809 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:04:20.487 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:04:20.490 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xb17d789eba9c3df71acc06414f86469bf27452cc7786277b05abfa7ce7a434c5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719849860233617135', 'timestamp': '1719849860233617135', 'system_type': 'API', 'initial_margin': '1.761631', 'avg_price': '3465.99'}
2024-07-01 18:04:23.191 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:04:23.192 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:04:25.047 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:04:25.048 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x5ce9faa8d8ff22b370bbfc1dd7a77eed35c0c6f13e55917c27b84a2abaf84254', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719849864868390470', 'timestamp': '1719849864868390470', 'system_type': 'API', 'initial_margin': '1.762493', 'avg_price': '3465.44'}
2024-07-01 18:05:26.512 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:05:26.513 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:05:28.293 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:05:28.294 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x0fa338d63609d9d089cc9f8290998ff9529e1463752fe146a6291a0499623e7f', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719849928122969257', 'timestamp': '1719849928122969257', 'system_type': 'API', 'initial_margin': '1.761086', 'avg_price': '3460.11'}
2024-07-01 18:05:30.929 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:05:30.930 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:05:32.635 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:05:32.640 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0xaccfd430a585de074aec6a84860f5d1a691d542065fa1eb5b79fdfc9505523a7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719849932448238854', 'timestamp': '1719849932448238854', 'system_type': 'API', 'initial_margin': '1.759774', 'avg_price': '3462.24'}
2024-07-01 18:08:43.974 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:08:43.975 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:08:45.817 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:08:45.820 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x7e6e5b03dd514c957459d8d08b55332a22e6f092ee30635564cedf087f4c7a4a', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719850125570332130', 'timestamp': '1719850125570332130', 'system_type': 'API', 'initial_margin': '1.760714', 'avg_price': '3465.98'}
2024-07-01 18:08:48.184 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:08:48.185 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:08:51.224 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:08:51.226 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x3d34fd18e8e518915cd86e677bfabae8b142320ba1373e0cf2765e1ccd4275be', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719850129880786991', 'timestamp': '1719850129880786991', 'system_type': 'API', 'initial_margin': '1.765839', 'avg_price': '3466.46'}
2024-07-01 18:09:25.104 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:09:25.119 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:09:27.065 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:09:27.066 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x39addba72bb9429090ec4460bbfc9d1b8027ab63b39e8f9cb2d0acaa1ab586e7', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719850166713386164', 'timestamp': '1719850166713386164', 'system_type': 'API', 'initial_margin': '1.762676', 'avg_price': '3469.84'}
2024-07-01 18:09:29.632 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:09:29.633 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:09:31.433 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:09:31.434 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x9cf253a95b924fc4dad720d2a79cba05bf686755d1124455ea7cc1ad4ca5aa1e', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719850171263402155', 'timestamp': '1719850171263402155', 'system_type': 'API', 'initial_margin': '1.765933', 'avg_price': '3470.17'}
2024-07-01 18:14:29.577 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:14:29.578 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:14:31.598 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:14:31.599 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x5364483867a457d20d0c71ae6342958b7f5f374a186b24b326b4ee3ffbf3f814', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719850471392323325', 'timestamp': '1719850471392323325', 'system_type': 'API', 'initial_margin': '1.76441', 'avg_price': '3472.57'}
2024-07-01 18:14:34.377 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:14:34.377 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:14:35.923 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:14:35.938 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x9b797417100f16ef8cfd5215df8a1eae9d6fe407429e537bf14476dd460e43f5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719850475780259392', 'timestamp': '1719850475780259392', 'system_type': 'API', 'initial_margin': '1.77043', 'avg_price': '3472.01'}
2024-07-01 18:20:48.413 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:20:48.414 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:20:49.924 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:20:49.926 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0x5064c6e00944b704f50b59182d2c9f267c69d0c1dc1e821450e06ba0692557cb', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719850849756323873', 'timestamp': '1719850849756323873', 'system_type': 'API', 'initial_margin': '1.763383', 'avg_price': '3468.26'}
2024-07-01 18:20:52.734 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:20:52.738 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:20:54.819 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:20:54.820 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x470935cf3eebfc328ab5bf2c965289bb8234962810f135c5b724d454542a05ca', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719850854361760978', 'timestamp': '1719850854361760978', 'system_type': 'API', 'initial_margin': '1.763777', 'avg_price': '3468.15'}
2024-07-01 18:26:53.074 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:26:53.074 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:26:54.819 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:26:54.820 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xd52b14c4979b04a144bc678853bd4abdcd20fa0179a386ca2dd53c8f55fb1f14', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719851214622519658', 'timestamp': '1719851214622519658', 'system_type': 'API', 'initial_margin': '1.760468', 'avg_price': '3463.19'}
2024-07-01 18:26:57.430 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:26:57.431 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:26:59.861 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:26:59.863 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x4305529d7f8973d976f7cdb082767cb35164d77c36c1327b3dfd765226080a60', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719851219573419799', 'timestamp': '1719851219573419799', 'system_type': 'API', 'initial_margin': '1.768235', 'avg_price': '3464.3'}
2024-07-01 18:28:27.307 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 18:28:27.311 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:28:28.943 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 18:28:28.945 | INFO     | __main__:sell_market:59 - Response: {'order_id': '0xe3921e355016e18cef2520a2122579855ef015a409341927f7c2d04f7f9158fa', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719851308803848971', 'timestamp': '1719851308803848971', 'system_type': 'API', 'initial_margin': '1.763079', 'avg_price': '3466.23'}
2024-07-01 18:28:31.272 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 18:28:31.272 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:28:33.297 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 18:28:33.301 | INFO     | __main__:buy_market:42 - Response: {'order_id': '0x4e23421ceb427b4a9575a24ffc7de1574cdaa799faf9e690723118326abe50f0', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'buy', 'amount': '0.01', 'price': '115792089237316200000000000000000000000000000000000000000000000000000000', 'filled': '0.01', 'created_timestamp': '1719851312786504907', 'timestamp': '1719851312786504907', 'system_type': 'API', 'initial_margin': '1.762919', 'avg_price': '3466.64'}
2024-07-01 18:29:57.909 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-01 18:29:59.301 | INFO     | __main__:close_positions:85 - Found 1 open positions.
2024-07-01 18:29:59.301 | INFO     | __main__:close_positions:88 - Open position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3466.241153', 'avg_entry_price': '3466.64', 'unrealized_pnl': '-0.003988', 'maintenance_margin': '1.039992', 'liquidation_price': '3191.7568', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-07-01 18:29:59.302 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Mainnet', 'version': '1', 'chainId': '1'}
2024-07-01 18:30:00.739 | INFO     | __main__:close_positions:101 - Closed position: {'asset': 'ETH', 'instrument_id': '1', 'instrument_name': 'ETH-PERP', 'instrument_type': 'PERPETUAL', 'amount': '0.01', 'side': 'buy', 'mark_price': '3466.241153', 'avg_entry_price': '3466.64', 'unrealized_pnl': '-0.003988', 'maintenance_margin': '1.039992', 'liquidation_price': '3191.7568', 'margin_type': 'CROSS', 'closePositionTriggers': {}, 'partialPositionTriggers': {}}
2024-07-01 18:30:00.741 | INFO     | __main__:close_positions:102 - Result: {'order_id': '0xa171049b13b8ffcb70eacf8d7a794b9bccd3a17fb5cb4ac525d1af51bd4447c5', 'account': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'instrument_name': 'ETH-PERP', 'instrument_id': '1', 'instrument_type': 'PERPETUAL', 'order_type': 'market', 'order_status': 'filled', 'side': 'sell', 'amount': '0.01', 'price': '0', 'filled': '0.01', 'created_timestamp': '1719851400604860260', 'timestamp': '1719851400604860260', 'system_type': 'API', 'initial_margin': '1.761516', 'avg_price': '3466.28'}
2024-07-01 20:25:53.492 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 20:25:53.524 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:25:54.942 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 20:25:54.942 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:26:21.568 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-01 20:26:22.892 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-01 20:27:56.552 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 20:27:56.552 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:27:59.366 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 20:27:59.367 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:30:30.912 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 20:30:30.914 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:30:32.426 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 20:30:32.427 | INFO     | __main__:sell_market:59 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:30:34.780 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 20:30:34.781 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:30:36.275 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 20:30:36.276 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:31:53.623 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 20:31:53.624 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:31:55.074 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 20:31:55.074 | INFO     | __main__:sell_market:59 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:31:57.669 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 20:31:57.670 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:31:59.019 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 20:31:59.020 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:41:38.200 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 20:41:38.201 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:41:39.709 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 20:41:39.711 | INFO     | __main__:sell_market:59 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:41:41.839 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 20:41:41.855 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:41:43.209 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 20:41:43.211 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:43:27.821 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-01 20:43:27.822 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:43:29.312 | INFO     | __main__:sell_market:58 - Market sell order request sent successfully
2024-07-01 20:43:29.314 | INFO     | __main__:sell_market:59 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:43:31.601 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-01 20:43:31.601 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-01 20:43:33.109 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-01 20:43:33.110 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-01 20:43:47.105 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-01 20:43:48.521 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 11:54:22.543 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 11:54:22.591 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 11:54:24.254 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 11:54:24.256 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 12:07:10.023 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 12:07:11.690 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 12:07:14.433 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 12:07:14.434 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 12:07:16.271 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 12:07:16.272 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 12:18:24.205 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 12:18:31.110 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 12:18:38.154 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 12:18:38.159 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 12:18:43.146 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 12:18:43.148 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 12:39:45.039 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 12:39:46.599 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 12:39:49.309 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 12:39:49.310 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 12:39:51.100 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 12:39:51.102 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 13:35:50.336 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 13:35:51.957 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 13:35:54.374 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 13:35:54.376 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 13:35:56.336 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 13:35:56.337 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 14:04:33.695 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 14:04:35.258 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 14:04:37.766 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 14:04:37.769 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 14:04:39.511 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 14:04:39.513 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 14:10:24.350 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 14:10:25.946 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 14:10:28.475 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 14:10:28.476 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 14:10:30.141 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 14:10:30.142 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 14:18:45.160 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 14:18:46.660 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 14:18:49.242 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 14:18:49.243 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 14:18:51.276 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 14:18:51.277 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 14:44:27.022 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 14:44:28.546 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 14:44:31.180 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 14:44:31.180 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 14:44:32.847 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 14:44:32.848 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 14:47:16.184 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 14:47:17.784 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 14:47:20.381 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 14:47:20.382 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 14:47:22.558 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 14:47:22.559 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 14:50:26.977 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 14:50:28.513 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 14:50:31.170 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 14:50:31.171 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 14:50:32.987 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 14:50:32.988 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:26:27.529 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:26:29.120 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:26:31.524 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:26:31.525 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:26:33.157 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:26:33.158 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:33:28.701 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:33:30.734 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:33:33.546 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:33:33.547 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:33:35.351 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:33:35.352 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:34:08.905 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:34:10.465 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:34:13.174 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:34:13.174 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:34:14.742 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:34:14.743 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:35:20.841 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:35:22.361 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:35:25.157 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:35:25.161 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:35:26.892 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:35:26.897 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:36:30.404 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:36:33.527 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:36:36.311 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:36:36.311 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:36:38.405 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:36:38.406 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:38:15.043 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:38:16.719 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:38:19.202 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:38:19.202 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:38:21.324 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:38:21.325 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:38:57.519 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:38:59.020 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:39:01.924 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:39:01.926 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:39:03.524 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:39:03.525 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:40:36.909 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:40:38.459 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:40:40.929 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:40:40.930 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:40:42.666 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:40:42.670 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:42:03.373 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:42:05.034 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:42:07.507 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:42:07.508 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:42:09.361 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:42:09.362 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:43:02.368 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:43:03.922 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:43:06.401 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:43:06.402 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:43:07.950 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:43:07.951 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:43:43.083 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:43:44.744 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:43:47.476 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:43:47.477 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:43:49.282 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:43:49.283 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:44:18.915 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:44:20.438 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:44:23.206 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:44:23.206 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:44:24.745 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:44:24.747 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:44:52.676 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:44:54.133 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:44:56.610 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:44:56.611 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:44:58.365 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:44:58.367 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:45:19.377 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:45:20.964 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:45:23.903 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:45:23.905 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:45:25.554 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:45:25.555 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:46:21.763 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:46:23.391 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:46:25.995 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:46:25.996 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:46:27.623 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:46:27.624 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:50:28.162 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:50:29.890 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:50:32.521 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:50:32.522 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:50:34.298 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:50:34.300 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:55:20.599 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:55:22.133 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:55:24.949 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:55:24.950 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:55:26.604 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:55:26.605 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:55:50.968 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:55:52.445 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:55:54.961 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:55:54.965 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:55:56.445 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:55:56.446 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:57:50.458 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:57:51.969 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 15:57:54.378 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 15:57:54.378 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 15:57:55.930 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 15:57:55.931 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 15:59:56.986 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 15:59:58.548 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:00:00.989 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:00:00.992 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:00:02.592 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:00:02.594 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:00:54.144 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:00:55.808 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:00:59.715 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:00:59.716 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:01:01.301 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:01:01.302 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:01:18.191 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:01:19.840 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:01:22.465 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:01:22.465 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:01:24.239 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:01:24.240 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:10:27.495 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:10:29.014 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:10:31.655 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:10:31.656 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:10:33.947 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:10:33.950 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:10:55.493 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:10:57.509 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:11:00.061 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:11:00.062 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:11:01.752 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:11:01.758 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:12:16.437 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:12:18.340 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:12:22.664 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:12:22.664 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:12:24.651 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:12:24.655 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:13:19.332 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:13:22.794 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:13:27.449 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:13:27.451 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:13:29.169 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:13:29.170 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:15:32.499 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:15:34.158 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:15:36.695 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:15:36.698 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:15:38.797 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:15:38.798 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:15:57.001 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:15:58.532 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 16:16:01.204 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 16:16:01.204 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 16:16:02.818 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 16:16:02.818 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 16:16:16.452 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 16:16:18.122 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 17:08:39.795 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 17:08:39.796 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 17:08:41.457 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 17:08:41.458 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 17:13:55.064 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 17:13:56.520 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 17:13:58.966 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 17:13:58.966 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 17:14:00.558 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 17:14:00.559 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 17:28:42.245 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 17:28:43.653 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 17:28:46.330 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 17:28:46.330 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 17:28:48.002 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 17:28:48.002 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 17:36:38.957 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 17:36:40.419 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 17:36:43.061 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 17:36:43.062 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 17:36:44.678 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 17:36:44.679 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 17:38:50.509 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 17:38:51.982 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 17:38:54.507 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 17:38:54.507 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 17:38:56.065 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 17:38:56.066 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 18:03:18.520 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 18:03:20.013 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 18:03:22.799 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 18:03:22.800 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 18:03:24.449 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 18:03:24.450 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 18:10:28.457 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 18:10:29.893 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 18:10:32.389 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 18:10:32.389 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 18:10:33.931 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 18:10:33.932 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 18:13:27.259 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 18:13:28.722 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 18:13:31.194 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 18:13:31.195 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 18:13:32.826 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 18:13:32.827 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 18:17:15.313 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 18:17:16.855 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 18:17:19.255 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 18:17:19.256 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 18:17:20.778 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 18:17:20.779 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 18:45:39.884 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 18:45:41.617 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 18:45:44.170 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 18:45:44.170 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 18:45:45.845 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 18:45:45.849 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 19:01:28.955 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 19:01:30.657 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 19:01:33.751 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 19:01:33.756 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 19:01:35.727 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 19:01:35.728 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 19:24:43.582 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 19:24:45.108 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-02 19:24:47.662 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-02 19:24:47.663 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-02 19:24:49.215 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-02 19:24:49.216 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-02 19:28:35.860 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-02 19:28:37.413 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:11:29.645 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:11:29.645 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:11:31.323 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:11:31.324 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:15:17.715 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:15:20.819 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:15:25.406 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:15:25.407 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:15:28.404 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:15:28.405 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:15:57.300 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:15:58.736 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:16:01.224 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:16:01.225 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:16:02.711 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:16:02.712 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:16:28.890 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:16:30.417 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:16:34.233 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:16:34.234 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:16:36.116 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:16:36.118 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:17:50.747 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:17:52.285 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:17:54.831 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:17:54.832 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:17:56.544 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:17:56.551 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:18:41.747 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:18:48.974 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:19:27.826 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:19:27.826 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:19:37.453 | ERROR    | __main__:buy_market:45 - An error occurred while creating market buy order: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
Traceback (most recent call last):

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py", line 790, in urlopen
    response = self._make_request(
               │    └ <function HTTPConnectionPool._make_request at 0x7e378878fba0>
               └ <urllib3.connectionpool.HTTPSConnectionPool object at 0x7e3784afcfb0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py", line 536, in _make_request
    response = conn.getresponse()
               │    └ <function HTTPConnection.getresponse at 0x7e3788763e20>
               └ <urllib3.connection.HTTPSConnection object at 0x7e3784afe1e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/connection.py", line 461, in getresponse
    httplib_response = super().getresponse()
  File "/usr/lib/python3.12/http/client.py", line 1428, in getresponse
    response.begin()
    │        └ <function HTTPResponse.begin at 0x7e37888e2160>
    └ <http.client.HTTPResponse object at 0x7e3784afe320>
  File "/usr/lib/python3.12/http/client.py", line 331, in begin
    version, status, reason = self._read_status()
                              │    └ <function HTTPResponse._read_status at 0x7e37888e20c0>
                              └ <http.client.HTTPResponse object at 0x7e3784afe320>
  File "/usr/lib/python3.12/http/client.py", line 300, in _read_status
    raise RemoteDisconnected("Remote end closed connection without"
          └ <class 'http.client.RemoteDisconnected'>

http.client.RemoteDisconnected: Remote end closed connection without response


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/adapters.py", line 486, in send
    resp = conn.urlopen(
           │    └ <function HTTPConnectionPool.urlopen at 0x7e378878fd80>
           └ <urllib3.connectionpool.HTTPSConnectionPool object at 0x7e3784afcfb0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py", line 844, in urlopen
    retries = retries.increment(
              │       └ <function Retry.increment at 0x7e3788908d60>
              └ Retry(total=0, connect=None, read=False, redirect=None, status=None)
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/util/retry.py", line 470, in increment
    raise reraise(type(error), error, _stacktrace)
          │            │       │      └ <traceback object at 0x7e3784aebdc0>
          │            │       └ ProtocolError('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
          │            └ ProtocolError('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
          └ <function reraise at 0x7e37888e7380>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/util/util.py", line 38, in reraise
    raise value.with_traceback(tb)
          │                    └ None
          └ None
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py", line 790, in urlopen
    response = self._make_request(
               │    └ <function HTTPConnectionPool._make_request at 0x7e378878fba0>
               └ <urllib3.connectionpool.HTTPSConnectionPool object at 0x7e3784afcfb0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/connectionpool.py", line 536, in _make_request
    response = conn.getresponse()
               │    └ <function HTTPConnection.getresponse at 0x7e3788763e20>
               └ <urllib3.connection.HTTPSConnection object at 0x7e3784afe1e0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/urllib3/connection.py", line 461, in getresponse
    httplib_response = super().getresponse()
  File "/usr/lib/python3.12/http/client.py", line 1428, in getresponse
    response.begin()
    │        └ <function HTTPResponse.begin at 0x7e37888e2160>
    └ <http.client.HTTPResponse object at 0x7e3784afe320>
  File "/usr/lib/python3.12/http/client.py", line 331, in begin
    version, status, reason = self._read_status()
                              │    └ <function HTTPResponse._read_status at 0x7e37888e20c0>
                              └ <http.client.HTTPResponse object at 0x7e3784afe320>
  File "/usr/lib/python3.12/http/client.py", line 300, in _read_status
    raise RemoteDisconnected("Remote end closed connection without"
          └ <class 'http.client.RemoteDisconnected'>

urllib3.exceptions.ProtocolError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))


During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7e378949b380>
    └ <Thread(Thread-13 (process_request_thread), started daemon 138776898700992)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7e378949b060>
    └ <Thread(Thread-13 (process_request_thread), started daemon 138776898700992)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-13 (process_request_thread), started daemon 138776898700992)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43980)>, ('10.0.2.15', 43980))
    │    │        └ <Thread(Thread-13 (process_request_thread), started daemon 138776898700992)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7e37859d4c50>>
    └ <Thread(Thread-13 (process_request_thread), started daemon 138776898700992)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 43980)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43980)>
    │    └ <function BaseServer.finish_request at 0x7e3785385440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e37859d4c50>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e37859d4c50>
    │    │                   │        └ ('10.0.2.15', 43980)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 43980)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e37859d4c50>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7e3784d836a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7e3784bd4710>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7e3785387ba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7e3784bd4710>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7e3784bd4710>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e37859d4c50>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7e3784bd4710>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7e3784aed760>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7e3784aed620>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7e3784aed620>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7e3784ab8fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7e3784ab8720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7e3784ab8680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'buy'
           │    │           │    │              └ <Rule '/long' (OPTIONS, POST) -> buy>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7e3784aec180>, 'buy': <function buy at 0x7e3784aec2c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7e3784ab8900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 162, in buy

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object buy_market at 0x7e3784a7af20>
           │      └ <function Runner.run at 0x7e3788b10400>
           └ <asyncio.runners.Runner object at 0x7e3784afd550>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-31' coro=<buy_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:45> cb=[_ru...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7e3788b06020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7e3784afd550>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7e3788b05f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7e3788b07d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7e37891aa2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e3784afd270>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e3784afd270>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e3784afd270>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e3784afd270>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 35, in buy_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7e3785376b60>
               └ <aevo.AevoClient object at 0x7e3784bd5fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 239, in rest_create_market_order
    req = self.client.post(
          │    │      └ <function post at 0x7e3788532f20>
          │    └ <module 'requests' from '/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/__init__.py'>
          └ <aevo.AevoClient object at 0x7e3784bd5fd0>

  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 115, in post
    return request("post", url, data=data, json=json, **kwargs)
           │               │         │          │       └ {'headers': {'AEVO-KEY': 'NubQ5vqqLqjrW19CAENA79f35HjQ1Nvi', 'AEVO-SECRET': '76baae08e59ea41d571a5ef324a732cb03dfee226966c417...
           │               │         │          └ {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price': '11579208923731619542...
           │               │         └ None
           │               └ 'https://api-testnet.aevo.xyz/orders'
           └ <function request at 0x7e37886e9f80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/api.py", line 59, in request
    return session.request(method=method, url=url, **kwargs)
           │       │              │           │      └ {'data': None, 'json': {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'is_buy': True, 'instrument': 1, 'limit_price'...
           │       │              │           └ 'https://api-testnet.aevo.xyz/orders'
           │       │              └ 'post'
           │       └ <function Session.request at 0x7e37885323e0>
           └ <requests.sessions.Session object at 0x7e3784afde80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
           │    │    │       └ {'timeout': None, 'allow_redirects': True, 'proxies': OrderedDict(), 'stream': False, 'verify': True, 'cert': None}
           │    │    └ <PreparedRequest [POST]>
           │    └ <function Session.send at 0x7e37885328e0>
           └ <requests.sessions.Session object at 0x7e3784afde80>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
        │       │    │          └ {'timeout': None, 'proxies': OrderedDict(), 'stream': False, 'verify': True, 'cert': None}
        │       │    └ <PreparedRequest [POST]>
        │       └ <function HTTPAdapter.send at 0x7e3788531d00>
        └ <requests.adapters.HTTPAdapter object at 0x7e3784afe0f0>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/requests/adapters.py", line 501, in send
    raise ConnectionError(err, request=request)
          │                            └ <PreparedRequest [POST]>
          └ <class 'requests.exceptions.ConnectionError'>

requests.exceptions.ConnectionError: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))
2024-07-03 14:24:17.385 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:24:22.150 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:24:24.879 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:24:24.880 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:24:26.472 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:24:26.473 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:27:33.847 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:27:48.822 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:32:13.890 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:32:13.892 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:32:18.318 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:32:18.318 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:32:49.130 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:32:51.848 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:38:44.296 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:38:44.296 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:38:45.918 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:38:45.919 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:39:25.484 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:39:30.458 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:39:38.507 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:39:38.508 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:39:42.379 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:39:42.380 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:42:11.920 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:42:14.162 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:42:17.048 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:42:17.048 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:42:18.816 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:42:18.817 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:46:17.405 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:46:18.961 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:46:21.672 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:46:21.672 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:46:23.401 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:46:23.401 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:47:35.205 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:47:36.738 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:47:39.278 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:47:39.278 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:47:40.844 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:47:40.845 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:48:24.182 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:48:25.755 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:48:28.193 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:48:28.205 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:48:29.872 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:48:29.874 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:49:43.808 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:49:45.513 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:49:48.052 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:49:48.053 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:49:50.108 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:49:50.110 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:50:39.290 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:50:40.808 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:50:43.351 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:50:43.352 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:50:45.168 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:50:45.169 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:51:22.757 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:51:24.420 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:51:26.989 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:51:26.991 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:51:28.531 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:51:28.532 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:52:34.618 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:52:36.092 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:52:38.559 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:52:38.559 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:52:40.214 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:52:40.215 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:53:17.518 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:53:19.152 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:53:21.669 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:53:21.669 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:53:23.199 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:53:23.200 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:53:59.324 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:54:01.005 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:54:03.685 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:54:03.689 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:54:05.380 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:54:05.381 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:54:38.032 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:54:39.559 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:54:42.071 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:54:42.072 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:54:43.605 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:54:43.606 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:56:30.791 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:56:32.398 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:56:34.966 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:56:34.967 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:56:36.578 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:56:36.579 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:59:19.142 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:59:20.685 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 14:59:23.082 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 14:59:23.083 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 14:59:24.709 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 14:59:24.710 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 14:59:56.234 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 14:59:57.634 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:00:00.124 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:00:00.125 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:00:01.682 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:00:01.683 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:01:19.995 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:01:21.661 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:01:24.248 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:01:24.248 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:01:25.810 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:01:25.811 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:02:28.002 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:02:30.438 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:02:34.023 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:02:34.024 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:02:36.328 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:02:36.330 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:05:14.758 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:05:16.307 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:05:18.773 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:05:18.777 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:05:20.397 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:05:20.398 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:08:05.461 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:08:06.954 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:08:09.547 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:08:09.548 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:08:11.188 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:08:11.189 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:09:09.901 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:09:11.432 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:09:14.754 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:09:14.754 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:09:16.388 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:09:16.389 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:10:14.004 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:10:16.150 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:10:19.213 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:10:19.214 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:10:20.933 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:10:20.934 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:10:48.768 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:10:50.408 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:10:53.032 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:10:53.032 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:10:54.640 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:10:54.641 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:11:25.556 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:11:27.135 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:11:30.315 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:11:30.316 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:11:32.097 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:11:32.098 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:13:33.018 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:13:34.745 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:13:37.284 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:13:37.284 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:13:39.009 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:13:39.015 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:15:29.757 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:15:31.359 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:15:33.930 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:15:33.930 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:15:35.634 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:15:35.635 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:17:26.084 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:17:27.879 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:17:30.401 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:17:30.401 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:17:32.010 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:17:32.016 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:28:55.162 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:28:56.917 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:28:59.432 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:28:59.433 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:29:01.017 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:29:01.019 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:31:16.587 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:31:18.120 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:31:20.709 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:31:20.709 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:31:22.357 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:31:22.359 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:32:10.707 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:32:12.425 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:32:14.869 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:32:14.869 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:32:16.503 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:32:16.503 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:37:39.413 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:37:41.468 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:37:45.662 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:37:45.662 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:37:48.222 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:37:48.232 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:40:46.733 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:40:48.257 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:40:50.760 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:40:50.761 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:40:52.334 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:40:52.336 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:43:33.208 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:43:34.758 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:43:37.210 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:43:37.211 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:43:38.903 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:43:38.904 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:45:02.547 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:45:04.082 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:45:07.245 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:45:07.246 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:45:08.948 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:45:08.949 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 15:53:39.325 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 15:53:40.920 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 15:53:43.412 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 15:53:43.415 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 15:53:45.283 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 15:53:45.295 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:00:09.410 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:00:10.908 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:00:13.722 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:00:13.723 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:00:15.375 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:00:15.376 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:03:21.232 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:03:22.817 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:03:25.417 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:03:25.418 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:03:27.189 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:03:27.190 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:06:39.253 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:06:40.887 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:06:43.397 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:06:43.398 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:06:45.088 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:06:45.089 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:07:10.286 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:07:11.720 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:07:14.139 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:07:14.140 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:07:15.859 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:07:15.864 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:08:34.520 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:08:35.995 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:08:38.533 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:08:38.533 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:08:40.096 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:08:40.097 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:17:55.744 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:17:57.350 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:17:59.915 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:17:59.916 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:18:01.561 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:18:01.561 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:21:37.199 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:21:38.642 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:21:41.212 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:21:41.212 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:21:42.792 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:21:42.793 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:25:45.072 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:25:46.621 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:25:49.136 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:25:49.137 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:25:50.719 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:25:50.720 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:27:46.784 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:27:48.326 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:27:50.729 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:27:50.729 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:27:52.253 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:27:52.254 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:30:27.621 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:30:29.087 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:30:31.871 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:30:31.872 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:30:33.542 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:30:33.543 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:30:59.138 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:31:00.658 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:31:03.144 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:31:03.144 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:31:04.712 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:31:04.713 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:36:07.298 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:36:08.909 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:36:11.430 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:36:11.430 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:36:13.099 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:36:13.099 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:38:21.773 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:38:23.246 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:38:25.695 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:38:25.696 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:38:27.397 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:38:27.398 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:41:47.575 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:41:50.978 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:41:55.828 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 16:41:55.828 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:41:58.562 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 16:41:58.563 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:43:09.862 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 16:43:11.322 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 16:46:30.263 | INFO     | __main__:buy_market:95 - Creating market buy order...
2024-07-03 16:46:30.264 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:46:31.921 | INFO     | __main__:buy_market:101 - Market buy order request sent successfully
2024-07-03 16:46:31.922 | INFO     | __main__:buy_market:102 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:49:31.504 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-03 16:49:33.040 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-03 16:56:30.732 | INFO     | __main__:buy_market:95 - Creating market buy order...
2024-07-03 16:56:30.733 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:56:32.224 | INFO     | __main__:buy_market:101 - Market buy order request sent successfully
2024-07-03 16:56:32.225 | INFO     | __main__:buy_market:102 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:56:52.843 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-03 16:56:54.313 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-03 16:57:53.424 | INFO     | __main__:buy_market:95 - Creating market buy order...
2024-07-03 16:57:53.425 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 16:57:55.060 | INFO     | __main__:buy_market:101 - Market buy order request sent successfully
2024-07-03 16:57:55.061 | INFO     | __main__:buy_market:102 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 16:58:09.180 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-03 16:58:10.638 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-03 17:07:08.882 | INFO     | __main__:buy_market:95 - Creating market buy order...
2024-07-03 17:07:08.883 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 17:07:10.697 | INFO     | __main__:buy_market:101 - Market buy order request sent successfully
2024-07-03 17:07:10.698 | INFO     | __main__:buy_market:102 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 17:07:32.343 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-03 17:07:33.977 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-03 17:19:45.208 | INFO     | __main__:sell_market:121 - Creating market sell order...
2024-07-03 17:19:45.208 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 17:19:45.209 | ERROR    | __main__:sell_market:132 - An error occurred while creating market sell order: can't convert negative int to unsigned
Traceback (most recent call last):

  File "/usr/lib/python3.12/threading.py", line 1030, in _bootstrap
    self._bootstrap_inner()
    │    └ <function Thread._bootstrap_inner at 0x7e0e52c9b380>
    └ <Thread(Thread-37 (process_request_thread), started daemon 138599890683584)>
  File "/usr/lib/python3.12/threading.py", line 1073, in _bootstrap_inner
    self.run()
    │    └ <function Thread.run at 0x7e0e52c9b060>
    └ <Thread(Thread-37 (process_request_thread), started daemon 138599890683584)>
  File "/usr/lib/python3.12/threading.py", line 1010, in run
    self._target(*self._args, **self._kwargs)
    │    │        │    │        │    └ {}
    │    │        │    │        └ <Thread(Thread-37 (process_request_thread), started daemon 138599890683584)>
    │    │        │    └ (<socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 52878)>, ('10.0.2.15', 52878))
    │    │        └ <Thread(Thread-37 (process_request_thread), started daemon 138599890683584)>
    │    └ <bound method ThreadingMixIn.process_request_thread of <werkzeug.serving.ThreadedWSGIServer object at 0x7e0e51741370>>
    └ <Thread(Thread-37 (process_request_thread), started daemon 138599890683584)>
  File "/usr/lib/python3.12/socketserver.py", line 692, in process_request_thread
    self.finish_request(request, client_address)
    │    │              │        └ ('10.0.2.15', 52878)
    │    │              └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 52878)>
    │    └ <function BaseServer.finish_request at 0x7e0e4f1ad440>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e0e51741370>
  File "/usr/lib/python3.12/socketserver.py", line 362, in finish_request
    self.RequestHandlerClass(request, client_address, self)
    │    │                   │        │               └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e0e51741370>
    │    │                   │        └ ('10.0.2.15', 52878)
    │    │                   └ <socket.socket fd=5, family=2, type=1, proto=0, laddr=('10.0.2.15', 5001), raddr=('10.0.2.15', 52878)>
    │    └ <class 'werkzeug.serving.WSGIRequestHandler'>
    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e0e51741370>
  File "/usr/lib/python3.12/socketserver.py", line 761, in __init__
    self.handle()
    │    └ <function WSGIRequestHandler.handle at 0x7e0e4ebab6a0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7e0e4f1c9310>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 391, in handle
    super().handle()
  File "/usr/lib/python3.12/http/server.py", line 436, in handle
    self.handle_one_request()
    │    └ <function BaseHTTPRequestHandler.handle_one_request at 0x7e0e4f1afba0>
    └ <werkzeug.serving.WSGIRequestHandler object at 0x7e0e4f1c9310>
  File "/usr/lib/python3.12/http/server.py", line 424, in handle_one_request
    method()
    └ <bound method WSGIRequestHandler.run_wsgi of <werkzeug.serving.WSGIRequestHandler object at 0x7e0e4f1c9310>>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 363, in run_wsgi
    execute(self.server.app)
    │       │    │      └ <Flask 'trade'>
    │       │    └ <werkzeug.serving.ThreadedWSGIServer object at 0x7e0e51741370>
    │       └ <werkzeug.serving.WSGIRequestHandler object at 0x7e0e4f1c9310>
    └ <function WSGIRequestHandler.run_wsgi.<locals>.execute at 0x7e0e4e215800>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/werkzeug/serving.py", line 324, in execute
    application_iter = app(environ, start_response)
                       │   │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7e0e4e215620>
                       │   └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
                       └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
           │    │        │        └ <function WSGIRequestHandler.run_wsgi.<locals>.start_response at 0x7e0e4e215620>
           │    │        └ {'wsgi.version': (1, 0), 'wsgi.url_scheme': 'http', 'wsgi.input': <_io.BufferedReader name=5>, 'wsgi.errors': <_io.TextIOWrap...
           │    └ <function Flask.wsgi_app at 0x7e0e4e3e4fe0>
           └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
               │    └ <function Flask.full_dispatch_request at 0x7e0e4e3e4720>
               └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
         │    └ <function Flask.dispatch_request at 0x7e0e4e3e4680>
         └ <Flask 'trade'>
  File "/home/lans/PycharmProjects/aevo_trade_example/.venv/lib/python3.12/site-packages/flask/app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           │    │           │    │              │    │            └ {}
           │    │           │    │              │    └ 'sell'
           │    │           │    │              └ <Rule '/short' (OPTIONS, POST) -> sell>
           │    │           │    └ {'static': <function Flask.__init__.<locals>.<lambda> at 0x7e0e4e214180>, 'buy': <function buy at 0x7e0e4e2142c0>, 'sell': <f...
           │    │           └ <Flask 'trade'>
           │    └ <function Flask.ensure_sync at 0x7e0e4e3e4900>
           └ <Flask 'trade'>

  File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 271, in sell
    result = asyncio.run(sell_market(keys.instrument_id, quan))
             │       │   │           │    │              └ -0.007
             │       │   │           │    └ 1
             │       │   │           └ <module 'keys' from '/home/lans/PycharmProjects/aevo_trade_example/keys.py'>
             │       │   └ <function sell_market at 0x7e0e4e3e7380>
             │       └ <function run at 0x7e0e529cca40>
             └ <module 'asyncio' from '/usr/lib/python3.12/asyncio/__init__.py'>

  File "/usr/lib/python3.12/asyncio/runners.py", line 194, in run
    return runner.run(main)
           │      │   └ <coroutine object sell_market at 0x7e0e4e39f970>
           │      └ <function Runner.run at 0x7e0e52310400>
           └ <asyncio.runners.Runner object at 0x7e0e4e22b740>
  File "/usr/lib/python3.12/asyncio/runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           │    │     │                  └ <Task pending name='Task-25' coro=<sell_market() running at /home/lans/PycharmProjects/aevo_trade_example/trade.py:132> cb=[_...
           │    │     └ <function BaseEventLoop.run_until_complete at 0x7e0e52306020>
           │    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
           └ <asyncio.runners.Runner object at 0x7e0e4e22b740>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 674, in run_until_complete
    self.run_forever()
    │    └ <function BaseEventLoop.run_forever at 0x7e0e52305f80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 641, in run_forever
    self._run_once()
    │    └ <function BaseEventLoop._run_once at 0x7e0e52307d80>
    └ <_UnixSelectorEventLoop running=True closed=False debug=False>
  File "/usr/lib/python3.12/asyncio/base_events.py", line 1987, in _run_once
    handle._run()
    │      └ <function Handle._run at 0x7e0e529aa2a0>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e0e4e22bbe0>()>
  File "/usr/lib/python3.12/asyncio/events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
    │    │            │    │           │    └ <member '_args' of 'Handle' objects>
    │    │            │    │           └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e0e4e22bbe0>()>
    │    │            │    └ <member '_callback' of 'Handle' objects>
    │    │            └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e0e4e22bbe0>()>
    │    └ <member '_context' of 'Handle' objects>
    └ <Handle <_asyncio.TaskStepMethWrapper object at 0x7e0e4e22bbe0>()>

> File "/home/lans/PycharmProjects/aevo_trade_example/trade.py", line 122, in sell_market
    response = aevo.rest_create_market_order(
               │    └ <function AevoClient.rest_create_market_order at 0x7e0e4f19eb60>
               └ <aevo.AevoClient object at 0x7e0e4e563650>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 230, in rest_create_market_order
    data, order_id = self.create_order_rest_json(
                     │    └ <function AevoClient.create_order_rest_json at 0x7e0e4f19f560>
                     └ <aevo.AevoClient object at 0x7e0e4e563650>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 428, in create_order_rest_json
    salt, signature, order_id = self.sign_order(
                                │    └ <function AevoClient.sign_order at 0x7e0e4f19f880>
                                └ <aevo.AevoClient object at 0x7e0e4e563650>

  File "/home/lans/PycharmProjects/aevo_trade_example/aevo.py", line 562, in sign_order
    signable_bytes = keccak(order_struct.signable_bytes(domain=domain))
                     │      │            │                     └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7e0e4e229220>
                     │      │            └ <function EIP712Struct.signable_bytes at 0x7e0e4f19d940>
                     │      └ <aevo.Order object at 0x7e0e4e22ad80>
                     └ <eth_hash.main.Keccak256 object at 0x7e0e51a549e0>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 462, in signable_bytes
    result = b"\x19\x01" + domain.hash_struct() + self.hash_struct()
                           │      │               │    └ <function EIP712Struct.hash_struct at 0x7e0e4f19d620>
                           │      │               └ <aevo.Order object at 0x7e0e4e22ad80>
                           │      └ <function EIP712Struct.hash_struct at 0x7e0e4f19d620>
                           └ <eip712_structs.make_domain.<locals>.EIP712Domain object at 0x7e0e4e229220>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 385, in hash_struct
    return keccak(b"".join([self.type_hash(), self.encode_value()]))
           │                │    │            │    └ <function EIP712Struct.encode_value at 0x7e0e4f19d120>
           │                │    │            └ <aevo.Order object at 0x7e0e4e22ad80>
           │                │    └ <classmethod(<function EIP712Struct.type_hash at 0x7e0e4f19d580>)>
           │                └ <aevo.Order object at 0x7e0e4e22ad80>
           └ <function keccak at 0x7e0e51a4c860>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 313, in encode_value
    encoded_values.append(typ.encode_value(self.values[name]))
    │              │      │   │            │    │      └ 'amount'
    │              │      │   │            │    └ {'maker': '0xD1a86753268899D56e2ff8b338b75aa45033b17e', 'isBuy': False, 'limitPrice': 0, 'amount': -7000, 'salt': 3686624681,...
    │              │      │   │            └ <aevo.Order object at 0x7e0e4e22ad80>
    │              │      │   └ <function EIP712Type.encode_value at 0x7e0e4f19c2c0>
    │              │      └ <eip712_structs.Uint object at 0x7e0e4f176480>
    │              └ <method 'append' of 'list' objects>
    └ [b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xd1\xa8gS&\x88\x99\xd5n/\xf8\xb38\xb7Z\xa4P3\xb1~', b'\x00\x00\x00\x00\x0...

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 40, in encode_value
    return self._encode_value(value)
           │    │             └ -7000
           │    └ <function Uint._encode_value at 0x7e0e4f19ce00>
           └ <eip712_structs.Uint object at 0x7e0e4f176480>

  File "/home/lans/PycharmProjects/aevo_trade_example/eip712_structs.py", line 210, in _encode_value
    value.to_bytes(
    │     └ <method 'to_bytes' of 'int' objects>
    └ -7000

OverflowError: can't convert negative int to unsigned
2024-07-03 17:27:10.555 | INFO     | __main__:buy_market:95 - Creating market buy order...
2024-07-03 17:27:10.556 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 17:27:12.333 | INFO     | __main__:buy_market:101 - Market buy order request sent successfully
2024-07-03 17:27:12.334 | INFO     | __main__:buy_market:102 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 17:27:29.998 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-03 17:27:31.478 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-03 17:42:54.871 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 17:42:54.872 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 17:42:57.524 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 17:42:57.526 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 17:47:21.723 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 17:47:32.866 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 17:47:39.196 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 17:47:39.197 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 17:47:41.275 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 17:47:41.280 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 17:49:06.501 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 17:49:08.934 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 17:49:14.218 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 17:49:14.218 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 17:49:16.465 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 17:49:16.466 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 17:56:05.632 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 17:56:11.845 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 17:56:22.789 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 17:56:22.793 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 17:56:26.042 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 17:56:26.046 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 18:02:51.626 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 18:02:53.509 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 18:02:56.369 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 18:02:56.371 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 18:02:59.250 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 18:02:59.255 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 18:04:24.783 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 18:04:26.867 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 18:04:30.851 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 18:04:30.851 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 18:04:33.032 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 18:04:33.034 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 18:06:10.905 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 18:06:13.138 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 18:06:16.795 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 18:06:16.798 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 18:06:23.864 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 18:06:23.877 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 18:07:58.720 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 18:08:07.347 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 18:08:23.673 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 18:08:23.674 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 18:08:27.248 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 18:08:27.249 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 18:10:13.321 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 18:10:17.422 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 18:10:24.127 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 18:10:24.128 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 18:10:28.765 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 18:10:28.766 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 18:11:52.850 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 18:11:55.995 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-03 18:43:35.883 | INFO     | __main__:buy_market:34 - Creating market buy order...
2024-07-03 18:43:35.884 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-03 18:43:40.262 | INFO     | __main__:buy_market:41 - Market buy order request sent successfully
2024-07-03 18:43:40.263 | INFO     | __main__:buy_market:42 - Response: {'error': 'UNAUTHORIZED'}
2024-07-03 18:43:56.594 | INFO     | __main__:close_positions:68 - Fetching open positions...
2024-07-03 18:43:58.500 | INFO     | __main__:close_positions:82 - No open positions found.
2024-07-06 14:49:07.643 | INFO     | __main__:sell_market:50 - Creating market sell order...
2024-07-06 14:49:07.674 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-06 14:49:11.843 | INFO     | __main__:sell_market:56 - Market sell order request sent successfully
2024-07-06 14:49:11.844 | INFO     | __main__:sell_market:57 - Response: {'error': 'UNAUTHORIZED'}
2024-07-06 14:51:30.446 | INFO     | __main__:close_positions:66 - Fetching open positions...
2024-07-06 14:51:46.678 | INFO     | __main__:close_positions:80 - No open positions found.
2024-07-06 16:24:39.877 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-06 16:24:41.459 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-06 16:29:01.132 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-06 16:29:02.606 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-06 16:40:22.087 | INFO     | __main__:sell_market:121 - Creating market sell order...
2024-07-06 16:40:22.087 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-06 16:40:23.721 | INFO     | __main__:sell_market:128 - Market sell order request sent successfully
2024-07-06 16:40:23.722 | INFO     | __main__:sell_market:129 - Response: {'error': 'UNAUTHORIZED'}
2024-07-06 16:44:05.092 | INFO     | __main__:sell_market:121 - Creating market sell order...
2024-07-06 16:44:05.094 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-06 16:44:06.640 | INFO     | __main__:sell_market:128 - Market sell order request sent successfully
2024-07-06 16:44:06.642 | INFO     | __main__:sell_market:129 - Response: {'error': 'UNAUTHORIZED'}
2024-07-06 16:45:23.067 | INFO     | __main__:sell_market:121 - Creating market sell order...
2024-07-06 16:45:23.068 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-06 16:45:24.768 | INFO     | __main__:sell_market:128 - Market sell order request sent successfully
2024-07-06 16:45:24.770 | INFO     | __main__:sell_market:129 - Response: {'error': 'UNAUTHORIZED'}
2024-07-06 16:48:13.674 | INFO     | __main__:sell_market:121 - Creating market sell order...
2024-07-06 16:48:13.675 | INFO     | aevo:sign_order:560 - {'name': 'Aevo Testnet', 'version': '1', 'chainId': '11155111'}
2024-07-06 16:48:15.259 | INFO     | __main__:sell_market:128 - Market sell order request sent successfully
2024-07-06 16:48:15.260 | INFO     | __main__:sell_market:129 - Response: {'error': 'UNAUTHORIZED'}
2024-07-06 16:50:55.091 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-06 16:50:56.658 | INFO     | __main__:close_positions:158 - No open positions found.
2024-07-08 14:49:13.247 | INFO     | __main__:close_positions:144 - Fetching open positions...
2024-07-08 14:49:14.973 | INFO     | __main__:close_positions:158 - No open positions found.
